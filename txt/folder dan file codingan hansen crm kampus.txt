app\Events\NewSurveyAssigned.php:
<?php

namespace App\Events;

use App\Models\Survey;
use App\Models\User;
use Illuminate\Broadcasting\Channel;
use Illuminate\Broadcasting\InteractsWithSockets;
use Illuminate\Broadcasting\PresenceChannel;
use Illuminate\Broadcasting\PrivateChannel;
use Illuminate\Contracts\Broadcasting\ShouldBroadcast;
use Illuminate\Foundation\Events\Dispatchable;
use Illuminate\Queue\SerializesModels;

class NewSurveyAssigned implements ShouldBroadcast
{
    use Dispatchable, InteractsWithSockets, SerializesModels;

    public $survey;
    public $user;

    /**
     * Create a new event instance.
     */
    public function __construct(Survey $survey, User $user)
    {
        $this->survey = $survey;
        $this->user = $user;
    }

    /**
     * Get the channels the event should broadcast on.
     */
    public function broadcastOn(): array
    {
        return [
            new PrivateChannel('user.'.$this->user->id),
        ];
    }

    /**
     * The event's broadcast name.
     */
    public function broadcastAs(): string
    {
        return 'survey.assigned';
    }

    /**
     * Get the data to broadcast.
     */
    public function broadcastWith(): array
    {
        return [
            'id' => $this->survey->id,
            'title' => $this->survey->title,
            'client_name' => $this->survey->client->name,
            'due_date' => $this->survey->due_date,
            'assigned_at' => now()->format('Y-m-d H:i:s'),
        ];
    }
}

app\Helpers\SettingsHelper.php:
<?php

namespace App\Helpers;

use App\Models\Setting;
use Illuminate\Support\Facades\Cache;

class SettingsHelper
{
    /**
     * Get a setting value
     */
    public static function get($key, $default = null)
    {
        $settings = self::getAllSettings();

        return $settings[$key] ?? $default;
    }

    /**
     * Get all settings
     */
    public static function getAllSettings()
    {
        return Cache::remember('settings', 60 * 24, function () {
            return Setting::getAllSettings();
        });
    }

    /**
     * Clear settings cache
     */
    public static function clearCache()
    {
        Cache::forget('settings');
    }

    /**
     * Get company logo URL
     */
    public static function getCompanyLogo()
    {
        $logo = self::get('company_logo');

        if ($logo && file_exists(public_path('storage/' . $logo))) {
            return asset('storage/' . $logo);
        }

        return asset('images/default-logo.png');
    }

    /**
     * Format date according to settings
     */
    public static function formatDate($date)
    {
        if (!$date) {
            return null;
        }

        if (is_string($date)) {
            $date = new \DateTime($date);
        }

        $format = self::get('date_format', 'd M Y');

        return $date->format($format);
    }

    /**
     * Format time according to settings
     */
    public static function formatTime($time)
    {
        if (!$time) {
            return null;
        }

        if (is_string($time)) {
            $time = new \DateTime($time);
        }

        $format = self::get('time_format', 'H:i');

        return $time->format($format);
    }

    /**
     * Format datetime according to settings
     */
    public static function formatDateTime($datetime)
    {
        if (!$datetime) {
            return null;
        }

        if (is_string($datetime)) {
            $datetime = new \DateTime($datetime);
        }

        $dateFormat = self::get('date_format', 'd M Y');
        $timeFormat = self::get('time_format', 'H:i');

        return $datetime->format("$dateFormat $timeFormat");
    }

    /**
     * Format currency according to settings
     */
    public static function formatCurrency($amount)
    {
        $currency = self::get('currency', 'IDR');

        switch ($currency) {
            case 'IDR':
                return 'Rp ' . number_format($amount, 0, ',', '.');
            case 'USD':
                return '$ ' . number_format($amount, 2, '.', ',');
            default:
                return $amount;
        }
    }
}

app\Http\Controllers\AuthController.php:
<?php

namespace App\Http\Controllers;

use App\Models\User;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;
use Illuminate\Validation\Rules;
use Illuminate\Auth\Events\Registered;
use Spatie\Permission\Models\Role;

class AuthController extends Controller
{
    /**
     * Show the login form.
     */
    public function showLoginForm()
    {
        return view('auth.login');
    }

    /**
     * Handle login request.
     */
    public function login(Request $request)
    {
        $credentials = $request->validate([
            'email' => 'required|email',
            'password' => 'required',
        ]);

        // Check if user exists and is active
        $user = User::where('email', $credentials['email'])->first();

        if ($user && !$user->is_active) {
            return back()->with('error', 'Your account is inactive. Please contact the administrator.');
        }

        if (Auth::attempt($credentials, $request->filled('remember'))) {
            // Update last login timestamp
            $user->last_login_at = now();
            $user->save();

            $request->session()->regenerate();
            return redirect()->intended(route('dashboard'));
        }

        return back()->withErrors([
            'email' => 'The provided credentials do not match our records.',
        ])->onlyInput('email');
    }

    /**
     * Show the registration form.
     */
    public function showRegistrationForm()
    {
        return view('auth.register');
    }

    /**
     * Handle registration request.
     */
    public function register(Request $request)
    {
        $request->validate([
            'name' => ['required', 'string', 'max:255'],
            'email' => ['required', 'string', 'email', 'max:255', 'unique:users'],
            'password' => ['required', 'confirmed', Rules\Password::defaults()],
        ]);

        $user = User::create([
            'name' => $request->name,
            'email' => $request->email,
            'password' => Hash::make($request->password),
            'is_active' => true,
        ]);

        // Assign default role
        $defaultRole = Role::where('name', 'user')->first();
        if ($defaultRole) {
            $user->assignRole($defaultRole);
        } else {
            // Fallback to direct role assignment if role doesn't exist
            $user->assignRole('user');
        }

        event(new Registered($user));

        Auth::login($user);

        return redirect(route('dashboard'));
    }

    /**
     * Handle logout request.
     */
    public function logout(Request $request)
    {
        Auth::logout();

        $request->session()->invalidate();
        $request->session()->regenerateToken();

        return redirect('/');
    }
}

app\Http\Controllers\ClientController.php:
<?php

namespace App\Http\Controllers;

use App\Models\Client;
use App\Models\User;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use App\Notifications\NewClientAssigned;
use Illuminate\Support\Facades\Notification;


class ClientController extends Controller
{
    // Remove __construct() method - middleware will be defined in routes
    
    public function index(Request $request)
    {
        $query = Client::with(['pic', 'projects']);
        
        // Search functionality
        if ($request->has('search')) {
            $search = $request->search;
            $query->where(function($q) use ($search) {
                $q->where('name', 'like', "%{$search}%")
                  ->orWhere('email', 'like', "%{$search}%")
                  ->orWhere('phone', 'like', "%{$search}%");
            });
        }
        
        // Filter by status
        if ($request->has('status') && $request->status != '') {
            $query->where('status', $request->status);
        }
        
        // Filter by PIC (for marketing role)
        if (Auth::user() && Auth::user()->hasRole('marketing')) {
            $query->where('pic_id', Auth::id());
        }
        
        $clients = $query->latest()->paginate(10);
        
        return view('clients.index', compact('clients'));
    }

    public function create()
    {
        $pics = User::role(['marketing', 'admin'])->get();
        return view('clients.create', compact('pics'));
    }

    public function store(Request $request)
    {
        
        $validated = $request->validate([
            'name' => 'required|string|max:255',
            'email' => 'nullable|email|unique:clients,email',
            'phone' => 'required|string|max:20',
            'whatsapp' => 'nullable|string|max:20',
            'address' => 'required|string',
            'pic_id' => 'required|exists:users,id',
            'source' => 'required|in:referral,website,walk-in,social-media,other',
            'source_detail' => 'nullable|string|max:255',
            'notes' => 'nullable|string'
        ]);
        
        // If marketing, force PIC to themselves
        if (Auth::user()->hasRole('marketing')) {
            $validated['pic_id'] = Auth::id();
        }
        
        $client = Client::create($validated);
        
        // Send notification to admin and managers
        $adminAndManagers = User::role(['admin', 'manager'])->get();
        
        if ($adminAndManagers->isNotEmpty()) {
            Notification::send($adminAndManagers, new NewClientAssigned($client, Auth::user()));
        }
        
        return redirect()->route('clients.show', $client)
            ->with('success', 'Client berhasil ditambahkan!');
    }

    public function show(Client $client)
    {
        // Check authorization
        if (Auth::user()->hasRole('marketing') && $client->pic_id != Auth::id()) {
            abort(403, 'Unauthorized');
        }
        
        $client->load(['projects', 'pic']);
        return view('clients.show', compact('client'));
    }

    public function edit(Client $client)
    {
        // Check authorization
        if (Auth::user()->hasRole('marketing') && $client->pic_id != Auth::id()) {
            abort(403, 'Unauthorized');
        }
        
        $pics = User::role(['marketing', 'admin'])->get();
        return view('clients.edit', compact('client', 'pics'));
    }

    public function update(Request $request, Client $client)
    {
        // Check authorization
        if (Auth::user()->hasRole('marketing') && $client->pic_id != Auth::id()) {
            abort(403, 'Unauthorized');
        }
        
        $validated = $request->validate([
            'name' => 'required|string|max:255',
            'email' => 'nullable|email|unique:clients,email,' . $client->id,
            'phone' => 'required|string|max:20',
            'whatsapp' => 'nullable|string|max:20',
            'address' => 'required|string',
            'status' => 'required|in:prospek,aktif,selesai',
            'pic_id' => 'required|exists:users,id',
            'source' => 'required|in:referral,website,walk-in,social-media,other',
            'source_detail' => 'nullable|string|max:255',
            'notes' => 'nullable|string'
        ]);
        
        // If marketing, force PIC to themselves
        if (Auth::user()->hasRole('marketing') && !Auth::user()->hasRole('admin')) {
            $validated['pic_id'] = Auth::id();
        }
        
        $client->update($validated);
        
        return redirect()->route('clients.show', $client)
            ->with('success', 'Data client berhasil diupdate!');
    }

    public function destroy(Client $client)
    {
        // Only admin can delete
        if (!Auth::user()->hasRole('admin')) {
            abort(403, 'Unauthorized');
        }
        
        // Check if client has projects
        if ($client->projects()->count() > 0) {
            return back()->with('error', 'Tidak dapat menghapus client yang memiliki project!');
        }
        
        $client->delete();
        
        return redirect()->route('clients.index')
            ->with('success', 'Client berhasil dihapus!');
    }
}

app\Http\Controllers\Controller.php:
<?php

namespace App\Http\Controllers;

abstract class Controller
{
    //
}

app\Http\Controllers\DashboardController.php:
<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\Client;
use App\Models\Project;
use App\Models\Survey;
use App\Models\User;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\DB;

class DashboardController extends Controller
{
    public function index()
    {
        $user = Auth::user();

        // Get user role
        $roles = $user->getRoleNames();
        $role = $roles->isNotEmpty() ? $roles->first() : 'default';

        // Get user statistics
        $totalUsers = User::count();
        $activeUsers = User::where('is_active', true)->count();
        $inactiveUsers = User::where('is_active', false)->count();

        // Get user roles distribution
        $roleDistribution = DB::table('model_has_roles')
            ->join('roles', 'model_has_roles.role_id', '=', 'roles.id')
            ->select('roles.name', DB::raw('count(*) as count'))
            ->where('model_type', 'App\Models\User')
            ->groupBy('roles.name')
            ->get();

        // Get recently registered users
        $recentUsers = User::with('roles')
            ->orderBy('created_at', 'desc')
            ->limit(5)
            ->get();

        // Get recent users (using created_at instead of last_login_at)
        $recentLogins = User::orderBy('created_at', 'desc')
            ->limit(5)
            ->get();

        // Count data
        $totalClients = Client::count();
        $activeProjects = Project::where('status', 'active')->count();
        $pendingSurveys = Survey::where('status', 'pending')->count();
        $pipelineValue = 2500000000; // Kept original dummy value

        // Monthly revenue data for chart (using sample data instead of DB query)
        // Since the 'value' column doesn't exist, we'll use sample data
        $monthNames = [
            'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
            'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'
        ];

        // Sample revenue data
        $revenueData = [
            'Jan' => 150,
            'Feb' => 240,
            'Mar' => 305,
            'Apr' => 480,
            'May' => 520,
            'Jun' => 670,
            'Jul' => 800,
            'Aug' => 950,
            'Sep' => 1100,
            'Oct' => 1220,
            'Nov' => 1330,
            'Dec' => 1450
        ];

        // Project status data (using predefined statuses if status column exists)
        $projectStatuses = ['Lead', 'Survey', 'Quotation', 'Negotiation', 'Deal', 'Execution', 'Completed'];

        try {
            // Try to get actual project status counts
            $projectStatus = Project::selectRaw('status, COUNT(*) as count')
                ->groupBy('status')
                ->get()
                ->pluck('count', 'status')
                ->toArray();
        } catch (\Exception $e) {
            // Use sample data if query fails
            $projectStatus = [
                'Lead' => 12,
                'Survey' => 8,
                'Quotation' => 6,
                'Negotiation' => 4,
                'Deal' => 3,
                'Execution' => 8,
                'Completed' => 5
            ];
        }

        // Common data
        $data = [
            'totalClients' => $totalClients,
            'activeProjects' => $activeProjects,
            'pendingSurveys' => $pendingSurveys,
            'pipelineValue' => $pipelineValue,
            'totalUsers' => $totalUsers,
            'activeUsers' => $activeUsers,
            'inactiveUsers' => $inactiveUsers,
            'roleDistribution' => $roleDistribution,
            'recentUsers' => $recentUsers,
            'recentLogins' => $recentLogins,
            'revenueData' => $revenueData,
            'projectStatus' => $projectStatus
        ];

        // Redirect to appropriate dashboard based on role
        switch ($role) {
            case 'admin':
                return view('dashboard.admin', $data);
            case 'manager':
                return view('dashboard.manager', $data);
            case 'marketing':
                $data['myClients'] = 45;
                $data['myProjects'] = 12;
                return view('dashboard.marketing', $data);
            case 'surveyor':
                $data['mySurveys'] = 28;
                $data['pendingSurveys'] = 3;
                return view('dashboard.surveyor', $data);
            default:
                // Fallback to admin view for testing
                return view('dashboard', $data);
        }
    }
}

app\Http\Controllers\DocumentController.php:
<?php

namespace App\Http\Controllers;

use App\Models\Document;
use App\Models\Project;
use App\Models\Client;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Str;

class DocumentController extends Controller
{
    public function __construct()
    {
        
    }

    public function index(Request $request)
    {
        $query = Document::with(['uploadedBy', 'documentable']);
        
        // Filter by type
        if ($request->has('type') && $request->type != '') {
            $query->where('type', $request->type);
        }
        
        // Filter by category
        if ($request->has('category') && $request->category != '') {
            $query->where('category', $request->category);
        }
        
        // Search
        if ($request->has('search')) {
            $search = $request->search;
            $query->where(function($q) use ($search) {
                $q->where('name', 'like', "%{$search}%")
                  ->orWhere('description', 'like', "%{$search}%");
            });
        }
        
        // Filter by date range
        if ($request->has('date_from')) {
            $query->whereDate('created_at', '>=', $request->date_from);
        }
        if ($request->has('date_to')) {
            $query->whereDate('created_at', '<=', $request->date_to);
        }
        
        // Role-based filtering
        if (Auth::user()->hasRole('marketing')) {
            $query->where(function($q) {
                $q->where('uploaded_by', Auth::id())
                  ->orWhereHasMorph('documentable', [Project::class], function($q) {
                      $q->where('pic_id', Auth::id());
                  })
                  ->orWhereHasMorph('documentable', [Client::class], function($q) {
                      $q->where('pic_id', Auth::id());
                  });
            });
        }
        
        $documents = $query->latest()->paginate(20);
        
        // Get statistics
        $stats = [
            'total_documents' => Document::count(),
            'total_size' => Document::sum('size'),
            'this_month' => Document::whereMonth('created_at', now()->month)->count(),
            'by_category' => Document::selectRaw('category, COUNT(*) as count')
                                    ->groupBy('category')
                                    ->pluck('count', 'category')
        ];
        
        return view('documents.index', compact('documents', 'stats'));
    }

    public function create(Request $request)
    {
        $projects = Project::with('client')->orderBy('name')->get();
        $clients = Client::orderBy('name')->get();
        
        // Pre-select if coming from project/client
        $preselected = [
            'type' => $request->type,
            'id' => $request->id
        ];
        
        return view('documents.create', compact('projects', 'clients', 'preselected'));
    }

    public function store(Request $request)
    {
        $validated = $request->validate([
            'name' => 'required|string|max:255',
            'category' => 'required|in:penawaran,kontrak,invoice,survey,design,progress,other',
            'type' => 'required|in:pdf,image,word,excel,other',
            'description' => 'nullable|string',
            'documentable_type' => 'required|in:project,client',
            'documentable_id' => 'required|integer',
            'file' => 'required|file|max:51200', // 50MB max
            'is_public' => 'boolean'
        ]);
        
        // Handle file upload
        if ($request->hasFile('file')) {
            $file = $request->file('file');
            $originalName = $file->getClientOriginalName();
            $extension = $file->getClientOriginalExtension();
            $size = $file->getSize();
            
            // Generate unique filename
            $filename = Str::uuid() . '.' . $extension;
            
            // Determine path based on documentable type
            $folder = $validated['documentable_type'] == 'project' ? 'projects' : 'clients';
            $path = $file->storeAs('documents/' . $folder . '/' . $validated['documentable_id'], $filename, 'public');
            
            // Get documentable model
            $documentableClass = $validated['documentable_type'] == 'project' 
                ? Project::class 
                : Client::class;
            
            $documentable = $documentableClass::findOrFail($validated['documentable_id']);
            
            // Create document record
            $document = new Document();
            $document->name = $validated['name'];
            $document->original_name = $originalName;
            $document->category = $validated['category'];
            $document->type = $this->determineFileType($extension);
            $document->description = $validated['description'];
            $document->path = $path;
            $document->size = $size;
            $document->extension = $extension;
            $document->uploaded_by = Auth::id();
            $document->is_public = $validated['is_public'] ?? false;
            $document->documentable()->associate($documentable);
            $document->save();
            
            return redirect()->route('documents.show', $document)
                ->with('success', 'Dokumen berhasil diupload!');
        }
        
        return back()->with('error', 'File tidak ditemukan.');
    }

    public function show(Document $document)
    {
        // Check authorization
        if (!$this->canAccessDocument($document)) {
            abort(403, 'Unauthorized');
        }
        
        $document->load(['uploadedBy', 'documentable']);
        
        // Get related documents
        $relatedDocuments = Document::where('documentable_type', $document->documentable_type)
                                   ->where('documentable_id', $document->documentable_id)
                                   ->where('id', '!=', $document->id)
                                   ->latest()
                                   ->limit(5)
                                   ->get();
        
        // Track view
        $document->increment('views');
        
        return view('documents.show', compact('document', 'relatedDocuments'));
    }

    public function edit(Document $document)
    {
        // Check authorization
        if (!Auth::user()->hasRole('admin') && $document->uploaded_by != Auth::id()) {
            abort(403, 'Unauthorized');
        }
        
        return view('documents.edit', compact('document'));
    }

    public function update(Request $request, Document $document)
    {
        // Check authorization
        if (!Auth::user()->hasRole('admin') && $document->uploaded_by != Auth::id()) {
            abort(403, 'Unauthorized');
        }
        
        $validated = $request->validate([
            'name' => 'required|string|max:255',
            'category' => 'required|in:penawaran,kontrak,invoice,survey,design,progress,other',
            'description' => 'nullable|string',
            'is_public' => 'boolean'
        ]);
        
        $document->update($validated);
        
        return redirect()->route('documents.show', $document)
            ->with('success', 'Dokumen berhasil diupdate!');
    }

    public function destroy(Document $document)
    {
        // Check authorization
        if (!Auth::user()->hasRole('admin') && $document->uploaded_by != Auth::id()) {
            abort(403, 'Unauthorized');
        }
        
        // Delete file from storage
        Storage::disk('public')->delete($document->path);
        
        // Delete database record
        $document->delete();
        
        return redirect()->route('documents.index')
            ->with('success', 'Dokumen berhasil dihapus!');
    }
    
    public function download(Document $document)
    {
        // Check authorization
        if (!$this->canAccessDocument($document)) {
            abort(403, 'Unauthorized');
        }
        
        // Check if file exists
        if (!Storage::disk('public')->exists($document->path)) {
            abort(404, 'File tidak ditemukan');
        }
        
        // Track download
        $document->increment('downloads');
        
        return Storage::disk('public')->download($document->path, $document->original_name);
    }
    
    public function preview(Document $document)
    {
        // Check authorization
        if (!$this->canAccessDocument($document)) {
            abort(403, 'Unauthorized');
        }
        
        // Only allow preview for certain file types
        $previewableTypes = ['pdf', 'image'];
        if (!in_array($document->type, $previewableTypes)) {
            return redirect()->route('documents.download', $document);
        }
        
        // Check if file exists
        if (!Storage::disk('public')->exists($document->path)) {
            abort(404, 'File tidak ditemukan');
        }
        
        $path = Storage::disk('public')->path($document->path);
        $mimeType = Storage::disk('public')->mimeType($document->path);
        
        return response()->file($path, [
            'Content-Type' => $mimeType,
            'Content-Disposition' => 'inline; filename="' . $document->original_name . '"'
        ]);
    }
    
    public function bulkDownload(Request $request)
    {
        $validated = $request->validate([
            'document_ids' => 'required|array',
            'document_ids.*' => 'exists:documents,id'
        ]);
        
        $documents = Document::whereIn('id', $validated['document_ids'])->get();
        
        // Check authorization for each document
        foreach ($documents as $document) {
            if (!$this->canAccessDocument($document)) {
                abort(403, 'Unauthorized access to some documents');
            }
        }
        
        // Create zip file
        $zipFileName = 'documents_' . now()->format('YmdHis') . '.zip';
        $zipPath = storage_path('app/temp/' . $zipFileName);
        
        // Ensure temp directory exists
        if (!file_exists(storage_path('app/temp'))) {
            mkdir(storage_path('app/temp'), 0777, true);
        }
        
        $zip = new \ZipArchive();
        if ($zip->open($zipPath, \ZipArchive::CREATE) === TRUE) {
            foreach ($documents as $document) {
                $filePath = Storage::disk('public')->path($document->path);
                if (file_exists($filePath)) {
                    $zip->addFile($filePath, $document->original_name);
                }
            }
            $zip->close();
        }
        
        return response()->download($zipPath)->deleteFileAfterSend(true);
    }
    
    private function canAccessDocument(Document $document)
    {
        // Admin can access all
        if (Auth::user()->hasRole('admin')) {
            return true;
        }
        
        // Public documents
        if ($document->is_public) {
            return true;
        }
        
        // Document owner
        if ($document->uploaded_by == Auth::id()) {
            return true;
        }
        
        // Marketing can access their project/client documents
        if (Auth::user()->hasRole('marketing')) {
            if ($document->documentable_type == 'App\Models\Project') {
                return $document->documentable->pic_id == Auth::id();
            }
            if ($document->documentable_type == 'App\Models\Client') {
                return $document->documentable->pic_id == Auth::id();
            }
        }
        
        return false;
    }
    
    private function determineFileType($extension)
    {
        $types = [
            'pdf' => ['pdf'],
            'image' => ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'svg'],
            'word' => ['doc', 'docx'],
            'excel' => ['xls', 'xlsx'],
            'powerpoint' => ['ppt', 'pptx'],
            'archive' => ['zip', 'rar', '7z'],
            'video' => ['mp4', 'avi', 'mov', 'wmv'],
            'audio' => ['mp3', 'wav', 'ogg']
        ];
        
        foreach ($types as $type => $extensions) {
            if (in_array(strtolower($extension), $extensions)) {
                return $type;
            }
        }
        
        return 'other';
    }
}

app\Http\Controllers\NameController.php:
<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

class NameController extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index()
    {
        //
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(Request $request)
    {
        //
    }

    /**
     * Display the specified resource.
     */
    public function show(string $id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit(string $id)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(Request $request, string $id)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy(string $id)
    {
        //
    }
}

app\Http\Controllers\NotificationController.php:
<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use App\Notifications\SurveyAssigned;
use App\Notifications\FollowUpReminder;
use App\Notifications\ProjectStarting;
use App\Notifications\SurveyDeadline;
use App\Notifications\QuotationExpired;
use App\Models\Notification;


class NotificationController extends Controller
{
    // Get unread notifications with limited results and notification details
    public function getUnread()
    {
        $notifications = Auth::user()->unreadNotifications()
            ->latest()
            ->limit(10)
            ->get()
            ->map(function($notification) {
                return [
                    'id' => $notification->id,
                    'type' => class_basename($notification->type),
                    'data' => $notification->data,
                    'time' => $notification->created_at->diffForHumans(),
                    'icon' => $this->getNotificationIcon($notification->type),
                    'color' => $this->getNotificationColor($notification->type)
                ];
            });
        
        return response()->json([
            'notifications' => $notifications,
            'unread_count' => Auth::user()->unreadNotifications()->count()
        ]);
    }

    // Display paginated list of all notifications
    public function index()
    {
        // Paginate notifications (e.g., 10 per page)
        $notifications = Auth::user()->notifications()->latest()->paginate(10);

        // Kelompokkan notifikasi berdasarkan tanggal
        $groupedNotifications = $notifications->groupBy(function($notification) {
            return $notification->created_at->toDateString();
        });

        $unreadCount = Auth::user()->unreadNotifications()->count();

        return view('notifications.index', compact('groupedNotifications', 'unreadCount', 'notifications'));
    }


    // Mark a specific notification as read
    public function markAllAsRead()
    {
        // Get the authenticated user
        $user = Auth::user();

        // Mark all unread notifications as read for the authenticated user
        $user->unreadNotifications->markAsRead();

        // Redirect back or send a response
        return redirect()->route('notifications.index')->with('success', 'All notifications marked as read.');
    }

    public function clearAll()
    {
        // Get the authenticated user
        $user = Auth::user();

        // Delete all notifications for the user
        $user->notifications()->delete();

        // Redirect back or send a response
        return redirect()->route('notifications.index')->with('success', 'All notifications cleared.');
    }

    public function show($id)
    {
        // Retrieve the notification by ID
        $notification = Auth::user()->notifications()->findOrFail($id);
        
        // Mark the notification as read (optional)
        $notification->markAsRead();

        return view('notifications.show', compact('notification'));
    }

    // Get the appropriate icon for the notification type
    private function getNotificationIcon($type)
    {
        $icons = [
            SurveyAssigned::class => 'bi-clipboard-check',
            FollowUpReminder::class => 'bi-calendar-check',
            ProjectStarting::class => 'bi-gear',
            SurveyDeadline::class => 'bi-calendar-x',
            QuotationExpired::class => 'bi-file-earmark-excel',
            'NewClientAssigned' => 'bi-person-plus'
        ];
        
        return $icons[$type] ?? 'bi-bell';
    }

    // Get the appropriate color for the notification type
    private function getNotificationColor($type)
    {
        $colors = [
            SurveyAssigned::class => 'success',
            FollowUpReminder::class => 'warning',
            ProjectStarting::class => 'info',
            SurveyDeadline::class => 'danger',
            QuotationExpired::class => 'secondary',
            'NewClientAssigned' => 'primary'
        ];
        
        return $colors[$type] ?? 'secondary';
    }

    // Optional: Redirect to the related resource after marking as read
    private function redirectToRelatedResource($notification)
    {
        $data = $notification->data;

        switch ($notification->type) {
            case SurveyAssigned::class:
                return redirect()->route('surveys.show', $data['survey_id']);
            case FollowUpReminder::class:
                return redirect()->route('projects.show', $data['project_id']);
            case ProjectStarting::class:
                return redirect()->route('projects.show', $data['project_id']);
            case SurveyDeadline::class:
                return redirect()->route('surveys.show', $data['survey_id']);
            case QuotationExpired::class:
                return redirect()->route('documents.show', $data['document_id']);
            default:
                return redirect()->route('notifications.index');
        }
    }
}

app\Http\Controllers\PipelineController.php:
<?php

namespace App\Http\Controllers;

use App\Models\Project;
use App\Models\PipelineStage;
use App\Models\ProjectPipeline;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\DB;

class PipelineController extends Controller
{
    public function __construct()
    {
        $this->middleware(['auth', 'role:admin|manager|marketing']);
    }

    public function index(Request $request)
    {
        // Get all pipeline stages
        $stages = PipelineStage::where('is_active', true)->orderBy('order')->get();
        
        // Get projects grouped by status
        $projectsQuery = Project::with(['client', 'pic']);
        
        // Filter by PIC for marketing role
        if (Auth::user()->hasRole('marketing')) {
            $projectsQuery->where('pic_id', Auth::id());
        }
        
        // Search filter
        if ($request->has('search')) {
            $search = $request->search;
            $projectsQuery->where(function($q) use ($search) {
                $q->where('name', 'like', "%{$search}%")
                  ->orWhere('code', 'like', "%{$search}%")
                  ->orWhereHas('client', function($q) use ($search) {
                      $q->where('name', 'like', "%{$search}%");
                  });
            });
        }
        
        // Date range filter
        if ($request->has('date_from')) {
            $projectsQuery->whereDate('created_at', '>=', $request->date_from);
        }
        if ($request->has('date_to')) {
            $projectsQuery->whereDate('created_at', '<=', $request->date_to);
        }
        
        $projects = $projectsQuery->get();
        
        // Group projects by status
        $pipeline = [];
        $statusMapping = [
            'lead' => 'lead',
            'survey' => 'survey', 
            'penawaran' => 'quotation',
            'negosiasi' => 'negotiation',
            'deal' => 'deal',
            'eksekusi' => 'execution',
            'selesai' => 'completed',
            'batal' => 'cancelled'
        ];
        
        foreach ($stages as $stage) {
            $stageProjects = $projects->filter(function($project) use ($stage, $statusMapping) {
                $mappedStatus = $statusMapping[$project->status] ?? $project->status;
                return $stage->slug == $mappedStatus;
            });
            
            $pipeline[] = [
                'stage' => $stage,
                'projects' => $stageProjects,
                'count' => $stageProjects->count(),
                'value' => $stageProjects->sum('project_value')
            ];
        }
        
        // Calculate metrics
        $metrics = [
            'total_projects' => $projects->count(),
            'total_value' => $projects->sum('project_value'),
            'deal_value' => $projects->where('status', 'deal')->sum('deal_value'),
            'conversion_rate' => $this->calculateConversionRate($projects),
            'average_deal_size' => $projects->where('status', 'deal')->avg('deal_value') ?? 0,
            'win_rate' => $this->calculateWinRate($projects)
        ];
        
        // View type (kanban or list)
        $viewType = $request->get('view', 'kanban');
        
        return view('pipeline.index', compact('pipeline', 'metrics', 'viewType'));
    }
    
    public function updateStage(Request $request)
    {
        $validated = $request->validate([
            'project_id' => 'required|exists:projects,id',
            'new_status' => 'required|in:lead,survey,penawaran,negosiasi,deal,eksekusi,selesai,batal'
        ]);
        
        $project = Project::findOrFail($validated['project_id']);
        
        // Check authorization
        if (Auth::user()->hasRole('marketing') && $project->pic_id != Auth::id()) {
            return response()->json(['error' => 'Unauthorized'], 403);
        }
        
        DB::beginTransaction();
        try {
            $oldStatus = $project->status;
            
            // Update project status
            $project->update(['status' => $validated['new_status']]);
            
            // Log pipeline history
            ProjectPipeline::create([
                'project_id' => $project->id,
                'from_status' => $oldStatus,
                'to_status' => $validated['new_status'],
                'changed_by' => Auth::id(),
                'changed_at' => now(),
                'notes' => $request->notes
            ]);
            
            // Special handling for deal status
            if ($validated['new_status'] == 'deal' && !$project->deal_value) {
                $project->update(['deal_value' => $project->project_value]);
            }
            
            DB::commit();
            
            return response()->json([
                'success' => true,
                'message' => 'Status project berhasil diupdate'
            ]);
            
        } catch (\Exception $e) {
            DB::rollback();
            return response()->json([
                'error' => 'Terjadi kesalahan: ' . $e->getMessage()
            ], 500);
        }
    }
    
    public function funnel(Request $request)
    {
        $stages = PipelineStage::where('is_active', true)->orderBy('order')->get();
        
        // Get date range (default last 30 days)
        $dateFrom = $request->get('date_from', now()->subDays(30)->format('Y-m-d'));
        $dateTo = $request->get('date_to', now()->format('Y-m-d'));
        
        // Build funnel data
        $funnelData = [];
        $previousCount = 0;
        
        foreach ($stages as $index => $stage) {
            $count = Project::whereDate('created_at', '>=', $dateFrom)
                           ->whereDate('created_at', '<=', $dateTo)
                           ->where('status', $this->getStatusByStage($stage->slug))
                           ->count();
            
            $conversionRate = $index > 0 && $previousCount > 0 
                ? round(($count / $previousCount) * 100, 1) 
                : 100;
            
            $funnelData[] = [
                'stage' => $stage,
                'count' => $count,
                'conversion_rate' => $conversionRate,
                'color' => $stage->color
            ];
            
            $previousCount = $count;
        }
        
        return view('pipeline.funnel', compact('funnelData', 'dateFrom', 'dateTo'));
    }
    
    public function analytics(Request $request)
    {
        // Pipeline velocity (average time in each stage)
        $velocityData = DB::table('project_pipelines')
            ->select(
                'from_status',
                DB::raw('AVG(TIMESTAMPDIFF(DAY, created_at, changed_at)) as avg_days')
            )
            ->whereNotNull('from_status')
            ->groupBy('from_status')
            ->get();
        
        // Win/Loss analysis
        $winLossData = [
            'won' => Project::where('status', 'deal')->count(),
            'lost' => Project::where('status', 'batal')->count(),
            'in_progress' => Project::whereNotIn('status', ['deal', 'batal', 'selesai'])->count()
        ];
        
        // Monthly pipeline value trend
        $monthlyTrend = Project::selectRaw('
                MONTH(created_at) as month,
                YEAR(created_at) as year,
                SUM(project_value) as total_value,
                COUNT(*) as total_projects
            ')
            ->whereYear('created_at', now()->year)
            ->groupBy('year', 'month')
            ->orderBy('month')
            ->get();
        
        // Top performers (by PIC)
        $topPerformers = Project::select('pic_id', DB::raw('COUNT(*) as total_projects'), DB::raw('SUM(deal_value) as total_value'))
            ->where('status', 'deal')
            ->groupBy('pic_id')
            ->with('pic')
            ->orderByDesc('total_value')
            ->limit(5)
            ->get();
        
        return view('pipeline.analytics', compact('velocityData', 'winLossData', 'monthlyTrend', 'topPerformers'));
    }
    
    private function calculateConversionRate($projects)
    {
        $totalLeads = $projects->count();
        $totalDeals = $projects->whereIn('status', ['deal', 'eksekusi', 'selesai'])->count();
        
        return $totalLeads > 0 ? round(($totalDeals / $totalLeads) * 100, 1) : 0;
    }
    
    private function calculateWinRate($projects)
    {
        $closedProjects = $projects->whereIn('status', ['deal', 'eksekusi', 'selesai', 'batal']);
        $wonProjects = $closedProjects->whereIn('status', ['deal', 'eksekusi', 'selesai']);
        
        return $closedProjects->count() > 0 
            ? round(($wonProjects->count() / $closedProjects->count()) * 100, 1) 
            : 0;
    }
    
    private function getStatusByStage($stageSlug)
    {
        $mapping = [
            'lead' => 'lead',
            'survey' => 'survey',
            'quotation' => 'penawaran',
            'negotiation' => 'negosiasi',
            'deal' => 'deal',
            'execution' => 'eksekusi',
            'completed' => 'selesai',
            'cancelled' => 'batal'
        ];
        
        return $mapping[$stageSlug] ?? $stageSlug;
    }
}

app\Http\Controllers\ProfileController.php:
<?php

namespace App\Http\Controllers;

use App\Http\Requests\ProfileUpdateRequest;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Redirect;
use Illuminate\View\View;

class ProfileController extends Controller
{
    /**
     * Display the user's profile form.
     */
    public function edit(Request $request): View
    {
        return view('profile.edit', [
            'user' => $request->user(),
        ]);
    }

    /**
     * Update the user's profile information.
     */
    public function update(ProfileUpdateRequest $request): RedirectResponse
    {
        $request->user()->fill($request->validated());

        if ($request->user()->isDirty('email')) {
            $request->user()->email_verified_at = null;
        }

        $request->user()->save();

        return Redirect::route('profile.edit')->with('status', 'profile-updated');
    }

    /**
     * Delete the user's account.
     */
    public function destroy(Request $request): RedirectResponse
    {
        $request->validateWithBag('userDeletion', [
            'password' => ['required', 'current_password'],
        ]);

        $user = $request->user();

        Auth::logout();

        $user->delete();

        $request->session()->invalidate();
        $request->session()->regenerateToken();

        return Redirect::to('/');
    }
}

app\Http\Controllers\ProjectController.php:
<?php

namespace App\Http\Controllers;

use App\Models\Project;
use App\Models\Client;
use App\Models\User;
use App\Models\PipelineStage;
use App\Notifications\ProjectStatusChanged;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Notification;
use Illuminate\Routing\Controllers\HasMiddleware;
use Illuminate\Routing\Controllers\Middleware;

class ProjectController extends Controller implements HasMiddleware
{
    /**
     * Get the middleware that should be assigned to the controller.
     */
    public static function middleware(): array
    {
        return [
            new Middleware(['auth', 'role:admin|manager|marketing']),
        ];
    }

    public function index(Request $request)
    {
        $query = Project::with(['client', 'pic', 'latestSurvey']);
        
        // Search
        if ($request->has('search')) {
            $search = $request->search;
            $query->where(function($q) use ($search) {
                $q->where('code', 'like', "%{$search}%")
                  ->orWhere('name', 'like', "%{$search}%")
                  ->orWhereHas('client', function($q) use ($search) {
                      $q->where('name', 'like', "%{$search}%");
                  });
            });
        }
        
        // Filter by status
        if ($request->has('status') && $request->status != '') {
            $query->where('status', $request->status);
        }
        
        // Filter by type
        if ($request->has('type') && $request->type != '') {
            $query->where('type', $request->type);
        }
        
        // Filter by PIC for marketing role
        if (Auth::user()->hasRole('marketing')) {
            $query->where('pic_id', Auth::id());
        }
        
        $projects = $query->latest()->paginate(10);
        
        return view('projects.index', compact('projects'));
    }

    public function create($client_id = null)
    {
        $clients = Client::orderBy('name')->get();
        $pics = User::role(['marketing', 'admin'])->get();
        
        // If client_id provided, pre-select the client
        $selectedClient = $client_id ? Client::find($client_id) : null;
        
        return view('projects.create', compact('clients', 'pics', 'selectedClient'));
    }

    public function store(Request $request)
    {
        $validated = $request->validate([
            'name' => 'required|string|max:255',
            'type' => 'required|in:kantor,showroom,kafe,restoran,outlet,other',
            'location' => 'required|string',
            'client_id' => 'required|exists:clients,id',
            'pic_id' => 'required|exists:users,id',
            'project_value' => 'nullable|numeric|min:0',
            'start_date' => 'nullable|date',
            'target_date' => 'nullable|date|after_or_equal:start_date',
            'description' => 'nullable|string'
        ]);

        // Set initial status
        $validated['status'] = 'lead';

        // Jika marketing, force PIC ke dirinya sendiri
        if (Auth::user()->hasRole('marketing')) {
            $validated['pic_id'] = Auth::id();
        }

        DB::beginTransaction();
        try {
            $project = Project::create($validated);

            // Insert pipeline history SESUAI MIGRASI project_pipelines
            $firstStage = PipelineStage::orderBy('order')->first();
            if ($firstStage) {
                $project->pipelineHistory()->create([
                    'from_status' => null, // Awal, boleh kosong
                    'to_status' => $firstStage->slug ?? 'lead', // Atau hardcode 'lead' jika slug tidak ada
                    'changed_by' => Auth::id(),
                    'changed_at' => now(),
                    'notes' => null,
                ]);
            }

            DB::commit();

            // Send notification to relevant users after successful creation
            $users = collect();
            
            // Notify admin and managers
            $adminAndManagers = User::role(['admin', 'manager'])->get();
            $users = $users->merge($adminAndManagers);
            
            // Notify project PIC if different from creator
            if ($project->pic_id != Auth::id()) {
                $users->push($project->pic);
            }
            
            // Remove duplicates and current user
            $users = $users->unique('id')->reject(function ($user) {
                return $user->id === Auth::id();
            });
            
            if ($users->isNotEmpty()) {
                Notification::send($users, new ProjectStatusChanged(
                    $project, 
                    null, 
                    'lead', 
                    Auth::user()
                ));
            }

            // Redirect sesuai pilihan
            if ($request->has('save_and_survey')) {
                return redirect()->route('surveys.create', ['project_id' => $project->id])
                                ->with('success', 'Project berhasil dibuat. Silakan lanjutkan ke pembuatan survey.');
            }

            return redirect()->route('projects.show', $project)
                            ->with('success', 'Project berhasil dibuat!');
        } catch (\Exception $e) {
            DB::rollback();
            return back()->with('error', 'Terjadi kesalahan: ' . $e->getMessage())
                        ->withInput();
        }
    }


    public function show(Project $project)
    {
        // Check authorization
        if (Auth::user()->hasRole('marketing') && $project->pic_id != Auth::id()) {
            abort(403, 'Unauthorized');
        }
        
        $project->load(['client', 'pic', 'surveys.surveyor', 'surveys.photos', 'documents']);
        
        return view('projects.show', compact('project'));
    }

    public function edit(Project $project)
    {
        // Check authorization
        if (Auth::user()->hasRole('marketing') && $project->pic_id != Auth::id()) {
            abort(403, 'Unauthorized');
        }
        
        $clients = Client::orderBy('name')->get();
        $pics = User::role(['marketing', 'admin'])->get();
        
        return view('projects.edit', compact('project', 'clients', 'pics'));
    }

    public function update(Request $request, Project $project)
    {
        // Check authorization
        if (Auth::user()->hasRole('marketing') && $project->pic_id != Auth::id()) {
            abort(403, 'Unauthorized');
        }
        
        $validated = $request->validate([
            'name' => 'required|string|max:255',
            'type' => 'required|in:kantor,showroom,kafe,restoran,outlet,other',
            'location' => 'required|string',
            'client_id' => 'required|exists:clients,id',
            'pic_id' => 'required|exists:users,id',
            'status' => 'required|in:lead,survey,penawaran,negosiasi,deal,eksekusi,selesai,batal',
            'project_value' => 'nullable|numeric|min:0',
            'deal_value' => 'nullable|numeric|min:0',
            'start_date' => 'nullable|date',
            'target_date' => 'nullable|date|after_or_equal:start_date',
            'description' => 'nullable|string'
        ]);
        
        // If marketing, can't change PIC
        if (Auth::user()->hasRole('marketing') && !Auth::user()->hasRole('admin')) {
            $validated['pic_id'] = $project->pic_id;
        }
        
        // Track status change
        $oldStatus = $project->status;
        
        $project->update($validated);
        
        // Send notification if status changed
        if ($oldStatus != $validated['status']) {
            $users = collect();
            
            // Notify project PIC
            $users->push($project->pic);
            
            // Notify admin and managers
            $adminAndManagers = User::role(['admin', 'manager'])->get();
            $users = $users->merge($adminAndManagers);
            
            // Remove duplicates and current user
            $users = $users->unique('id')->reject(function ($user) {
                return $user->id === Auth::id();
            });
            
            // Send notification
            if ($users->isNotEmpty()) {
                Notification::send($users, new ProjectStatusChanged(
                    $project, 
                    $oldStatus, 
                    $validated['status'], 
                    Auth::user()
                ));
            }
        }
        
        return redirect()->route('projects.show', $project)
            ->with('success', 'Project berhasil diupdate!');
    }

    public function destroy(Project $project)
    {
        // Only admin can delete
        if (!Auth::user()->hasRole('admin')) {
            abort(403, 'Unauthorized');
        }
        
        // Check if project has surveys
        if ($project->surveys()->count() > 0) {
            return back()->with('error', 'Tidak dapat menghapus project yang memiliki survey!');
        }
        
        $project->delete();
        
        return redirect()->route('projects.index')
            ->with('success', 'Project berhasil dihapus!');
    }
    
    public function timeline(Project $project)
    {
        $project->load(['surveys', 'documents', 'pipelineHistory']);
        
        // Collect all timeline events
        $timeline = collect();
        
        // Add project creation
        $timeline->push([
            'date' => $project->created_at,
            'type' => 'project_created',
            'title' => 'Project dibuat',
            'description' => 'Project ' . $project->name . ' dibuat oleh ' . $project->pic->name,
            'icon' => 'bi-plus-circle',
            'color' => 'primary'
        ]);
        
        // Add surveys
        foreach ($project->surveys as $survey) {
            $timeline->push([
                'date' => $survey->scheduled_date,
                'type' => 'survey_scheduled',
                'title' => 'Survey dijadwalkan',
                'description' => 'Survey dijadwalkan untuk ' . $survey->scheduled_date->format('d M Y'),
                'icon' => 'bi-calendar',
                'color' => 'info'
            ]);
            
            if ($survey->status == 'completed') {
                $timeline->push([
                    'date' => $survey->actual_date ?? $survey->updated_at,
                    'type' => 'survey_completed',
                    'title' => 'Survey selesai',
                    'description' => 'Survey diselesaikan oleh ' . $survey->surveyor->name,
                    'icon' => 'bi-check-circle',
                    'color' => 'success'
                ]);
            }
        }
        
        // Sort by date descending
        $timeline = $timeline->sortByDesc('date');
        
        return view('projects.timeline', compact('project', 'timeline'));
    }
}

app\Http\Controllers\ReportController.php:
<?php

namespace App\Http\Controllers;

use App\Models\Project;
use App\Models\Client;
use App\Models\Survey;
use App\Models\Document;
use App\Models\User;
use Carbon\Carbon;
use Carbon\CarbonPeriod;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\DB;
use PDF;
use PhpOffice\PhpSpreadsheet\Spreadsheet;
use PhpOffice\PhpSpreadsheet\Writer\Xlsx;

#[Authenticate]
#[RoleMiddleware('admin|manager|marketing')]
class ReportController extends Controller
{

    /**
     * Display report generator page
     */
    public function index()
    {
        $reportTypes = [
            'project_summary' => 'Project Summary Report',
            'sales_performance' => 'Sales Performance Report',
            'client_acquisition' => 'Client Acquisition Report',
            'survey_analysis' => 'Survey Analysis Report',
            'revenue_forecast' => 'Revenue Forecast Report',
        ];

        return view('reports.index', compact('reportTypes'));
    }

    /**
     * Generate the requested report
     */
    public function generate(Request $request)
    {
        $validated = $request->validate([
            'report_type' => 'required|string',
            'date_from' => 'required|date',
            'date_to' => 'required|date|after_or_equal:date_from',
            'format' => 'required|in:html,pdf,excel',
            'parameters' => 'nullable|array'
        ]);

        // Get date range
        $dateFrom = Carbon::parse($validated['date_from']);
        $dateTo = Carbon::parse($validated['date_to']);

        // Generate report data based on type
        switch ($validated['report_type']) {
            case 'project_summary':
                $data = $this->generateProjectSummaryReport($dateFrom, $dateTo, $validated['parameters'] ?? []);
                $title = 'Project Summary Report';
                break;

            case 'sales_performance':
                $data = $this->generateSalesPerformanceReport($dateFrom, $dateTo, $validated['parameters'] ?? []);
                $title = 'Sales Performance Report';
                break;

            case 'client_acquisition':
                $data = $this->generateClientAcquisitionReport($dateFrom, $dateTo, $validated['parameters'] ?? []);
                $title = 'Client Acquisition Report';
                break;

            case 'survey_analysis':
                $data = $this->generateSurveyAnalysisReport($dateFrom, $dateTo, $validated['parameters'] ?? []);
                $title = 'Survey Analysis Report';
                break;

            case 'revenue_forecast':
                $data = $this->generateRevenueForecastReport($dateFrom, $dateTo, $validated['parameters'] ?? []);
                $title = 'Revenue Forecast Report';
                break;

            default:
                return back()->with('error', 'Invalid report type');
        }

        // Format and return report based on requested format
        switch ($validated['format']) {
            case 'html':
                $view = 'reports.types.' . $validated['report_type'];
                return view($view, [
                    'data' => $data,
                    'dateFrom' => $dateFrom,
                    'dateTo' => $dateTo,
                    'title' => $title,
                    'parameters' => $validated['parameters'] ?? []
                ]);

            case 'pdf':
                $view = 'reports.types.' . $validated['report_type'] . '_pdf';
                $pdf = PDF::loadView($view, [
                    'data' => $data,
                    'dateFrom' => $dateFrom,
                    'dateTo' => $dateTo,
                    'title' => $title,
                    'parameters' => $validated['parameters'] ?? []
                ]);

                $filename = strtolower(str_replace(' ', '_', $title)) . '_' . date('Ymd') . '.pdf';
                return $pdf->download($filename);

            case 'excel':
                return $this->generateExcelReport($data, $title, $dateFrom, $dateTo, $validated['report_type']);

            default:
                return back()->with('error', 'Invalid format');
        }
    }

    /**
     * Generate Project Summary Report
     */
    private function generateProjectSummaryReport($dateFrom, $dateTo, $parameters)
    {
        // Base query with date filter
        $query = Project::whereBetween('created_at', [$dateFrom, $dateTo])
                        ->with(['client', 'pic']);

        // Apply status filter if provided
        if (isset($parameters['status']) && $parameters['status']) {
            $query->where('status', $parameters['status']);
        }

        // Get projects
        $projects = $query->get();

        // Prepare summary data
        $summary = [
            'total_projects' => $projects->count(),
            'total_value' => $projects->sum('project_value'),
            'total_deal_value' => $projects->sum('deal_value'),
            'status_distribution' => $projects->groupBy('status')
                ->map(function ($items) {
                    return [
                        'count' => $items->count(),
                        'value' => $items->sum('project_value')
                    ];
                }),
            'type_distribution' => $projects->groupBy('type')
                ->map(function ($items) {
                    return [
                        'count' => $items->count(),
                        'value' => $items->sum('project_value')
                    ];
                }),
            'projects' => $projects
        ];

        return $summary;
    }

    /**
     * Generate Sales Performance Report
     */
    private function generateSalesPerformanceReport($dateFrom, $dateTo, $parameters)
    {
        // Get all marketing users (PIC)
        $marketingUsers = User::role('marketing')->get();

        // Initialize performance data
        $performanceData = [];

        foreach ($marketingUsers as $user) {
            // Get projects where user is PIC
            $projects = Project::where('pic_id', $user->id)
                ->whereBetween('created_at', [$dateFrom, $dateTo])
                ->get();

            // Calculate metrics
            $totalProjects = $projects->count();
            $totalValue = $projects->sum('project_value');
            $dealValue = $projects->whereIn('status', ['deal', 'eksekusi', 'selesai'])->sum('deal_value');
            $wonProjects = $projects->whereIn('status', ['deal', 'eksekusi', 'selesai'])->count();

            // Calculate conversion rate
            $conversionRate = $totalProjects > 0 ? ($wonProjects / $totalProjects) * 100 : 0;

            // Add to performance data
            $performanceData[] = [
                'user' => $user,
                'total_projects' => $totalProjects,
                'total_value' => $totalValue,
                'deal_value' => $dealValue,
                'won_projects' => $wonProjects,
                'conversion_rate' => $conversionRate,
                'projects' => $projects
            ];
        }

        // Sort by deal value (descending)
        usort($performanceData, function ($a, $b) {
            return $b['deal_value'] <=> $a['deal_value'];
        });

        return $performanceData;
    }

    /**
     * Generate Client Acquisition Report
     */
    private function generateClientAcquisitionReport($dateFrom, $dateTo, $parameters)
    {
        // Get clients created in date range
        $clients = Client::whereBetween('created_at', [$dateFrom, $dateTo])
                        ->with(['pic', 'projects'])
                        ->get();

        // Group by source
        $bySource = $clients->groupBy('source')
            ->map(function ($items) {
                return [
                    'count' => $items->count(),
                    'project_count' => $items->flatMap->projects->count(),
                    'project_value' => $items->flatMap->projects->sum('project_value')
                ];
            });

        // Group by month
        $byMonth = $clients->groupBy(function ($client) {
            return $client->created_at->format('Y-m');
        })->map(function ($items) {
            return [
                'count' => $items->count(),
                'project_count' => $items->flatMap->projects->count(),
                'project_value' => $items->flatMap->projects->sum('project_value')
            ];
        });

        // Prepare summary data
        $summary = [
            'total_clients' => $clients->count(),
            'total_projects' => $clients->flatMap->projects->count(),
            'total_project_value' => $clients->flatMap->projects->sum('project_value'),
            'by_source' => $bySource,
            'by_month' => $byMonth,
            'clients' => $clients
        ];

        return $summary;
    }

    /**
     * Generate Survey Analysis Report
     */
    private function generateSurveyAnalysisReport($dateFrom, $dateTo, $parameters)
    {
        // Get surveys in date range
        $surveys = Survey::whereBetween('created_at', [$dateFrom, $dateTo])
                        ->with(['project', 'surveyor', 'photos'])
                        ->get();

        // Group by status
        $byStatus = $surveys->groupBy('status')
            ->map(function ($items) {
                return [
                    'count' => $items->count(),
                    'photo_count' => $items->sum(function ($survey) {
                        return $survey->photos->count();
                    })
                ];
            });

        // Group by surveyor
        $bySurveyor = $surveys->groupBy('surveyor_id')
            ->map(function ($items) {
                return [
                    'surveyor' => $items->first()->surveyor,
                    'count' => $items->count(),
                    'completed' => $items->where('status', 'completed')->count(),
                    'photo_count' => $items->sum(function ($survey) {
                        return $survey->photos->count();
                    })
                ];
            });

        // Calculate average time between scheduled and actual
        $completedSurveys = $surveys->where('status', 'completed')
            ->where('actual_date', '!=', null);

        $avgCompletionTime = 0;
        if ($completedSurveys->count() > 0) {
            $totalMinutes = 0;
            foreach ($completedSurveys as $survey) {
                $totalMinutes += $survey->scheduled_date->diffInMinutes($survey->actual_date);
            }
            $avgCompletionTime = $totalMinutes / $completedSurveys->count();
        }

        // Prepare summary data
        $summary = [
            'total_surveys' => $surveys->count(),
            'completed_surveys' => $surveys->where('status', 'completed')->count(),
            'pending_surveys' => $surveys->where('status', 'pending')->count(),
            'cancelled_surveys' => $surveys->where('status', 'cancelled')->count(),
            'total_photos' => $surveys->sum(function ($survey) {
                return $survey->photos->count();
            }),
            'avg_completion_time' => $avgCompletionTime,
            'by_status' => $byStatus,
            'by_surveyor' => $bySurveyor,
            'surveys' => $surveys
        ];

        return $summary;
    }

    /**
     * Generate Revenue Forecast Report
     */
    private function generateRevenueForecastReport($dateFrom, $dateTo, $parameters)
    {
        // Get all projects in pipeline
        $projects = Project::whereIn('status', ['lead', 'survey', 'penawaran', 'negosiasi'])
                          ->with(['client', 'pic'])
                          ->get();

        // Define probability by status
        $probabilities = [
            'lead' => 0.1,
            'survey' => 0.3,
            'penawaran' => 0.5,
            'negosiasi' => 0.8,
        ];

        // Calculate weighted revenue
        $projects->map(function ($project) use ($probabilities) {
            $project->probability = $probabilities[$project->status] ?? 0;
            $project->weighted_value = $project->project_value * $project->probability;
            return $project;
        });

        // Group by month (expected close date based on created_at + average days in pipeline)
        $avgDaysInPipeline = 60; // Default 60 days

        $byMonth = [];
        $today = Carbon::today();

        for ($i = 0; $i < 6; $i++) {
            $month = $today->copy()->addMonths($i);
            $monthKey = $month->format('Y-m');

            $monthProjects = $projects->filter(function ($project) use ($month, $avgDaysInPipeline) {
                $expectedCloseDate = $project->created_at->addDays($avgDaysInPipeline);
                return $expectedCloseDate->year == $month->year && $expectedCloseDate->month == $month->month;
            });

            $byMonth[$monthKey] = [
                'month' => $month->format('M Y'),
                'total_projects' => $monthProjects->count(),
                'total_value' => $monthProjects->sum('project_value'),
                'weighted_value' => $monthProjects->sum('weighted_value'),
                'projects' => $monthProjects
            ];
        }

        // Prepare summary data
        $summary = [
            'total_pipeline_projects' => $projects->count(),
            'total_pipeline_value' => $projects->sum('project_value'),
            'total_weighted_value' => $projects->sum('weighted_value'),
            'by_status' => $projects->groupBy('status')
                ->map(function ($items) {
                    return [
                        'count' => $items->count(),
                        'value' => $items->sum('project_value'),
                        'weighted_value' => $items->sum('weighted_value')
                    ];
                }),
            'by_month' => $byMonth,
            'projects' => $projects
        ];

        return $summary;
    }

    /**
     * Generate Excel Report
     */
    private function generateExcelReport($data, $title, $dateFrom, $dateTo, $reportType)
    {
        $spreadsheet = new Spreadsheet();
        $sheet = $spreadsheet->getActiveSheet();

        // Set report title and date range
        $sheet->setCellValue('A1', $title);
        $sheet->setCellValue('A2', 'Period: ' . $dateFrom->format('d M Y') . ' to ' . $dateTo->format('d M Y'));

        // Style the header
        $sheet->getStyle('A1')->getFont()->setBold(true)->setSize(16);
        $sheet->getStyle('A2')->getFont()->setSize(12);

        // Set column headers and data based on report type
        switch ($reportType) {
            case 'project_summary':
                $this->setProjectSummaryExcel($sheet, $data);
                break;

            case 'sales_performance':
                $this->setSalesPerformanceExcel($sheet, $data);
                break;

            case 'client_acquisition':
                $this->setClientAcquisitionExcel($sheet, $data);
                break;

            case 'survey_analysis':
                $this->setSurveyAnalysisExcel($sheet, $data);
                break;

            case 'revenue_forecast':
                $this->setRevenueForecastExcel($sheet, $data);
                break;
        }

        // Auto size columns
        foreach (range('A', 'J') as $col) {
            $sheet->getColumnDimension($col)->setAutoSize(true);
        }

        // Create file
        $writer = new Xlsx($spreadsheet);
        $filename = strtolower(str_replace(' ', '_', $title)) . '_' . date('Ymd') . '.xlsx';
        $filepath = storage_path('app/public/reports/' . $filename);

        // Ensure directory exists
        if (!file_exists(storage_path('app/public/reports'))) {
            mkdir(storage_path('app/public/reports'), 0777, true);
        }

        $writer->save($filepath);

        return response()->download($filepath)->deleteFileAfterSend(true);
    }

    /**
     * Set Project Summary Excel Data
     */
    private function setProjectSummaryExcel($sheet, $data)
    {
        // Add Summary Section
        $sheet->setCellValue('A4', 'Summary');
        $sheet->setCellValue('A5', 'Total Projects:');
        $sheet->setCellValue('B5', $data['total_projects']);
        $sheet->setCellValue('A6', 'Total Project Value:');
        $sheet->setCellValue('B6', 'Rp ' . number_format($data['total_value'], 0, ',', '.'));
        $sheet->setCellValue('A7', 'Total Deal Value:');
        $sheet->setCellValue('B7', 'Rp ' . number_format($data['total_deal_value'], 0, ',', '.'));

        // Add Projects List
        $sheet->setCellValue('A9', 'Projects List');

        // Headers
        $sheet->setCellValue('A10', 'No');
        $sheet->setCellValue('B10', 'Project Code');
        $sheet->setCellValue('C10', 'Project Name');
        $sheet->setCellValue('D10', 'Client');
        $sheet->setCellValue('E10', 'Type');
        $sheet->setCellValue('F10', 'Status');
        $sheet->setCellValue('G10', 'PIC');
        $sheet->setCellValue('H10', 'Value');
        $sheet->setCellValue('I10', 'Created Date');

        // Style header row
        $sheet->getStyle('A10:I10')->getFont()->setBold(true);
        $sheet->getStyle('A10:I10')->getFill()
            ->setFillType(\PhpOffice\PhpSpreadsheet\Style\Fill::FILL_SOLID)
            ->getStartColor()->setRGB('DDDDDD');

        // Add data rows
        $row = 11;
        foreach ($data['projects'] as $index => $project) {
            $sheet->setCellValue('A' . $row, $index + 1);
            $sheet->setCellValue('B' . $row, $project->code);
            $sheet->setCellValue('C' . $row, $project->name);
            $sheet->setCellValue('D' . $row, $project->client->name ?? 'N/A');
            $sheet->setCellValue('E' . $row, ucfirst($project->type));
            $sheet->setCellValue('F' . $row, ucfirst($project->status));
            $sheet->setCellValue('G' . $row, $project->pic->name ?? 'N/A');
            $sheet->setCellValue('H' . $row, 'Rp ' . number_format($project->project_value, 0, ',', '.'));
            $sheet->setCellValue('I' . $row, $project->created_at->format('d M Y'));
            $row++;
        }
    }

    /**
     * Set Sales Performance Excel Data
     */
    private function setSalesPerformanceExcel($sheet, $data)
    {
        // Add Summary Section
        $sheet->setCellValue('A4', 'Sales Performance Summary');

        // Headers
        $sheet->setCellValue('A5', 'No');
        $sheet->setCellValue('B5', 'PIC Name');
        $sheet->setCellValue('C5', 'Total Projects');
        $sheet->setCellValue('D5', 'Won Projects');
        $sheet->setCellValue('E5', 'Conversion Rate');
        $sheet->setCellValue('F5', 'Total Value');
        $sheet->setCellValue('G5', 'Deal Value');

        // Style header row
        $sheet->getStyle('A5:G5')->getFont()->setBold(true);
        $sheet->getStyle('A5:G5')->getFill()
            ->setFillType(\PhpOffice\PhpSpreadsheet\Style\Fill::FILL_SOLID)
            ->getStartColor()->setRGB('DDDDDD');

        // Add data rows
        $row = 6;
        foreach ($data as $index => $salesData) {
            $sheet->setCellValue('A' . $row, $index + 1);
            $sheet->setCellValue('B' . $row, $salesData['user']->name);
            $sheet->setCellValue('C' . $row, $salesData['total_projects']);
            $sheet->setCellValue('D' . $row, $salesData['won_projects']);
            $sheet->setCellValue('E' . $row, round($salesData['conversion_rate'], 1) . '%');
            $sheet->setCellValue('F' . $row, 'Rp ' . number_format($salesData['total_value'], 0, ',', '.'));
            $sheet->setCellValue('G' . $row, 'Rp ' . number_format($salesData['deal_value'], 0, ',', '.'));
            $row++;
        }

        // Add Projects by PIC sections
        $row += 2;
        foreach ($data as $salesData) {
            $sheet->setCellValue('A' . $row, 'Projects by ' . $salesData['user']->name);
            $row++;

            // Project headers
            $sheet->setCellValue('A' . $row, 'No');
            $sheet->setCellValue('B' . $row, 'Project Code');
            $sheet->setCellValue('C' . $row, 'Project Name');
            $sheet->setCellValue('D' . $row, 'Client');
            $sheet->setCellValue('E' . $row, 'Status');
            $sheet->setCellValue('F' . $row, 'Value');
            $sheet->setCellValue('G' . $row, 'Created Date');

            // Style header row
            $sheet->getStyle('A' . $row . ':G' . $row)->getFont()->setBold(true);
            $sheet->getStyle('A' . $row . ':G' . $row)->getFill()
                ->setFillType(\PhpOffice\PhpSpreadsheet\Style\Fill::FILL_SOLID)
                ->getStartColor()->setRGB('DDDDDD');

            $row++;

            // Project data
            foreach ($salesData['projects'] as $index => $project) {
                $sheet->setCellValue('A' . $row, $index + 1);
                $sheet->setCellValue('B' . $row, $project->code);
                $sheet->setCellValue('C' . $row, $project->name);
                $sheet->setCellValue('D' . $row, $project->client->name ?? 'N/A');
                $sheet->setCellValue('E' . $row, ucfirst($project->status));
                $sheet->setCellValue('F' . $row, 'Rp ' . number_format($project->project_value, 0, ',', '.'));
                $sheet->setCellValue('G' . $row, $project->created_at->format('d M Y'));
                $row++;
            }

            $row += 2;
        }
    }

    /**
     * Set Client Acquisition Excel Data
     */
    private function setClientAcquisitionExcel($sheet, $data)
    {
        // Add Summary Section
        $sheet->setCellValue('A4', 'Client Acquisition Summary');
        $sheet->setCellValue('A5', 'Total New Clients:');
        $sheet->setCellValue('B5', $data['total_clients']);
        $sheet->setCellValue('A6', 'Total Projects from New Clients:');
        $sheet->setCellValue('B6', $data['total_projects']);
        $sheet->setCellValue('A7', 'Total Project Value:');
        $sheet->setCellValue('B7', 'Rp ' . number_format($data['total_project_value'], 0, ',', '.'));

        // Add Source Distribution
        $sheet->setCellValue('A9', 'Source Distribution');

        // Headers
        $sheet->setCellValue('A10', 'Source');
        $sheet->setCellValue('B10', 'Client Count');
        $sheet->setCellValue('C10', 'Project Count');
        $sheet->setCellValue('D10', 'Project Value');

        // Style header row
        $sheet->getStyle('A10:D10')->getFont()->setBold(true);
        $sheet->getStyle('A10:D10')->getFill()
            ->setFillType(\PhpOffice\PhpSpreadsheet\Style\Fill::FILL_SOLID)
            ->getStartColor()->setRGB('DDDDDD');

        // Add data rows
        $row = 11;
        foreach ($data['by_source'] as $source => $sourceData) {
            $sheet->setCellValue('A' . $row, ucfirst($source));
            $sheet->setCellValue('B' . $row, $sourceData['count']);
            $sheet->setCellValue('C' . $row, $sourceData['project_count']);
            $sheet->setCellValue('D' . $row, 'Rp ' . number_format($sourceData['project_value'], 0, ',', '.'));
            $row++;
        }

        // Add Monthly Distribution
        $row += 2;
        $sheet->setCellValue('A' . $row, 'Monthly Distribution');
        $row++;

        // Headers
        $sheet->setCellValue('A' . $row, 'Month');
        $sheet->setCellValue('B' . $row, 'Client Count');
        $sheet->setCellValue('C' . $row, 'Project Count');
        $sheet->setCellValue('D' . $row, 'Project Value');

        // Style header row
        $sheet->getStyle('A' . $row . ':D' . $row)->getFont()->setBold(true);
        $sheet->getStyle('A' . $row . ':D' . $row)->getFill()
            ->setFillType(\PhpOffice\PhpSpreadsheet\Style\Fill::FILL_SOLID)
            ->getStartColor()->setRGB('DDDDDD');

        $row++;

        // Add data rows
        foreach ($data['by_month'] as $month => $monthData) {
            $sheet->setCellValue('A' . $row, Carbon::createFromFormat('Y-m', $month)->format('M Y'));
            $sheet->setCellValue('B' . $row, $monthData['count']);
            $sheet->setCellValue('C' . $row, $monthData['project_count']);
            $sheet->setCellValue('D' . $row, 'Rp ' . number_format($monthData['project_value'], 0, ',', '.'));
            $row++;
        }

        // Add Clients List
        $row += 2;
        $sheet->setCellValue('A' . $row, 'New Clients List');
        $row++;

        // Headers
        $sheet->setCellValue('A' . $row, 'No');
        $sheet->setCellValue('B' . $row, 'Client Name');
        $sheet->setCellValue('C' . $row, 'Email');
        $sheet->setCellValue('D' . $row, 'Phone');
        $sheet->setCellValue('E' . $row, 'Source');
        $sheet->setCellValue('F' . $row, 'Status');
        $sheet->setCellValue('G' . $row, 'Project Count');
        $sheet->setCellValue('H' . $row, 'Created Date');

        // Style header row
        $sheet->getStyle('A' . $row . ':H' . $row)->getFont()->setBold(true);
        $sheet->getStyle('A' . $row . ':H' . $row)->getFill()
            ->setFillType(\PhpOffice\PhpSpreadsheet\Style\Fill::FILL_SOLID)
            ->getStartColor()->setRGB('DDDDDD');

        $row++;

        // Add data rows
        foreach ($data['clients'] as $index => $client) {
            $sheet->setCellValue('A' . $row, $index + 1);
            $sheet->setCellValue('B' . $row, $client->name);
            $sheet->setCellValue('C' . $row, $client->email);
            $sheet->setCellValue('D' . $row, $client->phone);
            $sheet->setCellValue('E' . $row, ucfirst($client->source));
            $sheet->setCellValue('F' . $row, ucfirst($client->status));
            $sheet->setCellValue('G' . $row, $client->projects->count());
            $sheet->setCellValue('H' . $row, $client->created_at->format('d M Y'));
            $row++;
        }
    }

    /**
     * Set Survey Analysis Excel Data
     */
    private function setSurveyAnalysisExcel($sheet, $data)
    {
        // Add Summary Section
        $sheet->setCellValue('A4', 'Survey Analysis Summary');
        $sheet->setCellValue('A5', 'Total Surveys:');
        $sheet->setCellValue('B5', $data['total_surveys']);
        $sheet->setCellValue('A6', 'Completed Surveys:');
        $sheet->setCellValue('B6', $data['completed_surveys']);
        $sheet->setCellValue('A7', 'Pending Surveys:');
        $sheet->setCellValue('B7', $data['pending_surveys']);
        $sheet->setCellValue('A8', 'Total Photos:');
        $sheet->setCellValue('B8', $data['total_photos']);

        // Add Status Distribution
        $sheet->setCellValue('A10', 'Status Distribution');

        // Headers
        $sheet->setCellValue('A11', 'Status');
        $sheet->setCellValue('B11', 'Count');
        $sheet->setCellValue('C11', 'Photo Count');

        // Style header row
        $sheet->getStyle('A11:C11')->getFont()->setBold(true);
        $sheet->getStyle('A11:C11')->getFill()
            ->setFillType(\PhpOffice\PhpSpreadsheet\Style\Fill::FILL_SOLID)
            ->getStartColor()->setRGB('DDDDDD');

        // Add data rows
        $row = 12;
        foreach ($data['by_status'] as $status => $statusData) {
            $sheet->setCellValue('A' . $row, ucfirst($status));
            $sheet->setCellValue('B' . $row, $statusData['count']);
            $sheet->setCellValue('C' . $row, $statusData['photo_count']);
            $row++;
        }

        // Add Surveyor Performance
        $row += 2;
        $sheet->setCellValue('A' . $row, 'Surveyor Performance');
        $row++;

        // Headers
        $sheet->setCellValue('A' . $row, 'No');
        $sheet->setCellValue('B' . $row, 'Surveyor Name');
        $sheet->setCellValue('C' . $row, 'Total Surveys');
        $sheet->setCellValue('D' . $row, 'Completed');
        $sheet->setCellValue('E' . $row, 'Completion Rate');
        $sheet->setCellValue('F' . $row, 'Photo Count');

        // Style header row
        $sheet->getStyle('A' . $row . ':F' . $row)->getFont()->setBold(true);
        $sheet->getStyle('A' . $row . ':F' . $row)->getFill()
            ->setFillType(\PhpOffice\PhpSpreadsheet\Style\Fill::FILL_SOLID)
            ->getStartColor()->setRGB('DDDDDD');

        $row++;

        // Add data rows
        $index = 1;
        foreach ($data['by_surveyor'] as $surveyorData) {
            $completionRate = $surveyorData['count'] > 0
                ? round(($surveyorData['completed'] / $surveyorData['count']) * 100, 1)
                : 0;

            $sheet->setCellValue('A' . $row, $index);
            $sheet->setCellValue('B' . $row, $surveyorData['surveyor']->name);
            $sheet->setCellValue('C' . $row, $surveyorData['count']);
            $sheet->setCellValue('D' . $row, $surveyorData['completed']);
            $sheet->setCellValue('E' . $row, $completionRate . '%');
            $sheet->setCellValue('F' . $row, $surveyorData['photo_count']);
            $row++;
            $index++;
        }

        // Add Surveys List
        $row += 2;
        $sheet->setCellValue('A' . $row, 'Surveys List');
        $row++;

        // Headers
        $sheet->setCellValue('A' . $row, 'No');
        $sheet->setCellValue('B' . $row, 'Project');
        $sheet->setCellValue('C' . $row, 'Surveyor');
        $sheet->setCellValue('D' . $row, 'Scheduled Date');
        $sheet->setCellValue('E' . $row, 'Actual Date');
        $sheet->setCellValue('F' . $row, 'Status');
        $sheet->setCellValue('G' . $row, 'Photos');

        // Style header row
        $sheet->getStyle('A' . $row . ':G' . $row)->getFont()->setBold(true);
        $sheet->getStyle('A' . $row . ':G' . $row)->getFill()
            ->setFillType(\PhpOffice\PhpSpreadsheet\Style\Fill::FILL_SOLID)
            ->getStartColor()->setRGB('DDDDDD');

        $row++;

        // Add data rows
        foreach ($data['surveys'] as $index => $survey) {
            $sheet->setCellValue('A' . $row, $index + 1);
            $sheet->setCellValue('B' . $row, $survey->project->name ?? 'N/A');
            $sheet->setCellValue('C' . $row, $survey->surveyor->name ?? 'N/A');
            $sheet->setCellValue('D' . $row, $survey->scheduled_date->format('d M Y H:i'));
            $sheet->setCellValue('E' . $row, $survey->actual_date ? $survey->actual_date->format('d M Y H:i') : 'N/A');
            $sheet->setCellValue('F' . $row, ucfirst($survey->status));
            $sheet->setCellValue('G' . $row, $survey->photos->count());
            $row++;
        }
    }

    /**
     * Set Revenue Forecast Excel Data
     */
    private function setRevenueForecastExcel($sheet, $data)
    {
        // Add Summary Section
        $sheet->setCellValue('A4', 'Revenue Forecast Summary');
        $sheet->setCellValue('A5', 'Total Pipeline Projects:');
        $sheet->setCellValue('B5', $data['total_pipeline_projects']);
        $sheet->setCellValue('A6', 'Total Pipeline Value:');
        $sheet->setCellValue('B6', 'Rp ' . number_format($data['total_pipeline_value'], 0, ',', '.'));
        $sheet->setCellValue('A7', 'Total Weighted Value:');
        $sheet->setCellValue('B7', 'Rp ' . number_format($data['total_weighted_value'], 0, ',', '.'));

        // Add Monthly Forecast
        $sheet->setCellValue('A9', 'Monthly Forecast');

        // Headers
        $sheet->setCellValue('A10', 'Month');
        $sheet->setCellValue('B10', 'Projects');
        $sheet->setCellValue('C10', 'Total Value');
        $sheet->setCellValue('D10', 'Weighted Value');

        // Style header row
        $sheet->getStyle('A10:D10')->getFont()->setBold(true);
        $sheet->getStyle('A10:D10')->getFill()
            ->setFillType(\PhpOffice\PhpSpreadsheet\Style\Fill::FILL_SOLID)
            ->getStartColor()->setRGB('DDDDDD');

        // Add data rows
        $row = 11;
        foreach ($data['by_month'] as $month => $monthData) {
            $sheet->setCellValue('A' . $row, $monthData['month']);
            $sheet->setCellValue('B' . $row, $monthData['total_projects']);
            $sheet->setCellValue('C' . $row, 'Rp ' . number_format($monthData['total_value'], 0, ',', '.'));
            $sheet->setCellValue('D' . $row, 'Rp ' . number_format($monthData['weighted_value'], 0, ',', '.'));
            $row++;
        }

        // Add Status Distribution
        $row += 2;
        $sheet->setCellValue('A' . $row, 'Status Distribution');
        $row++;

        // Headers
        $sheet->setCellValue('A' . $row, 'Status');
        $sheet->setCellValue('B' . $row, 'Projects');
        $sheet->setCellValue('C' . $row, 'Total Value');
        $sheet->setCellValue('D' . $row, 'Weighted Value');
        $sheet->setCellValue('E' . $row, 'Probability');

        // Style header row
        $sheet->getStyle('A' . $row . ':E' . $row)->getFont()->setBold(true);
        $sheet->getStyle('A' . $row . ':E' . $row)->getFill()
            ->setFillType(\PhpOffice\PhpSpreadsheet\Style\Fill::FILL_SOLID)
            ->getStartColor()->setRGB('DDDDDD');

        $row++;

        // Probability mapping
        $probabilities = [
            'lead' => '10%',
            'survey' => '30%',
            'penawaran' => '50%',
            'negosiasi' => '80%',
        ];

        // Add data rows
        foreach ($data['by_status'] as $status => $statusData) {
            $sheet->setCellValue('A' . $row, ucfirst($status));
            $sheet->setCellValue('B' . $row, $statusData['count']);
            $sheet->setCellValue('C' . $row, 'Rp ' . number_format($statusData['value'], 0, ',', '.'));
            $sheet->setCellValue('D' . $row, 'Rp ' . number_format($statusData['weighted_value'], 0, ',', '.'));
            $sheet->setCellValue('E' . $row, $probabilities[$status] ?? 'N/A');
            $row++;
        }

        // Add Projects List
        $row += 2;
        $sheet->setCellValue('A' . $row, 'Pipeline Projects');
        $row++;

        // Headers
        $sheet->setCellValue('A' . $row, 'No');
        $sheet->setCellValue('B' . $row, 'Project Code');
        $sheet->setCellValue('C' . $row, 'Project Name');
        $sheet->setCellValue('D' . $row, 'Client');
        $sheet->setCellValue('E' . $row, 'Status');
        $sheet->setCellValue('F' . $row, 'Value');
        $sheet->setCellValue('G' . $row, 'Probability');
        $sheet->setCellValue('H' . $row, 'Weighted Value');
        $sheet->setCellValue('I' . $row, 'PIC');

        // Style header row
        $sheet->getStyle('A' . $row . ':I' . $row)->getFont()->setBold(true);
        $sheet->getStyle('A' . $row . ':I' . $row)->getFill()
            ->setFillType(\PhpOffice\PhpSpreadsheet\Style\Fill::FILL_SOLID)
            ->getStartColor()->setRGB('DDDDDD');

        $row++;

        // Add data rows
        foreach ($data['projects'] as $index => $project) {
            $sheet->setCellValue('A' . $row, $index + 1);
            $sheet->setCellValue('B' . $row, $project->code);
            $sheet->setCellValue('C' . $row, $project->name);
            $sheet->setCellValue('D' . $row, $project->client->name ?? 'N/A');
            $sheet->setCellValue('E' . $row, ucfirst($project->status));
            $sheet->setCellValue('F' . $row, 'Rp ' . number_format($project->project_value, 0, ',', '.'));
            $sheet->setCellValue('G' . $row, ($project->probability * 100) . '%');
            $sheet->setCellValue('H' . $row, 'Rp ' . number_format($project->weighted_value, 0, ',', '.'));
            $sheet->setCellValue('I' . $row, $project->pic->name ?? 'N/A');
            $row++;
        }
    }
}

app\Http\Controllers\SettingController.php:
<?php

namespace App\Http\Controllers;

use App\Models\Setting;
use App\Models\User;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Cache;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Facades\Validator;
use Illuminate\Routing\Controller;

class SettingController extends Controller
{
    public function __construct()
    {
        $this->middleware(['auth', 'role:admin']);
    }

    /**
     * Display the settings dashboard
     */
    public function index()
    {
        $generalSettings = Setting::where('group', 'general')->get()->keyBy('key');
        $companySettings = Setting::where('group', 'company')->get()->keyBy('key');
        $notificationSettings = Setting::where('group', 'notification')->get()->keyBy('key');
        $userSettings = Setting::where('group', 'user')->get()->keyBy('key');

        return view('settings.index', compact(
            'generalSettings',
            'companySettings',
            'notificationSettings',
            'userSettings'
        ));
    }

    /**
     * Update general settings
     */
    public function updateGeneral(Request $request)
    {
        $validated = $request->validate([
            'site_name' => 'required|string|max:255',
            'site_description' => 'nullable|string|max:1000',
            'maintenance_mode' => 'boolean',
            'default_pagination' => 'required|integer|min:5|max:100',
            'date_format' => 'required|string|in:d/m/Y,m/d/Y,Y-m-d,d-m-Y,d M Y',
            'time_format' => 'required|string|in:H:i,h:i A',
            'timezone' => 'required|string|in:Asia/Jakarta,Asia/Makassar,Asia/Jayapura'
        ]);

        foreach ($validated as $key => $value) {
            Setting::updateOrCreate(
                ['key' => $key, 'group' => 'general'],
                ['value' => $value]
            );
        }

        $this->clearSettingsCache();

        return back()->with('success', 'General settings updated successfully');
    }

    /**
     * Update company settings
     */
    public function updateCompany(Request $request)
    {
        $validated = $request->validate([
            'company_name' => 'required|string|max:255',
            'company_address' => 'nullable|string|max:1000',
            'company_phone' => 'nullable|string|max:20',
            'company_email' => 'nullable|email|max:255',
            'company_website' => 'nullable|url|max:255',
            'company_tax_id' => 'nullable|string|max:50',
            'invoice_prefix' => 'nullable|string|max:10',
            'currency' => 'required|string|in:IDR,USD',
            'fiscal_year_start' => 'required|string|date_format:m-d'
        ]);

        // Handle company logo upload
        if ($request->hasFile('company_logo')) {
            $request->validate([
                'company_logo' => 'image|mimes:jpeg,png,jpg|max:2048'
            ]);

            $logoFile = $request->file('company_logo');
            $logoPath = $logoFile->store('settings', 'public');

            // Delete old logo if exists
            $oldLogo = Setting::where('key', 'company_logo')->where('group', 'company')->first();
            if ($oldLogo && Storage::disk('public')->exists($oldLogo->value)) {
                Storage::disk('public')->delete($oldLogo->value);
            }

            Setting::updateOrCreate(
                ['key' => 'company_logo', 'group' => 'company'],
                ['value' => $logoPath]
            );
        }

        foreach ($validated as $key => $value) {
            Setting::updateOrCreate(
                ['key' => $key, 'group' => 'company'],
                ['value' => $value]
            );
        }

        $this->clearSettingsCache();

        return back()->with('success', 'Company settings updated successfully');
    }

    /**
     * Update notification settings
     */
    public function updateNotification(Request $request)
    {
        $validated = $request->validate([
            'email_notifications' => 'boolean',
            'survey_notifications' => 'boolean',
            'project_status_notifications' => 'boolean',
            'document_upload_notifications' => 'boolean',
            'client_notifications' => 'boolean',
            'notification_email' => 'required_if:email_notifications,1|nullable|email',
            'email_sender_name' => 'required_if:email_notifications,1|nullable|string|max:255'
        ]);

        foreach ($validated as $key => $value) {
            Setting::updateOrCreate(
                ['key' => $key, 'group' => 'notification'],
                ['value' => $value]
            );
        }

        $this->clearSettingsCache();

        return back()->with('success', 'Notification settings updated successfully');
    }

    /**
     * Update user settings
     */
    public function updateUser(Request $request)
    {
        $validated = $request->validate([
            'default_role' => 'required|string|exists:roles,name',
            'allow_registration' => 'boolean',
            'account_approval' => 'boolean',
            'password_min_length' => 'required|integer|min:6|max:20',
            'password_requires_letters' => 'boolean',
            'password_requires_numbers' => 'boolean',
            'password_requires_symbols' => 'boolean',
            'user_avatar_max_size' => 'required|integer|min:1|max:10',
            'inactive_user_days' => 'required|integer|min:30|max:365'
        ]);

        foreach ($validated as $key => $value) {
            Setting::updateOrCreate(
                ['key' => $key, 'group' => 'user'],
                ['value' => $value]
            );
        }

        $this->clearSettingsCache();

        return back()->with('success', 'User settings updated successfully');
    }

    /**
     * Display the system information
     */
    public function system()
    {
        $phpVersion = phpversion();
        $laravelVersion = app()->version();
        $serverOS = php_uname('s') . ' ' . php_uname('r');
        $serverSoftware = $_SERVER['SERVER_SOFTWARE'] ?? 'Unknown';
        $databaseType = config('database.default');
        $databaseVersion = match($databaseType) {
            'mysql' => \DB::select('SELECT VERSION() as version')[0]->version,
            'pgsql' => \DB::select('SELECT version()')[0]->version,
            default => 'Unknown'
        };

        $diskTotal = disk_total_space('/');
        $diskFree = disk_free_space('/');
        $diskUsed = $diskTotal - $diskFree;
        $diskUsedPercent = round(($diskUsed / $diskTotal) * 100, 2);

        $memInfo = $this->getSystemMemoryInfo();
        $memoryUsedPercent = isset($memInfo['MemTotal']) && isset($memInfo['MemAvailable'])
            ? round((($memInfo['MemTotal'] - $memInfo['MemAvailable']) / $memInfo['MemTotal']) * 100, 2)
            : null;

        $systemInfo = [
            'PHP Version' => $phpVersion,
            'Laravel Version' => $laravelVersion,
            'Server OS' => $serverOS,
            'Web Server' => $serverSoftware,
            'Database Type' => ucfirst($databaseType),
            'Database Version' => $databaseVersion,
            'Disk Usage' => "$diskUsedPercent% used (" . $this->formatBytes($diskUsed) . " of " . $this->formatBytes($diskTotal) . ")",
            'Memory Usage' => $memoryUsedPercent ? "$memoryUsedPercent%" : 'Unknown',
            'Max Upload Size' => ini_get('upload_max_filesize'),
            'Post Max Size' => ini_get('post_max_size'),
            'Max Execution Time' => ini_get('max_execution_time') . 's',
        ];

        // Extension checks
        $requiredExtensions = [
            'BCMath', 'Ctype', 'Fileinfo', 'JSON', 'Mbstring', 'OpenSSL',
            'PDO', 'Tokenizer', 'XML', 'cURL', 'GD'
        ];

        $extensionStatus = [];
        foreach ($requiredExtensions as $extension) {
            $extensionStatus[$extension] = extension_loaded(strtolower($extension));
        }

        // Directory permissions
        $directories = [
            'Storage' => storage_path(),
            'Bootstrap/Cache' => base_path('bootstrap/cache'),
            'Public' => public_path(),
            'Public/Storage' => public_path('storage'),
        ];

        $directoryPermissions = [];
        foreach ($directories as $name => $path) {
            $directoryPermissions[$name] = [
                'path' => $path,
                'writable' => is_writable($path)
            ];
        }

        return view('settings.system', compact('systemInfo', 'extensionStatus', 'directoryPermissions'));
    }

    /**
     * Display the backup page
     */
    public function backup()
    {
        $backups = Storage::disk('backup')->files();
        $backups = array_filter($backups, function($file) {
            return pathinfo($file, PATHINFO_EXTENSION) === 'zip';
        });

        $backupData = [];
        foreach ($backups as $backup) {
            $backupData[] = [
                'name' => basename($backup),
                'size' => Storage::disk('backup')->size($backup),
                'last_modified' => Storage::disk('backup')->lastModified($backup),
            ];
        }

        // Sort backups by last modified (newest first)
        usort($backupData, function($a, $b) {
            return $b['last_modified'] <=> $a['last_modified'];
        });

        return view('settings.backup', compact('backupData'));
    }

    /**
     * Create a new backup
     */
    public function createBackup()
    {
        try {
            // Initiate backup using the backup package
            \Artisan::call('backup:run');

            return back()->with('success', 'Backup created successfully');
        } catch (\Exception $e) {
            return back()->with('error', 'Failed to create backup: ' . $e->getMessage());
        }
    }

    /**
     * Download a backup file
     */
    public function downloadBackup($filename)
    {
        $filePath = Storage::disk('backup')->path($filename);

        if (!Storage::disk('backup')->exists($filename)) {
            return back()->with('error', 'Backup file not found');
        }

        return response()->download($filePath);
    }

    /**
     * Delete a backup file
     */
    public function deleteBackup($filename)
    {
        if (!Storage::disk('backup')->exists($filename)) {
            return back()->with('error', 'Backup file not found');
        }

        Storage::disk('backup')->delete($filename);

        return back()->with('success', 'Backup deleted successfully');
    }

    /**
     * Display logs page
     */
    public function logs()
    {
        $logFiles = Storage::disk('logs')->files();
        $logFiles = array_filter($logFiles, function($file) {
            return pathinfo($file, PATHINFO_EXTENSION) === 'log';
        });

        $logData = [];
        foreach ($logFiles as $log) {
            $logData[] = [
                'name' => basename($log),
                'size' => Storage::disk('logs')->size($log),
                'last_modified' => Storage::disk('logs')->lastModified($log),
            ];
        }

        // Sort logs by last modified (newest first)
        usort($logData, function($a, $b) {
            return $b['last_modified'] <=> $a['last_modified'];
        });

        return view('settings.logs', compact('logData'));
    }

    /**
     * View a log file
     */
    public function viewLog($filename)
    {
        if (!Storage::disk('logs')->exists($filename)) {
            return back()->with('error', 'Log file not found');
        }

        $content = Storage::disk('logs')->get($filename);

        return view('settings.log-viewer', compact('content', 'filename'));
    }

    /**
     * Download a log file
     */
    public function downloadLog($filename)
    {
        if (!Storage::disk('logs')->exists($filename)) {
            return back()->with('error', 'Log file not found');
        }

        $filePath = Storage::disk('logs')->path($filename);

        return response()->download($filePath);
    }

    /**
     * Clear the settings cache
     */
    private function clearSettingsCache()
    {
        Cache::forget('settings');
    }

    /**
     * Get system memory info
     */
    private function getSystemMemoryInfo()
    {
        if (function_exists('shell_exec') && strtolower(PHP_OS) === 'linux') {
            $meminfo = shell_exec('cat /proc/meminfo');
            $meminfo = explode("\n", $meminfo);
            $meminfo = array_filter($meminfo);

            $memory = [];
            foreach ($meminfo as $line) {
                list($key, $val) = explode(':', $line);
                $memory[trim($key)] = intval(trim(explode(' ', trim($val))[0]));
            }

            return $memory;
        }

        return [];
    }

    /**
     * Format bytes to human readable format
     */
    private function formatBytes($bytes, $precision = 2)
    {
        $units = ['B', 'KB', 'MB', 'GB', 'TB'];

        $bytes = max($bytes, 0);
        $pow = floor(($bytes ? log($bytes) : 0) / log(1024));
        $pow = min($pow, count($units) - 1);

        $bytes /= (1 << (10 * $pow));

        return round($bytes, $precision) . ' ' . $units[$pow];
    }
}

app\Http\Controllers\SurveyController.php:
<?php

namespace App\Http\Controllers;

use App\Models\Survey;
use App\Models\Project;
use App\Models\User;
use App\Models\SurveyPhoto;
use App\Notifications\SurveyAssigned;
use App\Events\NewSurveyAssigned;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Facades\Notification;
use Intervention\Image\Facades\Image;
use Illuminate\Routing\Controllers\HasMiddleware;
use Illuminate\Routing\Controllers\Middleware;

class SurveyController extends Controller implements HasMiddleware
{
    // [LARAVEL 12+] Definisikan middleware secara static
    public static function middleware(): array
    {
        return [
            new Middleware(['auth']),
            // Jika ingin spesifik role, aktifkan:
            // new Middleware(['role:admin|manager|marketing|surveyor']),
        ];
    }

    public function index(Request $request)
    {
        $query = Survey::with(['project.client', 'surveyor']);

        // Filter by role
        if (Auth::user()->hasRole('surveyor')) {
            $query->where('surveyor_id', Auth::id());
        } elseif (Auth::user()->hasRole('marketing')) {
            $query->whereHas('project', function($q) {
                $q->where('pic_id', Auth::id());
            });
        }

        // Search
        if ($request->has('search')) {
            $search = $request->search;
            $query->where(function($q) use ($search) {
                $q->whereHas('project', function($q) use ($search) {
                    $q->where('name', 'like', "%{$search}%")
                      ->orWhere('code', 'like', "%{$search}%");
                })->orWhereHas('project.client', function($q) use ($search) {
                    $q->where('name', 'like', "%{$search}%");
                });
            });
        }

        // Filter by status
        if ($request->has('status') && $request->status != '') {
            $query->where('status', $request->status);
        }

        // Filter by date
        if ($request->has('date') && $request->date != '') {
            $query->whereDate('scheduled_date', $request->date);
        }

        $surveys = $query->latest('scheduled_date')->paginate(10);

        return view('surveys.index', compact('surveys'));
    }

    public function create(Request $request)
    {
        // If surveyor, redirect to mobile form
        if (Auth::user()->hasRole('surveyor') && !Auth::user()->hasRole('admin')) {
            return redirect()->route('surveys.mobile.form');
        }

        $projects = Project::with('client')
                          ->whereIn('status', ['lead', 'survey'])
                          ->orderBy('name')
                          ->get();

        $surveyors = User::role('surveyor')->get();

        // Pre-select project if provided
        $selectedProject = $request->project_id ? Project::find($request->project_id) : null;

        return view('surveys.create', compact('projects', 'surveyors', 'selectedProject'));
    }

    public function store(Request $request)
    {
        $validated = $request->validate([
            'project_id' => 'required|exists:projects,id',
            'surveyor_id' => 'required|exists:users,id',
            'scheduled_date' => 'required|date|after_or_equal:today',
            'notes' => 'nullable|string'
        ]);

        $validated['status'] = 'pending';

        DB::beginTransaction();
        try {
            $survey = Survey::create($validated);

            // Update project status to survey if still lead
            $project = Project::find($validated['project_id']);
            if ($project->status == 'lead') {
                $project->update(['status' => 'survey']);
            }

            // Send notification to surveyor
            $survey->surveyor->notify(new SurveyAssigned($survey, Auth::user()));

            // Also notify admin and managers
            $adminAndManagers = User::role(['admin', 'manager'])->get();
            Notification::send($adminAndManagers, new SurveyAssigned($survey, Auth::user()));

            DB::commit();

            return redirect()->route('surveys.show', $survey)
                ->with('success', 'Survey berhasil dijadwalkan!');

        } catch (\Exception $e) {
            DB::rollback();
            return back()->with('error', 'Terjadi kesalahan: ' . $e->getMessage())
                        ->withInput();
        }
    }

    public function show(Survey $survey)
    {
        // Check authorization
        if (Auth::user()->hasRole('surveyor') && $survey->surveyor_id != Auth::id()) {
            abort(403, 'Unauthorized');
        }

        if (Auth::user()->hasRole('marketing') && $survey->project->pic_id != Auth::id()) {
            abort(403, 'Unauthorized');
        }

        $survey->load(['project.client', 'surveyor', 'photos']);
        $surveyors = User::role('surveyor')->where('is_active', true)->get();

        return view('surveys.show', compact('survey', 'surveyors'));
    }

    public function edit(Survey $survey)
    {
        // Only allow edit if pending
        if ($survey->status != 'pending') {
            return back()->with('error', 'Survey yang sudah dimulai tidak dapat diedit.');
        }

        // Check authorization
        if (!Auth::user()->hasRole('admin') && !Auth::user()->hasRole('marketing')) {
            abort(403, 'Unauthorized');
        }

        $projects = Project::with('client')->orderBy('name')->get();
        $surveyors = User::role('surveyor')->get();

        return view('surveys.edit', compact('survey', 'projects', 'surveyors'));
    }

    public function update(Request $request, Survey $survey)
    {
        // Only allow update if pending
        if ($survey->status != 'pending') {
            return back()->with('error', 'Survey yang sudah dimulai tidak dapat diubah.');
        }

        $validated = $request->validate([
            'project_id' => 'required|exists:projects,id',
            'surveyor_id' => 'required|exists:users,id',
            'scheduled_date' => 'required|date',
            'notes' => 'nullable|string'
        ]);

        $survey->update($validated);

        return redirect()->route('surveys.show', $survey)
            ->with('success', 'Survey berhasil diupdate!');
    }

    public function destroy(Survey $survey)
    {
        // Only admin can delete
        if (!Auth::user()->hasRole('admin')) {
            abort(403, 'Unauthorized');
        }

        // Check if survey has been started
        if ($survey->status != 'pending') {
            return back()->with('error', 'Survey yang sudah dimulai tidak dapat dihapus.');
        }

        $survey->delete();

        return redirect()->route('surveys.index')
            ->with('success', 'Survey berhasil dihapus!');
    }

    // Mobile specific methods
    public function mobileForm(Request $request)
    {
        // Check if user is surveyor
        if (!Auth::user()->hasRole('surveyor') && !Auth::user()->hasRole('admin')) {
            abort(403, 'Unauthorized');
        }

        // Get pending surveys for this surveyor
        $pendingSurveys = Survey::with(['project.client'])
                               ->where('surveyor_id', Auth::id())
                               ->where('status', 'pending')
                               ->whereDate('scheduled_date', '<=', now())
                               ->orderBy('scheduled_date')
                               ->get();

        // If survey_id provided, load that survey
        $survey = null;
        if ($request->has('survey_id')) {
            $survey = Survey::with(['project.client'])
                           ->where('id', $request->survey_id)
                           ->where('surveyor_id', Auth::id())
                           ->first();

            if (!$survey) {
                abort(404);
            }
        }

        return view('surveys.mobile.form', compact('pendingSurveys', 'survey'));
    }

    public function submitMobile(Request $request, Survey $survey)
    {
        // Validate survey belongs to this surveyor
        if ($survey->surveyor_id != Auth::id()) {
            abort(403, 'Unauthorized');
        }

        $validated = $request->validate([
            'latitude' => 'required|numeric',
            'longitude' => 'required|numeric',
            'address' => 'required|string',
            'electricity' => 'required|in:yes,no',
            'electricity_notes' => 'nullable|string',
            'water' => 'required|in:yes,no',
            'water_notes' => 'nullable|string',
            'road_access' => 'required|in:easy,medium,difficult',
            'permit_status' => 'required|in:complete,process,none',
            'existing_condition' => 'required|in:good,medium,bad,empty',
            'area_size' => 'required|numeric|min:0',
            'notes' => 'nullable|string',
            'photos.*' => 'image|max:10240' // 10MB max per photo
        ]);

        DB::beginTransaction();
        try {
            // Update survey data
            $survey->update([
                'latitude' => $validated['latitude'],
                'longitude' => $validated['longitude'],
                'address' => $validated['address'],
                'actual_date' => now(),
                'status' => 'completed',
                'notes' => $validated['notes'],
                'checklist_data' => [
                    'electricity' => $validated['electricity'],
                    'electricity_notes' => $validated['electricity_notes'],
                    'water' => $validated['water'],
                    'water_notes' => $validated['water_notes'],
                    'road_access' => $validated['road_access'],
                    'permit_status' => $validated['permit_status'],
                    'existing_condition' => $validated['existing_condition'],
                    'area_size' => $validated['area_size']
                ]
            ]);

            // Handle photo uploads
            if ($request->hasFile('photos')) {
                foreach ($request->file('photos') as $index => $photo) {
                    // Generate filename
                    $filename = 'survey_' . $survey->id . '_' . time() . '_' . $index . '.' . $photo->extension();

                    // Store original
                    $path = $photo->storeAs('surveys/' . $survey->id, $filename, 'public');

                    // Create thumbnail
                    $thumbnailPath = 'surveys/' . $survey->id . '/thumb_' . $filename;
                    $image = Image::make($photo);
                    $image->fit(300, 300);
                    Storage::disk('public')->put($thumbnailPath, $image->stream());

                    // Save to database
                    SurveyPhoto::create([
                        'survey_id' => $survey->id,
                        'filename' => $filename,
                        'path' => $path,
                        'thumbnail_path' => $thumbnailPath,
                        'order' => $index + 1
                    ]);
                }
            }

            // Update project status if needed
            $project = $survey->project;
            if ($project->status == 'survey') {
                $project->update(['status' => 'penawaran']);
            }

            DB::commit();

            return redirect()->route('surveys.show', $survey)
                ->with('success', 'Survey berhasil diselesaikan!');

        } catch (\Exception $e) {
            DB::rollback();
            return back()->with('error', 'Terjadi kesalahan: ' . $e->getMessage())
                        ->withInput();
        }
    }

    public function uploadPhotos(Request $request, Survey $survey)
    {
        // Validate
        $request->validate([
            'photos.*' => 'required|image|max:10240'
        ]);

        $uploadedCount = 0;

        foreach ($request->file('photos') as $photo) {
            $filename = 'survey_' . $survey->id . '_' . uniqid() . '.' . $photo->extension();
            $path = $photo->storeAs('surveys/' . $survey->id, $filename, 'public');

            SurveyPhoto::create([
                'survey_id' => $survey->id,
                'filename' => $filename,
                'path' => $path,
                'order' => $survey->photos()->max('order') + 1
            ]);

            $uploadedCount++;
        }

        return response()->json([
            'success' => true,
            'message' => $uploadedCount . ' foto berhasil diupload'
        ]);
    }

    public function assignSurvey(Request $request, Survey $survey, User $user)
    {
        // Validasi apakah user yang login berhak melakukan assignment
        // Misalnya, hanya admin atau manager yang boleh assign survey
        if (!Auth::user()->hasRole(['admin', 'manager'])) {
            return back()->with('error', 'Anda tidak memiliki izin untuk melakukan tindakan ini.');
        }

        // Logic untuk assign survey ke user
        $survey->update([
            'assigned_to' => $user->id,
            'status' => 'assigned', // Update status survey jika diperlukan
            'assigned_at' => now()  // Simpan waktu assignment jika diperlukan
        ]);

        // Broadcast event
        event(new NewSurveyAssigned($survey, $user));

        return back()->with('success', 'Survey berhasil ditetapkan kepada ' . $user->name);
    }
}

app\Http\Controllers\TestController.php:
<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\Client;
use Illuminate\Support\Facades\Auth;
use App\Notifications\NewClientAssigned;

class TestController extends Controller
{
    public function testNotification()
    {
        $client = Client::first(); // Or create a dummy client if none exists
        Auth::user()->notify(new NewClientAssigned($client, Auth::user()));

        return response()->json(['message' => 'Test notification sent']);
    }
}

app\Http\Controllers\UserController.php:
<?php

namespace App\Http\Controllers;

use App\Models\User;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Storage;
use Spatie\Permission\Models\Role;

class UserController extends Controller
{
    /**
     * Display a listing of the users.
     */
    public function index(Request $request)
    {
        $query = User::with('roles');

        // Search filter
        if($request->filled('search')) {
            $search = $request->search;
            $query->where(function($q) use ($search) {
                $q->where('name', 'like', "%{$search}%")
                  ->orWhere('email', 'like', "%{$search}%");
            });
        }

        // Role filter
        if($request->filled('role')) {
            $query->whereHas('roles', function($q) use ($request) {
                $q->where('name', $request->role);
            });
        }

        // Status filter
        if($request->filled('status')) {
            $query->where('is_active', $request->status === 'active' ? 1 : 0);
        }

        $users = $query->orderBy('created_at', 'desc')->paginate(10);
        $roles = Role::all();

        return view('users.index', compact('users', 'roles'));
    }

    /**
     * Show the form for creating a new user.
     */
    public function create()
    {
        $roles = Role::all();
        return view('users.create', compact('roles'));
    }

    /**
     * Store a newly created user in storage.
     */
    public function store(Request $request)
    {
        $request->validate([
            'name' => 'required|string|max:255',
            'email' => 'required|string|email|max:255|unique:users',
            'password' => 'required|string|min:8|confirmed',
            'role' => 'required|exists:roles,name',
            'avatar' => 'nullable|image|max:2048',
            'phone' => 'nullable|string|max:20',
            'address' => 'nullable|string'
        ]);

        $user = new User();
        $user->name = $request->name;
        $user->email = $request->email;
        $user->password = Hash::make($request->password);
        $user->phone = $request->phone;
        $user->address = $request->address;
        $user->is_active = $request->has('is_active') ? 1 : 0;

        // Handle avatar upload
        if($request->hasFile('avatar')) {
            $avatarPath = $request->file('avatar')->store('avatars', 'public');
            $user->avatar = $avatarPath;
        }

        $user->save();

        // Assign role
        $user->assignRole($request->role);

        return redirect()->route('users.index')->with('success', 'User created successfully.');
    }

    /**
     * Display the specified user.
     */
    public function show(User $user)
    {
        return view('users.show', compact('user'));
    }

    /**
     * Show the form for editing the specified user.
     */
    public function edit(User $user)
    {
        $roles = Role::all();
        return view('users.edit', compact('user', 'roles'));
    }

    /**
     * Update the specified user in storage.
     */
    public function update(Request $request, User $user)
    {
        $request->validate([
            'name' => 'required|string|max:255',
            'email' => 'required|string|email|max:255|unique:users,email,' . $user->id,
            'role' => 'required|exists:roles,name',
            'avatar' => 'nullable|image|max:2048',
            'phone' => 'nullable|string|max:20',
            'address' => 'nullable|string'
        ]);

        $user->name = $request->name;
        $user->email = $request->email;
        $user->phone = $request->phone;
        $user->address = $request->address;
        $user->is_active = $request->has('is_active') ? 1 : 0;

        // Handle avatar upload
        if($request->hasFile('avatar')) {
            // Delete old avatar if exists
            if($user->avatar) {
                Storage::disk('public')->delete($user->avatar);
            }

            $avatarPath = $request->file('avatar')->store('avatars', 'public');
            $user->avatar = $avatarPath;
        }

        $user->save();

        // Update role
        $user->syncRoles([$request->role]);

        return redirect()->route('users.index')->with('success', 'User updated successfully.');
    }

    /**
     * Remove the specified user from storage.
     */
    public function destroy(User $user)
    {
        // Prevent self-deletion
        if(Auth::id() === $user->id) {
            return back()->with('error', 'You cannot delete your own account.');
        }

        // Delete avatar if exists
        if($user->avatar) {
            Storage::disk('public')->delete($user->avatar);
        }

        $user->delete();

        return redirect()->route('users.index')->with('success', 'User deleted successfully.');
    }

    /**
     * Toggle user active status.
     */
    public function toggleActive(User $user)
    {
        // Prevent self-deactivation
        if(Auth::id() === $user->id) {
            return back()->with('error', 'You cannot change your own status.');
        }

        $user->is_active = !$user->is_active;
        $user->save();

        $status = $user->is_active ? 'activated' : 'deactivated';

        return back()->with('success', "User {$status} successfully.");
    }

    /**
     * Display the user's profile.
     */
    public function profile()
    {
        $user = Auth::user();
        return view('users.profile', compact('user'));
    }

    /**
     * Update the user's profile information.
     */
    public function updateProfile(Request $request)
    {
        $user = Auth::user();

        $request->validate([
            'name' => 'required|string|max:255',
            'email' => 'required|email|unique:users,email,' . $user->id,
            'avatar' => 'nullable|image|max:2048',
            'phone' => 'nullable|string|max:20',
            'address' => 'nullable|string'
        ]);

        $user->name = $request->name;
        $user->email = $request->email;
        $user->phone = $request->phone;
        $user->address = $request->address;

        // Handle avatar upload
        if($request->hasFile('avatar')) {
            // Delete old avatar if exists
            if($user->avatar) {
                Storage::disk('public')->delete($user->avatar);
            }

            $avatarPath = $request->file('avatar')->store('avatars', 'public');
            $user->avatar = $avatarPath;
        }

        $user->save();

        return back()->with('success', 'Profile updated successfully.');
    }

    /**
     * Update the user's password.
     */
    public function updatePassword(Request $request)
    {
        $user = Auth::user();

        $request->validate([
            'current_password' => 'required|current_password',
            'password' => 'required|string|min:8|confirmed',
        ]);

        $user->password = Hash::make($request->password);
        $user->save();

        return back()->with('success', 'Password updated successfully.');
    }
}

app\Http\Controllers\Auth\AuthenticatedSessionController.php:
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use App\Http\Requests\Auth\LoginRequest;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\View\View;

class AuthenticatedSessionController extends Controller
{
    /**
     * Display the login view.
     */
    public function create(): View
    {
        return view('auth.login');
    }

    /**
     * Handle an incoming authentication request.
     */
    public function store(LoginRequest $request): RedirectResponse
    {
        $request->authenticate();

        $request->session()->regenerate();

        return redirect()->intended(route('dashboard', absolute: false));
    }

    /**
     * Destroy an authenticated session.
     */
    public function destroy(Request $request): RedirectResponse
    {
        Auth::guard('web')->logout();

        $request->session()->invalidate();

        $request->session()->regenerateToken();

        return redirect('/');
    }
}

app\Http\Controllers\Auth\ConfirmablePasswordController.php:
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Validation\ValidationException;
use Illuminate\View\View;

class ConfirmablePasswordController extends Controller
{
    /**
     * Show the confirm password view.
     */
    public function show(): View
    {
        return view('auth.confirm-password');
    }

    /**
     * Confirm the user's password.
     */
    public function store(Request $request): RedirectResponse
    {
        if (! Auth::guard('web')->validate([
            'email' => $request->user()->email,
            'password' => $request->password,
        ])) {
            throw ValidationException::withMessages([
                'password' => __('auth.password'),
            ]);
        }

        $request->session()->put('auth.password_confirmed_at', time());

        return redirect()->intended(route('dashboard', absolute: false));
    }
}

app\Http\Controllers\Auth\EmailVerificationNotificationController.php:
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;

class EmailVerificationNotificationController extends Controller
{
    /**
     * Send a new email verification notification.
     */
    public function store(Request $request): RedirectResponse
    {
        if ($request->user()->hasVerifiedEmail()) {
            return redirect()->intended(route('dashboard', absolute: false));
        }

        $request->user()->sendEmailVerificationNotification();

        return back()->with('status', 'verification-link-sent');
    }
}

app\Http\Controllers\Auth\LoginController.php:
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class LoginController extends Controller
{
    public function showLoginForm()
    {
        return view('auth.login');
    }

    public function login(Request $request)
    {
        $credentials = $request->validate([
            'email' => 'required|email',
            'password' => 'required'
        ]);

        if (Auth::attempt($credentials, $request->remember)) {
            $request->session()->regenerate();
            
            // Check if user is active
            if (!Auth::user()->is_active) {
                Auth::logout();
                return back()->withErrors([
                    'email' => 'Akun Anda tidak aktif. Silakan hubungi administrator.',
                ]);
            }

            return redirect()->intended('dashboard');
        }

        return back()->withErrors([
            'email' => 'Email atau password tidak valid.',
        ])->onlyInput('email');
    }

    public function logout(Request $request)
    {
        Auth::logout();
        $request->session()->invalidate();
        $request->session()->regenerateToken();
        return redirect('/');
    }
}

app\Http\Controllers\Auth\NewPasswordController.php:
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use App\Models\User;
use Illuminate\Auth\Events\PasswordReset;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Password;
use Illuminate\Support\Str;
use Illuminate\Validation\Rules;
use Illuminate\View\View;

class NewPasswordController extends Controller
{
    /**
     * Display the password reset view.
     */
    public function create(Request $request): View
    {
        return view('auth.reset-password', ['request' => $request]);
    }

    /**
     * Handle an incoming new password request.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function store(Request $request): RedirectResponse
    {
        $request->validate([
            'token' => ['required'],
            'email' => ['required', 'email'],
            'password' => ['required', 'confirmed', Rules\Password::defaults()],
        ]);

        // Here we will attempt to reset the user's password. If it is successful we
        // will update the password on an actual user model and persist it to the
        // database. Otherwise we will parse the error and return the response.
        $status = Password::reset(
            $request->only('email', 'password', 'password_confirmation', 'token'),
            function (User $user) use ($request) {
                $user->forceFill([
                    'password' => Hash::make($request->password),
                    'remember_token' => Str::random(60),
                ])->save();

                event(new PasswordReset($user));
            }
        );

        // If the password was successfully reset, we will redirect the user back to
        // the application's home authenticated view. If there is an error we can
        // redirect them back to where they came from with their error message.
        return $status == Password::PASSWORD_RESET
                    ? redirect()->route('login')->with('status', __($status))
                    : back()->withInput($request->only('email'))
                        ->withErrors(['email' => __($status)]);
    }
}

app\Http\Controllers\Auth\PasswordController.php:
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;
use Illuminate\Validation\Rules\Password;

class PasswordController extends Controller
{
    /**
     * Update the user's password.
     */
    public function update(Request $request): RedirectResponse
    {
        $validated = $request->validateWithBag('updatePassword', [
            'current_password' => ['required', 'current_password'],
            'password' => ['required', Password::defaults(), 'confirmed'],
        ]);

        $request->user()->update([
            'password' => Hash::make($validated['password']),
        ]);

        return back()->with('status', 'password-updated');
    }
}

app\Http\Controllers\Auth\PasswordResetLinkController.php:
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Password;
use Illuminate\View\View;

class PasswordResetLinkController extends Controller
{
    /**
     * Display the password reset link request view.
     */
    public function create(): View
    {
        return view('auth.forgot-password');
    }

    /**
     * Handle an incoming password reset link request.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function store(Request $request): RedirectResponse
    {
        $request->validate([
            'email' => ['required', 'email'],
        ]);

        // We will send the password reset link to this user. Once we have attempted
        // to send the link, we will examine the response then see the message we
        // need to show to the user. Finally, we'll send out a proper response.
        $status = Password::sendResetLink(
            $request->only('email')
        );

        return $status == Password::RESET_LINK_SENT
                    ? back()->with('status', __($status))
                    : back()->withInput($request->only('email'))
                        ->withErrors(['email' => __($status)]);
    }
}

app\Http\Controllers\Auth\RegisteredUserController.php:
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use App\Models\User;
use Illuminate\Auth\Events\Registered;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;
use Illuminate\Validation\Rules;
use Illuminate\View\View;

class RegisteredUserController extends Controller
{
    /**
     * Display the registration view.
     */
    public function create(): View
    {
        return view('auth.register');
    }

    /**
     * Handle an incoming registration request.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function store(Request $request): RedirectResponse
    {
        $request->validate([
            'name' => ['required', 'string', 'max:255'],
            'email' => ['required', 'string', 'lowercase', 'email', 'max:255', 'unique:'.User::class],
            'password' => ['required', 'confirmed', Rules\Password::defaults()],
        ]);

        $user = User::create([
            'name' => $request->name,
            'email' => $request->email,
            'password' => Hash::make($request->password),
        ]);

        event(new Registered($user));

        Auth::login($user);

        return redirect(route('dashboard', absolute: false));
    }
}

app\Http\Controllers\Auth\VerifyEmailController.php:
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Auth\Events\Verified;
use Illuminate\Foundation\Auth\EmailVerificationRequest;
use Illuminate\Http\RedirectResponse;

class VerifyEmailController extends Controller
{
    /**
     * Mark the authenticated user's email address as verified.
     */
    public function __invoke(EmailVerificationRequest $request): RedirectResponse
    {
        if ($request->user()->hasVerifiedEmail()) {
            return redirect()->intended(route('dashboard', absolute: false).'?verified=1');
        }

        if ($request->user()->markEmailAsVerified()) {
            event(new Verified($request->user()));
        }

        return redirect()->intended(route('dashboard', absolute: false).'?verified=1');
    }
}

app\Http\Middleware\LogUserActivity.php:
<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Symfony\Component\HttpFoundation\Response;

class LogUserActivity
{
    /**
     * Handle an incoming request.
     *
     * @param  \Closure(\Illuminate\Http\Request): (\Symfony\Component\HttpFoundation\Response)  $next
     */
    public function handle(Request $request, Closure $next): Response
    {
        if (Auth::check()) {
            $user = Auth::user();

            // Check if user is active
            if (!$user->is_active) {
                Auth::logout();

                $request->session()->invalidate();
                $request->session()->regenerateToken();

                return redirect()->route('login')
                    ->with('error', 'Your account has been deactivated. Please contact an administrator.');
            }
        }

        return $next($request);
    }
}

app\Http\Requests\ProfileUpdateRequest.php:
<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rule;

class ProfileUpdateRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\Rule|array|string>
     */
    public function rules(): array
    {
        return [
            'name' => ['required', 'string', 'max:255'],
            'email' => [
                'required',
                'string',
                'email',
                'max:255',
                Rule::unique('users')->ignore($this->user()->id),
            ],
        ];
    }
}

app\Http\Requests\ProjectRequest.php:
<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class ProjectRequest extends FormRequest
{
    public function authorize()
    {
        return true;
    }

    public function rules()
    {
        return [
            'name' => 'required|string|max:255',
            'type' => 'required|in:kantor,showroom,kafe,restoran,outlet,other',
            'location' => 'required|string',
            'client_id' => 'required|exists:clients,id',
            'pic_id' => 'required|exists:users,id',
            'status' => 'sometimes|required|in:lead,survey,penawaran,negosiasi,deal,eksekusi,selesai,batal',
            'project_value' => 'nullable|numeric|min:0',
            'deal_value' => 'nullable|numeric|min:0',
            'start_date' => 'nullable|date',
            'target_date' => 'nullable|date|after_or_equal:start_date',
            'description' => 'nullable|string'
        ];
    }

    public function messages()
    {
        return [
            'name.required' => 'Nama project harus diisi',
            'type.required' => 'Jenis project harus dipilih',
            'location.required' => 'Lokasi project harus diisi',
            'client_id.required' => 'Klien harus dipilih',
            'pic_id.required' => 'PIC harus dipilih',
            'target_date.after_or_equal' => 'Target selesai harus setelah tanggal mulai'
        ];
    }
}

app\Http\Kernel.php:
<?php

namespace App\Http;

use Illuminate\Foundation\Http\Kernel as HttpKernel;

class Kernel extends HttpKernel
{
    /**
     * The application's global HTTP middleware stack.
     *
     * These middleware are run during every request to your application.
     *
     * @var array<int, class-string|string>
     */
    protected $middleware = [
        // \App\Http\Middleware\TrustHosts::class,
        \App\Http\Middleware\TrustProxies::class,
        \Illuminate\Http\Middleware\HandleCors::class,
        \App\Http\Middleware\PreventRequestsDuringMaintenance::class,
        \Illuminate\Foundation\Http\Middleware\ValidatePostSize::class,
        \App\Http\Middleware\TrimStrings::class,
        \Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull::class,
    ];

    /**
     * The application's route middleware groups.
     *
     * @var array<string, array<int, class-string|string>>
     */
    protected $middlewareGroups = [
        'web' => [
            \App\Http\Middleware\EncryptCookies::class,
            \Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse::class,
            \Illuminate\Session\Middleware\StartSession::class,
            \Illuminate\View\Middleware\ShareErrorsFromSession::class,
            \App\Http\Middleware\VerifyCsrfToken::class,
            \Illuminate\Routing\Middleware\SubstituteBindings::class,
            \App\Http\Middleware\LogUserActivity::class, // Add your middleware here
        ],

        'api' => [
            // \Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful::class,
            \Illuminate\Routing\Middleware\ThrottleRequests::class.':api',
            \Illuminate\Routing\Middleware\SubstituteBindings::class,
        ],
    ];

    /**
     * The application's middleware aliases.
     *
     * Aliases may be used instead of class names to conveniently assign middleware to routes and groups.
     *
     * @var array<string, class-string|string>
     */
    protected $middlewareAliases = [
        'auth' => \App\Http\Middleware\Authenticate::class,
        'auth.basic' => \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class,
        'auth.session' => \Illuminate\Session\Middleware\AuthenticateSession::class,
        'cache.headers' => \Illuminate\Http\Middleware\SetCacheHeaders::class,
        'can' => \Illuminate\Auth\Middleware\Authorize::class,
        'guest' => \App\Http\Middleware\RedirectIfAuthenticated::class,
        'password.confirm' => \Illuminate\Auth\Middleware\RequirePassword::class,
        'precognitive' => \Illuminate\Foundation\Http\Middleware\HandlePrecognitiveRequests::class,
        'signed' => \App\Http\Middleware\ValidateSignature::class,
        'throttle' => \Illuminate\Routing\Middleware\ThrottleRequests::class,
        'verified' => \Illuminate\Auth\Middleware\EnsureEmailIsVerified::class,
    ];
}

app\Models\Client.php:
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Client extends Model
{
    use HasFactory;

    protected $fillable = [
        'name', 'email', 'phone', 'whatsapp', 'address',
        'status', 'pic_id', 'source', 'source_detail', 'notes'
    ];

    // Relationships
    public function projects()
    {
        return $this->hasMany(Project::class);
    }

    public function pic()
    {
        return $this->belongsTo(User::class, 'pic_id');
    }

    // Accessors
    public function getStatusBadgeAttribute()
    {
        $badges = [
            'prospek' => 'warning',
            'aktif' => 'success',
            'selesai' => 'secondary'
        ];

        return $badges[$this->status] ?? 'secondary';
    }

    // Scopes
    public function scopeActive($query)
    {
        return $query->where('status', 'aktif');
    }

    public function scopeSearch($query, $search)
    {
        return $query->where(function ($q) use ($search) {
            $q->where('name', 'like', "%{$search}%")
              ->orWhere('email', 'like', "%{$search}%")
              ->orWhere('phone', 'like', "%{$search}%");
        });
    }
}

app\Models\Document.php:
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Storage;

class Document extends Model
{
    use HasFactory;

    protected $fillable = [
        'name', 'original_name', 'category', 'type', 'description',
        'path', 'size', 'extension', 'uploaded_by', 'is_public',
        'views', 'downloads'
    ];

    protected $casts = [
        'is_public' => 'boolean',
        'size' => 'integer',
        'views' => 'integer',
        'downloads' => 'integer'
    ];

    // Relationships
    public function documentable()
    {
        return $this->morphTo();
    }

    public function uploadedBy()
    {
        return $this->belongsTo(User::class, 'uploaded_by');
    }

    // Accessors
    public function getUrlAttribute()
    {
        return Storage::url($this->path);
    }

    public function getFormattedSizeAttribute()
    {
        $bytes = $this->size;
        $units = ['B', 'KB', 'MB', 'GB'];
        
        for ($i = 0; $bytes > 1024; $i++) {
            $bytes /= 1024;
        }
        
        return round($bytes, 2) . ' ' . $units[$i];
    }

    public function getCategoryBadgeAttribute()
    {
        $badges = [
            'penawaran' => 'primary',
            'kontrak' => 'success',
            'invoice' => 'warning',
            'survey' => 'info',
            'design' => 'secondary',
            'progress' => 'dark',
            'other' => 'light'
        ];
        
        return $badges[$this->category] ?? 'secondary';
    }

    public function getIconAttribute()
    {
        $icons = [
            'pdf' => 'bi-file-pdf',
            'image' => 'bi-file-image',
            'word' => 'bi-file-word',
            'excel' => 'bi-file-excel',
            'powerpoint' => 'bi-file-ppt',
            'archive' => 'bi-file-zip',
            'video' => 'bi-file-play',
            'audio' => 'bi-file-music',
            'other' => 'bi-file-earmark'
        ];
        
        return $icons[$this->type] ?? 'bi-file-earmark';
    }

    // Scopes
    public function scopePublic($query)
    {
        return $query->where('is_public', true);
    }

    public function scopeByCategory($query, $category)
    {
        return $query->where('category', $category);
    }

    public function scopeByType($query, $type)
    {
        return $query->where('type', $type);
    }

    // Delete file when model is deleted
    protected static function boot()
    {
        parent::boot();
        
        static::deleting(function ($document) {
            Storage::disk('public')->delete($document->path);
        });
    }
}

app\Models\ModelName.php:
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class ModelName extends Model
{
    //
}


app\Models\PipelineStage.php:
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class PipelineStage extends Model
{
    //
}


app\Models\Project.php:
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Project extends Model
{
    use HasFactory;

    protected $fillable = [
        'code', 'name', 'type', 'location', 'start_date', 'target_date',
        'status', 'project_value', 'deal_value', 'client_id', 'pic_id', 'description'
    ];

    protected $casts = [
        'start_date' => 'date',
        'target_date' => 'date',
        'project_value' => 'decimal:2',
        'deal_value' => 'decimal:2',
    ];

    protected static function boot()
    {
        parent::boot();

        static::creating(function ($model) {
            $model->code = 'PRJ-' . date('Y') . '-' . str_pad(Project::whereYear('created_at', date('Y'))->count() + 1, 3, '0', STR_PAD_LEFT);
        });
    }

    // Relationships
    public function client()
    {
        return $this->belongsTo(Client::class);
    }

    public function pic()
    {
        return $this->belongsTo(User::class, 'pic_id');
    }

    public function surveys()
    {
        return $this->hasMany(Survey::class);
    }

    public function latestSurvey()
    {
        return $this->hasOne(Survey::class)->latest();
    }

    // Accessors
    public function getStatusBadgeAttribute()
    {
        $badges = [
            'lead' => 'secondary',
            'survey' => 'info',
            'penawaran' => 'warning',
            'negosiasi' => 'primary',
            'deal' => 'success',
            'eksekusi' => 'primary',
            'selesai' => 'success',
            'batal' => 'danger'
        ];

        return $badges[$this->status] ?? 'secondary';
    }

    public function getProgressPercentageAttribute()
    {
        $percentages = [
            'lead' => 10,
            'survey' => 25,
            'penawaran' => 40,
            'negosiasi' => 60,
            'deal' => 75,
            'eksekusi' => 90,
            'selesai' => 100,
            'batal' => 0
        ];

        return $percentages[$this->status] ?? 0;
    }

    public function documents()
    {
        return $this->hasMany(Document::class);
        return $this->morphMany(Document::class, 'documentable');
    }

    public function pipelineHistory()
    {
        return $this->hasMany(ProjectPipeline::class);
    }
    
}

app\Models\ProjectPipeline.php:
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class ProjectPipeline extends Model
{
    use HasFactory;

    protected $fillable = [
        'project_id',
        'from_status',
        'to_status',
        'changed_by',
        'changed_at',
        'notes',
    ];

    protected $casts = [
        'changed_at' => 'datetime',
    ];

    public function project()
    {
        return $this->belongsTo(Project::class);
    }

    public function user()
    {
        return $this->belongsTo(User::class, 'changed_by');
    }
}


app\Models\Setting.php:
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Cache;

class Setting extends Model
{
    use HasFactory;

    protected $fillable = [
        'key', 'value', 'group', 'type'
    ];

    /**
     * Get a setting value by key
     */
    public static function get($key, $default = null)
    {
        $setting = self::where('key', $key)->first();

        if (!$setting) {
            return $default;
        }

        return self::formatValue($setting->value, $setting->type);
    }

    /**
     * Get all settings as an array
     */
    public static function getAllSettings()
    {
        return Cache::remember('settings', 60 * 24, function () {
            $settings = self::all();

            $formattedSettings = [];
            foreach ($settings as $setting) {
                $formattedSettings[$setting->key] = self::formatValue($setting->value, $setting->type);
            }

            return $formattedSettings;
        });
    }

    /**
     * Format the value based on type
     */
    private static function formatValue($value, $type)
    {
        switch ($type) {
            case 'boolean':
                return (bool) $value;
            case 'integer':
                return (int) $value;
            case 'float':
                return (float) $value;
            case 'array':
                return json_decode($value, true);
            case 'object':
                return json_decode($value);
            default:
                return $value;
        }
    }
}


app\Models\Survey.php:
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Survey extends Model
{
    use HasFactory;

    protected $fillable = [
        'project_id', 'surveyor_id', 'scheduled_date', 'actual_date',
        'status', 'latitude', 'longitude', 'address', 'notes', 'checklist_data'
    ];

    protected $casts = [
        'scheduled_date' => 'datetime',
        'actual_date' => 'datetime',
        'checklist_data' => 'array',
        'latitude' => 'decimal:8',
        'longitude' => 'decimal:8',
    ];

    // Relationships
    public function project()
    {
        return $this->belongsTo(Project::class);
    }

    public function surveyor()
    {
        return $this->belongsTo(User::class, 'surveyor_id');
    }

    public function photos()
    {
        return $this->hasMany(SurveyPhoto::class);
    }

    // Accessors
    public function getStatusBadgeAttribute()
    {
        $badges = [
            'pending' => 'warning',
            'in_progress' => 'info',
            'completed' => 'success',
            'cancelled' => 'danger'
        ];

        return $badges[$this->status] ?? 'secondary';
    }

    // Scopes
    public function scopePending($query)
    {
        return $query->where('status', 'pending');
    }

    public function scopeForSurveyor($query, $surveyorId)
    {
        return $query->where('surveyor_id', $surveyorId);
    }
    public function getChecklistDataAttribute($value)
    {
        return json_decode($value, true) ?? [];
    }

    public function setChecklistDataAttribute($value)
    {
        $this->attributes['checklist_data'] = json_encode($value);
    }

    // Add this accessor for formatted checklist
    public function getFormattedChecklistAttribute()
    {
        $data = $this->checklist_data;
        
        return [
            'electricity' => [
                'value' => $data['electricity'] ?? null,
                'label' => $data['electricity'] == 'yes' ? 'Ada' : 'Tidak Ada',
                'notes' => $data['electricity_notes'] ?? null
            ],
            'water' => [
                'value' => $data['water'] ?? null,
                'label' => $data['water'] == 'yes' ? 'Ada' : 'Tidak Ada',
                'notes' => $data['water_notes'] ?? null
            ],
            'road_access' => [
                'value' => $data['road_access'] ?? null,
                'label' => $this->getRoadAccessLabel($data['road_access'] ?? null),
                'notes' => null
            ],
            'permit_status' => [
                'value' => $data['permit_status'] ?? null,
                'label' => $this->getPermitStatusLabel($data['permit_status'] ?? null),
                'notes' => null
            ],
            'existing_condition' => [
                'value' => $data['existing_condition'] ?? null,
                'label' => $this->getExistingConditionLabel($data['existing_condition'] ?? null),
                'notes' => null
            ],
            'area_size' => [
                'value' => $data['area_size'] ?? null,
                'label' => ($data['area_size'] ?? 0) . ' m²',
                'notes' => null
            ]
        ];
    }

    private function getRoadAccessLabel($value)
    {
        $labels = [
            'easy' => 'Mudah - Mobil besar bisa masuk',
            'medium' => 'Sedang - Hanya mobil kecil',
            'difficult' => 'Sulit - Hanya motor/jalan kaki'
        ];
        
        return $labels[$value] ?? '-';
    }

    private function getPermitStatusLabel($value)
    {
        $labels = [
            'complete' => 'Lengkap',
            'process' => 'Dalam Proses',
            'none' => 'Belum Ada'
        ];
        
        return $labels[$value] ?? '-';
    }

    private function getExistingConditionLabel($value)
    {
        $labels = [
            'good' => 'Baik',
            'medium' => 'Sedang',
            'bad' => 'Buruk',
            'empty' => 'Tanah Kosong'
        ];
        
        return $labels[$value] ?? '-';
    }

}

app\Models\SurveyPhoto.php:
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Storage;

class SurveyPhoto extends Model
{
    use HasFactory;

    protected $fillable = [
        'survey_id', 'filename', 'path', 'thumbnail_path', 'caption', 'order'
    ];

    // Relationships
    public function survey()
    {
        return $this->belongsTo(Survey::class);
    }

    // Accessors
    public function getUrlAttribute()
    {
        return Storage::url($this->path);
    }

    public function getThumbnailUrlAttribute()
    {
        return Storage::url($this->thumbnail_path ?? $this->path);
    }

    // Delete file when model is deleted
    protected static function boot()
    {
        parent::boot();
        
        static::deleting(function ($photo) {
            Storage::disk('public')->delete($photo->path);
            if ($photo->thumbnail_path) {
                Storage::disk('public')->delete($photo->thumbnail_path);
            }
        });
    }
}

app\Models\User.php:
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;
use Laravel\Sanctum\HasApiTokens;
use Spatie\Permission\Traits\HasRoles;

class User extends Authenticatable
{
    use HasApiTokens, HasFactory, Notifiable, HasRoles;

    /**
     * The attributes that are mass assignable.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'name',
        'email',
        'password',
        'phone',
        'address',
        'avatar',
        'is_active',
        'last_login_at',
    ];

    /**
     * The attributes that should be hidden for serialization.
     *
     * @var array<int, string>
     */
    protected $hidden = [
        'password',
        'remember_token',
    ];

    /**
     * The attributes that should be cast.
     *
     * @var array<string, string>
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
        'password' => 'hashed',
        'is_active' => 'boolean',
        'last_login_at' => 'datetime',
    ];

    /**
     * Get the user's avatar URL.
     */
    public function getAvatarUrlAttribute()
    {
        if ($this->avatar) {
            return asset('storage/' . $this->avatar);
        }

        // Generate default avatar using UI Avatars
        $name = urlencode($this->name);
        return "https://ui-avatars.com/api/?name={$name}&background=random&color=fff";
    }

    // Relationships
    public function surveys()
    {
        return $this->hasMany(Survey::class, 'surveyor_id');
    }

    public function projects()
    {
        return $this->hasMany(Project::class, 'pic_id');
    }
}

app\Notifications\DocumentUploaded.php:
<?php

namespace App\Notifications;

use Illuminate\Bus\Queueable;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Notifications\Messages\MailMessage;
use Illuminate\Notifications\Notification;

class DocumentUploaded extends Notification
{
    use Queueable;

    /**
     * Create a new notification instance.
     */
    public function __construct()
    {
        //
    }

    /**
     * Get the notification's delivery channels.
     *
     * @return array<int, string>
     */
    public function via(object $notifiable): array
    {
        return ['mail'];
    }

    /**
     * Get the mail representation of the notification.
     */
    public function toMail(object $notifiable): MailMessage
    {
        return (new MailMessage)
            ->line('The introduction to the notification.')
            ->action('Notification Action', url('/'))
            ->line('Thank you for using our application!');
    }

    /**
     * Get the array representation of the notification.
     *
     * @return array<string, mixed>
     */
    public function toArray(object $notifiable): array
    {
        return [
            //
        ];
    }
}

app\Notifications\NewClientAssigned.php:
<?php

namespace App\Notifications;

use App\Models\Client;
use App\Models\User;
use Illuminate\Bus\Queueable;
use Illuminate\Notifications\Notification;
use Illuminate\Notifications\Messages\MailMessage;
use Illuminate\Notifications\Messages\BroadcastMessage;

class NewClientAssigned extends Notification
{
    use Queueable;

    protected $client;
    protected $assignedBy;

    /**
     * Create a new notification instance.
     *
     * @param Client $client
     * @param User $assignedBy
     */
    public function __construct(Client $client, User $assignedBy)
    {
        $this->client = $client;
        $this->assignedBy = $assignedBy;
    }

    /**
     * Get the notification's delivery channels.
     *
     * @param  mixed  $notifiable
     * @return array
     */
    public function via($notifiable)
    {
        return ['database', 'broadcast'];
    }

    /**
     * Get the array representation of the notification.
     *
     * @param  mixed  $notifiable
     * @return array
     */
    public function toArray($notifiable)
    {
        return [
            'client_id' => $this->client->id,
            'client_name' => $this->client->name,
            'assigned_by' => $this->assignedBy->name,
            'message' => "Client baru '{$this->client->name}' telah ditambahkan"
        ];
    }

    /**
     * Get the broadcast representation of the notification.
     *
     * @param  mixed  $notifiable
     * @return BroadcastMessage
     */
    public function toBroadcast($notifiable)
    {
        return new BroadcastMessage([
            'id' => $this->client->id,
            'type' => 'client_assigned',
            'client_id' => $this->client->id,
            'client_name' => $this->client->name,
            'message' => "Client baru '{$this->client->name}' telah ditambahkan",
            'time' => now()->diffForHumans()
        ]);
    }

    /**
     * Get the mail representation of the notification.
     *
     * @param  mixed  $notifiable
     * @return MailMessage
     */
    public function toMail($notifiable)
    {
        return (new MailMessage)
            ->subject("Client baru '{$this->client->name}' telah ditambahkan")
            ->line("Client baru '{$this->client->name}' telah ditambahkan oleh {$this->assignedBy->name}.")
            ->action('View Client', url('/clients/'.$this->client->id))
            ->line('Thank you for using our application!');
    }
}

app\Notifications\ProjectStatusChanged.php:
<?php

namespace App\Notifications;

use Illuminate\Bus\Queueable;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Notifications\Messages\MailMessage;
use Illuminate\Notifications\Messages\BroadcastMessage;
use Illuminate\Notifications\Notification;
use App\Models\Project;
use App\Models\User;

class ProjectStatusChanged extends Notification implements ShouldQueue
{
    use Queueable;

    protected $project;
    protected $previousStage;
    protected $currentStage;
    protected $changedBy;

    public function __construct(Project $project, $previousStage, $currentStage, User $changedBy)
    {
        $this->project = $project;
        $this->previousStage = $previousStage;
        $this->currentStage = $currentStage;
        $this->changedBy = $changedBy;
    }

    public function via($notifiable)
    {
        return ['database', 'broadcast'];
    }

    public function toArray($notifiable)
    {
        return [
            'project_id' => $this->project->id,
            'project_name' => $this->project->name,
            'project_code' => $this->project->code,
            'previous_stage' => $this->previousStage,
            'current_stage' => $this->currentStage,
            'changed_by' => $this->changedBy->name,
            'message' => "Proyek {$this->project->name} berpindah dari tahap '{$this->previousStage}' ke '{$this->currentStage}'"
        ];
    }

    public function toBroadcast($notifiable)
    {
        return new BroadcastMessage([
            'id' => $this->id,
            'type' => 'project_status_changed',
            'project_id' => $this->project->id,
            'project_name' => $this->project->name,
            'message' => "Proyek {$this->project->name} kini berada di tahap '{$this->currentStage}'",
            'time' => now()->diffForHumans(),
            'icon' => 'bi-building',
            'color' => 'primary'
        ]);
    }
}

app\Notifications\SurveyAssigned.php:
<?php

namespace App\Notifications;

use Illuminate\Bus\Queueable;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Notifications\Messages\MailMessage;
use Illuminate\Notifications\Messages\BroadcastMessage;
use Illuminate\Notifications\Notification;
use App\Models\Survey;
use App\Models\User;

class SurveyAssigned extends Notification implements ShouldQueue
{
    use Queueable;

    protected $survey;
    protected $assignedBy;

    public function __construct(Survey $survey, User $assignedBy)
    {
        $this->survey = $survey;
        $this->assignedBy = $assignedBy;
    }

    public function via($notifiable)
    {
        return ['database', 'broadcast', 'mail'];
    }

    public function toMail($notifiable)
    {
        return (new MailMessage)
            ->subject('Tugas Survey Baru')
            ->greeting("Halo {$notifiable->name},")
            ->line("Anda ditugaskan untuk melakukan survey lapangan pada proyek: {$this->survey->project->name}")
            ->line("Tanggal Survey: {$this->survey->scheduled_date->format('d M Y, H:i')}")
            ->line("Lokasi: {$this->survey->project->location}")
            ->action('Lihat Tugas Survey', route('surveys.show', $this->survey->id))
            ->line('Harap selesaikan survey dan upload hasil survey melalui aplikasi sesuai jadwal.');
    }

    public function toArray($notifiable)
    {
        return [
            'survey_id' => $this->survey->id,
            'project_id' => $this->survey->project->id,
            'project_name' => $this->survey->project->name,
            'scheduled_date' => $this->survey->scheduled_date->format('d M Y, H:i'),
            'location' => $this->survey->project->location,
            'assigned_by' => $this->assignedBy->name,
            'message' => "Anda ditugaskan survey baru pada proyek {$this->survey->project->name}"
        ];
    }

    public function toBroadcast($notifiable)
    {
        return new BroadcastMessage([
            'id' => $this->id,
            'type' => 'survey_assigned',
            'survey_id' => $this->survey->id,
            'project_name' => $this->survey->project->name,
            'scheduled_date' => $this->survey->scheduled_date->format('d M Y, H:i'),
            'location' => $this->survey->project->location,
            'message' => "Survey lapangan baru untuk proyek {$this->survey->project->name} pada {$this->survey->scheduled_date->format('d M Y, H:i')}",
            'time' => now()->diffForHumans(),
            'icon' => 'bi-clipboard-check',
            'color' => 'success'
        ]);
    }
}

app\Providers\AppServiceProvider.php:
<?php

namespace App\Providers;

use Illuminate\Support\ServiceProvider;

class AppServiceProvider extends ServiceProvider
{
    /**
     * Register any application services.
     */
    public function register(): void
    {
        //
    }

    /**
     * Bootstrap any application services.
     */
    public function boot(): void
    {
        //
    }
}

app\Providers\AuthServiceProvider.php:
<?php

namespace App\Providers;

use Illuminate\Foundation\Support\Providers\AuthServiceProvider as ServiceProvider;
use Illuminate\Support\Facades\Gate;

class AuthServiceProvider extends ServiceProvider
{
    /**
     * The policy mappings for the application.
     *
     * @var array<class-string, class-string>
     */
    protected $policies = [
        // 'App\Models\Model' => 'App\Policies\ModelPolicy',
    ];

    /**
     * Register any authentication / authorization services.
     */
    public function boot(): void
    {
        $this->registerPolicies();

        //
    }
}

app\Providers\BroadcastServiceProvider.php:
<?php

namespace App\Providers;

use Illuminate\Support\Facades\Broadcast;
use Illuminate\Support\ServiceProvider;

class BroadcastServiceProvider extends ServiceProvider
{
    /**
     * Bootstrap any application services.
     */
    public function boot(): void
    {
        // Only register broadcasting routes if we're not using the null driver
        if (config('broadcasting.default') !== 'null') {
            Broadcast::routes();

            require base_path('routes/channels.php');
        }
    }
}

app\Providers\EventServiceProvider.php:
<?php

namespace App\Providers;

use Illuminate\Auth\Events\Registered;
use Illuminate\Auth\Listeners\SendEmailVerificationNotification;
use Illuminate\Foundation\Support\Providers\EventServiceProvider as ServiceProvider;
use Illuminate\Support\Facades\Event;

class EventServiceProvider extends ServiceProvider
{
    /**
     * The event to listener mappings for the application.
     *
     * @var array<class-string, array<int, class-string>>
     */
    protected $listen = [
        Registered::class => [
            SendEmailVerificationNotification::class,
        ],
    ];

    /**
     * Register any events for your application.
     */
    public function boot(): void
    {
        //
    }

    /**
     * Determine if events and listeners should be automatically discovered.
     */
    public function shouldDiscoverEvents(): bool
    {
        return false;
    }
}

app\Providers\RouteServiceProvider.php:
<?php

namespace App\Providers;

use Illuminate\Cache\RateLimiting\Limit;
use Illuminate\Foundation\Support\Providers\RouteServiceProvider as ServiceProvider;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\RateLimiter;
use Illuminate\Support\Facades\Route;

class RouteServiceProvider extends ServiceProvider
{
    /**
     * The path to your application's "home" route.
     *
     * Typically, users are redirected here after authentication.
     *
     * @var string
     */
    public const HOME = '/dashboard';

    /**
     * Define your route model bindings, pattern filters, and other route configuration.
     */
    public function boot(): void
    {
        RateLimiter::for('api', function (Request $request) {
            return Limit::perMinute(60)->by($request->user()?->id ?: $request->ip());
        });

        $this->routes(function () {
            Route::middleware('api')
                ->prefix('api')
                ->group(base_path('routes/api.php'));

            Route::middleware('web')
                ->group(base_path('routes/web.php'));
        });
    }
}

bootstrap\app.php:
<?php

use Illuminate\Foundation\Application;
use Illuminate\Foundation\Configuration\Exceptions;
use Illuminate\Foundation\Configuration\Middleware;

return Application::configure(basePath: dirname(__DIR__))
    ->withRouting(
        web: __DIR__.'/../routes/web.php',
        api: __DIR__.'/../routes/api.php',
        commands: __DIR__.'/../routes/console.php',
        health: '/up',
    )
    ->withMiddleware(function (Middleware $middleware) {
        // Register Spatie Permission middleware aliases
        $middleware->alias([
            'role' => \Spatie\Permission\Middleware\RoleMiddleware::class,
            'permission' => \Spatie\Permission\Middleware\PermissionMiddleware::class,
            'role_or_permission' => \Spatie\Permission\Middleware\RoleOrPermissionMiddleware::class,
        ]);
    })
    ->withExceptions(function (Exceptions $exceptions) {
        //
    })->create();
	
	
bootstrap\providers.php:
<?php

return [
    App\Providers\AppServiceProvider::class,
    Barryvdh\DomPDF\ServiceProvider::class,
];

config\app.php:
    <?php

    return [

        /*
        |--------------------------------------------------------------------------
        | Application Name
        |--------------------------------------------------------------------------
        |
        | This value is the name of your application, which will be used when the
        | framework needs to place the application's name in a notification or
        | other UI elements where an application name needs to be displayed.
        |
        */

        'name' => env('APP_NAME', 'Laravel'),

        /*
        |--------------------------------------------------------------------------
        | Application Environment
        |--------------------------------------------------------------------------
        |
        | This value determines the "environment" your application is currently
        | running in. This may determine how you prefer to configure various
        | services the application utilizes. Set this in your ".env" file.
        |
        */

        'env' => env('APP_ENV', 'production'),

        /*
        |--------------------------------------------------------------------------
        | Application Debug Mode
        |--------------------------------------------------------------------------
        |
        | When your application is in debug mode, detailed error messages with
        | stack traces will be shown on every error that occurs within your
        | application. If disabled, a simple generic error page is shown.
        |
        */

        'debug' => (bool) env('APP_DEBUG', false),

        /*
        |--------------------------------------------------------------------------
        | Application URL
        |--------------------------------------------------------------------------
        |
        | This URL is used by the console to properly generate URLs when using
        | the Artisan command line tool. You should set this to the root of
        | the application so that it's available within Artisan commands.
        |
        */

        'url' => env('APP_URL', 'http://localhost'),

        /*
        |--------------------------------------------------------------------------
        | Application Timezone
        |--------------------------------------------------------------------------
        |
        | Here you may specify the default timezone for your application, which
        | will be used by the PHP date and date-time functions. The timezone
        | is set to "UTC" by default as it is suitable for most use cases.
        |
        */

        'timezone' => 'UTC',

        /*
        |--------------------------------------------------------------------------
        | Application Locale Configuration
        |--------------------------------------------------------------------------
        |
        | The application locale determines the default locale that will be used
        | by Laravel's translation / localization methods. This option can be
        | set to any locale for which you plan to have translation strings.
        |
        */

        'locale' => env('APP_LOCALE', 'en'),

        'fallback_locale' => env('APP_FALLBACK_LOCALE', 'en'),

        'faker_locale' => env('APP_FAKER_LOCALE', 'en_US'),

        /*
        |--------------------------------------------------------------------------
        | Encryption Key
        |--------------------------------------------------------------------------
        |
        | This key is utilized by Laravel's encryption services and should be set
        | to a random, 32 character string to ensure that all encrypted values
        | are secure. You should do this prior to deploying the application.
        |
        */

        'cipher' => 'AES-256-CBC',

        'key' => env('APP_KEY'),

        'previous_keys' => [
            ...array_filter(
                explode(',', env('APP_PREVIOUS_KEYS', ''))
            ),
        ],

        /*
        |--------------------------------------------------------------------------
        | Maintenance Mode Driver
        |--------------------------------------------------------------------------
        |
        | These configuration options determine the driver used to determine and
        | manage Laravel's "maintenance mode" status. The "cache" driver will
        | allow maintenance mode to be controlled across multiple machines.
        |
        | Supported drivers: "file", "cache"
        |
        */

        'maintenance' => [
            'driver' => env('APP_MAINTENANCE_DRIVER', 'file'),
            'store' => env('APP_MAINTENANCE_STORE', 'database'),
        ],

        /*
        |--------------------------------------------------------------------------
        | Autoloaded Service Providers
        |--------------------------------------------------------------------------
        |
        | The service providers listed here will be automatically loaded on the
        | request to your application. Feel free to add your own services to
        | this array to grant expanded functionality to your applications.
        |
        */

        'providers' => [
            // Laravel Framework Service Providers...
            Illuminate\Auth\AuthServiceProvider::class,
            Illuminate\Broadcasting\BroadcastServiceProvider::class,
            Illuminate\Bus\BusServiceProvider::class,
            Illuminate\Cache\CacheServiceProvider::class,
            Illuminate\Foundation\Providers\ConsoleSupportServiceProvider::class,
            Illuminate\Cookie\CookieServiceProvider::class,
            Illuminate\Database\DatabaseServiceProvider::class,
            Illuminate\Encryption\EncryptionServiceProvider::class,
            Illuminate\Filesystem\FilesystemServiceProvider::class,
            Illuminate\Foundation\Providers\FoundationServiceProvider::class,
            Illuminate\Hashing\HashServiceProvider::class,
            Illuminate\Mail\MailServiceProvider::class,
            Illuminate\Notifications\NotificationServiceProvider::class,
            Illuminate\Pagination\PaginationServiceProvider::class,
            Illuminate\Pipeline\PipelineServiceProvider::class,
            Illuminate\Queue\QueueServiceProvider::class,
            Illuminate\Redis\RedisServiceProvider::class,
            Illuminate\Auth\Passwords\PasswordResetServiceProvider::class,
            Illuminate\Session\SessionServiceProvider::class,
            Illuminate\Translation\TranslationServiceProvider::class,
            Illuminate\Validation\ValidationServiceProvider::class,
            Illuminate\View\ViewServiceProvider::class,

            // Application Service Providers...
            App\Providers\AppServiceProvider::class,
            App\Providers\AuthServiceProvider::class,
            App\Providers\BroadcastServiceProvider::class,
            App\Providers\EventServiceProvider::class,
            App\Providers\RouteServiceProvider::class,
        ],

        /*
        |--------------------------------------------------------------------------
        | Class Aliases
        |--------------------------------------------------------------------------
        |
        | This array of class aliases will be registered when this application
        | is started. However, feel free to register as many as you wish as
        | the aliases are "lazy" loaded so they don't hinder performance.
        |
        */

        'aliases' => [
            'App' => Illuminate\Support\Facades\App::class,
            'Arr' => Illuminate\Support\Arr::class,
            'Artisan' => Illuminate\Support\Facades\Artisan::class,
            'Auth' => Illuminate\Support\Facades\Auth::class,
            'Blade' => Illuminate\Support\Facades\Blade::class,
            'Broadcast' => Illuminate\Support\Facades\Broadcast::class,
            'Bus' => Illuminate\Support\Facades\Bus::class,
            'Cache' => Illuminate\Support\Facades\Cache::class,
            'Config' => Illuminate\Support\Facades\Config::class,
            'Cookie' => Illuminate\Support\Facades\Cookie::class,
            'Crypt' => Illuminate\Support\Facades\Crypt::class,
            'DB' => Illuminate\Support\Facades\DB::class,
            'Eloquent' => Illuminate\Database\Eloquent\Model::class,
            'Event' => Illuminate\Support\Facades\Event::class,
            'File' => Illuminate\Support\Facades\File::class,
            'Gate' => Illuminate\Support\Facades\Gate::class,
            'Hash' => Illuminate\Support\Facades\Hash::class,
            'Http' => Illuminate\Support\Facades\Http::class,
            'Lang' => Illuminate\Support\Facades\Lang::class,
            'Log' => Illuminate\Support\Facades\Log::class,
            'Mail' => Illuminate\Support\Facades\Mail::class,
            'Notification' => Illuminate\Support\Facades\Notification::class,
            'Password' => Illuminate\Support\Facades\Password::class,
            'Queue' => Illuminate\Support\Facades\Queue::class,
            'Redirect' => Illuminate\Support\Facades\Redirect::class,
            'Request' => Illuminate\Support\Facades\Request::class,
            'Response' => Illuminate\Support\Facades\Response::class,
            'Route' => Illuminate\Support\Facades\Route::class,
            'Schema' => Illuminate\Support\Facades\Schema::class,
            'Session' => Illuminate\Support\Facades\Session::class,
            'Storage' => Illuminate\Support\Facades\Storage::class,
            'Str' => Illuminate\Support\Str::class,
            'URL' => Illuminate\Support\Facades\URL::class,
            'Validator' => Illuminate\Support\Facades\Validator::class,
            'View' => Illuminate\Support\Facades\View::class,
        ],
    ];

config\auth.php:
<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Authentication Defaults
    |--------------------------------------------------------------------------
    |
    | This option defines the default authentication "guard" and password
    | reset "broker" for your application. You may change these values
    | as required, but they're a perfect start for most applications.
    |
    */

    'defaults' => [
        'guard' => env('AUTH_GUARD', 'web'),
        'passwords' => env('AUTH_PASSWORD_BROKER', 'users'),
    ],

    /*
    |--------------------------------------------------------------------------
    | Authentication Guards
    |--------------------------------------------------------------------------
    |
    | Next, you may define every authentication guard for your application.
    | Of course, a great default configuration has been defined for you
    | which utilizes session storage plus the Eloquent user provider.
    |
    | All authentication guards have a user provider, which defines how the
    | users are actually retrieved out of your database or other storage
    | system used by the application. Typically, Eloquent is utilized.
    |
    | Supported: "session"
    |
    */

    'guards' => [
        'web' => [
            'driver' => 'session',
            'provider' => 'users',
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | User Providers
    |--------------------------------------------------------------------------
    |
    | All authentication guards have a user provider, which defines how the
    | users are actually retrieved out of your database or other storage
    | system used by the application. Typically, Eloquent is utilized.
    |
    | If you have multiple user tables or models you may configure multiple
    | providers to represent the model / table. These providers may then
    | be assigned to any extra authentication guards you have defined.
    |
    | Supported: "database", "eloquent"
    |
    */

    'providers' => [
        'users' => [
            'driver' => 'eloquent',
            'model' => env('AUTH_MODEL', App\Models\User::class),
        ],

        // 'users' => [
        //     'driver' => 'database',
        //     'table' => 'users',
        // ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Resetting Passwords
    |--------------------------------------------------------------------------
    |
    | These configuration options specify the behavior of Laravel's password
    | reset functionality, including the table utilized for token storage
    | and the user provider that is invoked to actually retrieve users.
    |
    | The expiry time is the number of minutes that each reset token will be
    | considered valid. This security feature keeps tokens short-lived so
    | they have less time to be guessed. You may change this as needed.
    |
    | The throttle setting is the number of seconds a user must wait before
    | generating more password reset tokens. This prevents the user from
    | quickly generating a very large amount of password reset tokens.
    |
    */

    'passwords' => [
        'users' => [
            'provider' => 'users',
            'table' => env('AUTH_PASSWORD_RESET_TOKEN_TABLE', 'password_reset_tokens'),
            'expire' => 60,
            'throttle' => 60,
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Password Confirmation Timeout
    |--------------------------------------------------------------------------
    |
    | Here you may define the number of seconds before a password confirmation
    | window expires and users are asked to re-enter their password via the
    | confirmation screen. By default, the timeout lasts for three hours.
    |
    */

    'password_timeout' => env('AUTH_PASSWORD_TIMEOUT', 10800),

];

config\backup.php:
<?php

return [

    'backup' => [
        /*
         * The name of this application. You can use this name to monitor
         * the backups.
         */
        'name' => env('APP_NAME', 'laravel-backup'),

        'source' => [
            'files' => [
                /*
                 * The list of directories and files that will be included in the backup.
                 */
                'include' => [
                    base_path(),
                ],

                /*
                 * These directories and files will be excluded from the backup.
                 *
                 * Directories used by the backup process will automatically be excluded.
                 */
                'exclude' => [
                    base_path('vendor'),
                    base_path('node_modules'),
                ],

                /*
                 * Determines if symlinks should be followed.
                 */
                'follow_links' => false,

                /*
                 * Determines if it should avoid unreadable folders.
                 */
                'ignore_unreadable_directories' => false,

                /*
                 * This path is used to make directories in resulting zip-file relative
                 * Set to `null` to include complete absolute path
                 * Example: base_path()
                 */
                'relative_path' => null,
            ],

            /*
             * The names of the connections to the databases that should be backed up
             * MySQL, PostgreSQL, SQLite and Mongo databases are supported.
             *
             * The content of the database dump may be customized for each connection
             * by adding a 'dump' key to the connection settings in config/database.php.
             * E.g.
             * 'mysql' => [
             *       ...
             *      'dump' => [
             *           'excludeTables' => [
             *                'table_to_exclude_from_backup',
             *                'another_table_to_exclude'
             *            ]
             *       ],
             * ],
             *
             * If you are using only InnoDB tables on a MySQL server, you can
             * also supply the useSingleTransaction option to avoid table locking.
             *
             * E.g.
             * 'mysql' => [
             *       ...
             *      'dump' => [
             *           'useSingleTransaction' => true,
             *       ],
             * ],
             *
             * For a complete list of available customization options, see https://github.com/spatie/db-dumper
             */
            'databases' => [
                env('DB_CONNECTION', 'mysql'),
            ],
        ],

        /*
         * The database dump can be compressed to decrease disk space usage.
         *
         * Out of the box Laravel-backup supplies
         * Spatie\DbDumper\Compressors\GzipCompressor::class.
         *
         * You can also create custom compressor. More info on that here:
         * https://github.com/spatie/db-dumper#using-compression
         *
         * If you do not want any compressor at all, set it to null.
         */
        'database_dump_compressor' => null,

        /*
         * If specified, the database dumped file name will contain a timestamp (e.g.: 'Y-m-d-H-i-s').
         */
        'database_dump_file_timestamp_format' => null,

        /*
         * The base of the dump filename, either 'database' or 'connection'
         *
         * If 'database' (default), the dumped filename will contain the database name.
         * If 'connection', the dumped filename will contain the connection name.
         */
        'database_dump_filename_base' => 'database',

        /*
         * The file extension used for the database dump files.
         *
         * If not specified, the file extension will be .archive for MongoDB and .sql for all other databases
         * The file extension should be specified without a leading .
         */
        'database_dump_file_extension' => '',

        'destination' => [
            /*
             * The compression algorithm to be used for creating the zip archive.
             *
             * If backing up only database, you may choose gzip compression for db dump and no compression at zip.
             *
             * Some common algorithms are listed below:
             * ZipArchive::CM_STORE (no compression at all; set 0 as compression level)
             * ZipArchive::CM_DEFAULT
             * ZipArchive::CM_DEFLATE
             * ZipArchive::CM_BZIP2
             * ZipArchive::CM_XZ
             *
             * For more check https://www.php.net/manual/zip.constants.php and confirm it's supported by your system.
             */
            'compression_method' => ZipArchive::CM_DEFAULT,

            /*
             * The compression level corresponding to the used algorithm; an integer between 0 and 9.
             *
             * Check supported levels for the chosen algorithm, usually 1 means the fastest and weakest compression,
             * while 9 the slowest and strongest one.
             *
             * Setting of 0 for some algorithms may switch to the strongest compression.
             */
            'compression_level' => 9,

            /*
             * The filename prefix used for the backup zip file.
             */
            'filename_prefix' => '',

            /*
             * The disk names on which the backups will be stored.
             */
            'disks' => [
                'local',
            ],
        ],

        /*
         * The directory where the temporary files will be stored.
         */
        'temporary_directory' => storage_path('app/backup-temp'),

        /*
         * The password to be used for archive encryption.
         * Set to `null` to disable encryption.
         */
        'password' => env('BACKUP_ARCHIVE_PASSWORD'),

        /*
         * The encryption algorithm to be used for archive encryption.
         * You can set it to `null` or `false` to disable encryption.
         *
         * When set to 'default', we'll use ZipArchive::EM_AES_256 if it is
         * available on your system.
         */
        'encryption' => 'default',

        /*
         * The number of attempts, in case the backup command encounters an exception
         */
        'tries' => 1,

        /*
         * The number of seconds to wait before attempting a new backup if the previous try failed
         * Set to `0` for none
         */
        'retry_delay' => 0,
    ],

    /*
     * You can get notified when specific events occur. Out of the box you can use 'mail' and 'slack'.
     * For Slack you need to install laravel/slack-notification-channel.
     *
     * You can also use your own notification classes, just make sure the class is named after one of
     * the `Spatie\Backup\Notifications\Notifications` classes.
     */
    'notifications' => [
        'notifications' => [
            \Spatie\Backup\Notifications\Notifications\BackupHasFailedNotification::class => ['mail'],
            \Spatie\Backup\Notifications\Notifications\UnhealthyBackupWasFoundNotification::class => ['mail'],
            \Spatie\Backup\Notifications\Notifications\CleanupHasFailedNotification::class => ['mail'],
            \Spatie\Backup\Notifications\Notifications\BackupWasSuccessfulNotification::class => ['mail'],
            \Spatie\Backup\Notifications\Notifications\HealthyBackupWasFoundNotification::class => ['mail'],
            \Spatie\Backup\Notifications\Notifications\CleanupWasSuccessfulNotification::class => ['mail'],
        ],

        /*
         * Here you can specify the notifiable to which the notifications should be sent. The default
         * notifiable will use the variables specified in this config file.
         */
        'notifiable' => \Spatie\Backup\Notifications\Notifiable::class,

        'mail' => [
            'to' => 'your@example.com',

            'from' => [
                'address' => env('MAIL_FROM_ADDRESS', 'hello@example.com'),
                'name' => env('MAIL_FROM_NAME', 'Example'),
            ],
        ],

        'slack' => [
            'webhook_url' => '',

            /*
             * If this is set to null the default channel of the webhook will be used.
             */
            'channel' => null,

            'username' => null,

            'icon' => null,
        ],

        'discord' => [
            'webhook_url' => '',

            /*
             * If this is an empty string, the name field on the webhook will be used.
             */
            'username' => '',

            /*
             * If this is an empty string, the avatar on the webhook will be used.
             */
            'avatar_url' => '',
        ],
    ],

    /*
     * Here you can specify which backups should be monitored.
     * If a backup does not meet the specified requirements the
     * UnHealthyBackupWasFound event will be fired.
     */
    'monitor_backups' => [
        [
            'name' => env('APP_NAME', 'laravel-backup'),
            'disks' => ['local'],
            'health_checks' => [
                \Spatie\Backup\Tasks\Monitor\HealthChecks\MaximumAgeInDays::class => 1,
                \Spatie\Backup\Tasks\Monitor\HealthChecks\MaximumStorageInMegabytes::class => 5000,
            ],
        ],

        /*
        [
            'name' => 'name of the second app',
            'disks' => ['local', 's3'],
            'health_checks' => [
                \Spatie\Backup\Tasks\Monitor\HealthChecks\MaximumAgeInDays::class => 1,
                \Spatie\Backup\Tasks\Monitor\HealthChecks\MaximumStorageInMegabytes::class => 5000,
            ],
        ],
        */
    ],

    'cleanup' => [
        /*
         * The strategy that will be used to cleanup old backups. The default strategy
         * will keep all backups for a certain amount of days. After that period only
         * a daily backup will be kept. After that period only weekly backups will
         * be kept and so on.
         *
         * No matter how you configure it the default strategy will never
         * delete the newest backup.
         */
        'strategy' => \Spatie\Backup\Tasks\Cleanup\Strategies\DefaultStrategy::class,

        'default_strategy' => [
            /*
             * The number of days for which backups must be kept.
             */
            'keep_all_backups_for_days' => 7,

            /*
             * After the "keep_all_backups_for_days" period is over, the most recent backup
             * of that day will be kept. Older backups within the same day will be removed.
             * If you create backups only once a day, no backups will be removed yet.
             */
            'keep_daily_backups_for_days' => 16,

            /*
             * After the "keep_daily_backups_for_days" period is over, the most recent backup
             * of that week will be kept. Older backups within the same week will be removed.
             * If you create backups only once a week, no backups will be removed yet.
             */
            'keep_weekly_backups_for_weeks' => 8,

            /*
             * After the "keep_weekly_backups_for_weeks" period is over, the most recent backup
             * of that month will be kept. Older backups within the same month will be removed.
             */
            'keep_monthly_backups_for_months' => 4,

            /*
             * After the "keep_monthly_backups_for_months" period is over, the most recent backup
             * of that year will be kept. Older backups within the same year will be removed.
             */
            'keep_yearly_backups_for_years' => 2,

            /*
             * After cleaning up the backups remove the oldest backup until
             * this amount of megabytes has been reached.
             * Set null for unlimited size.
             */
            'delete_oldest_backups_when_using_more_megabytes_than' => 5000,
        ],

        /*
         * The number of attempts, in case the cleanup command encounters an exception
         */
        'tries' => 1,

        /*
         * The number of seconds to wait before attempting a new cleanup if the previous try failed
         * Set to `0` for none
         */
        'retry_delay' => 0,
    ],

];

config\broadcasting.php:
<?php

return [

    'default' => env('BROADCAST_DRIVER', 'pusher'),

    'connections' => [

        'pusher' => [
            'driver' => 'pusher',
            'key' => env('851eecb2e2c0bf8ffc6e'),
            'secret' => env('b7d82db5e2c0eb4db5a5'),
            'app_id' => env('2014952'),
            'options' => [
                'host' => env('PUSHER_HOST') ?: 'api-'.env('PUSHER_APP_CLUSTER', 'mt1').'.pusher.com',
                'port' => env('PUSHER_PORT', 443),
                'scheme' => env('PUSHER_SCHEME', 'https'),
                'encrypted' => true,
                'useTLS' => env('PUSHER_SCHEME', 'https') === 'https',
                'cluster' => env('PUSHER_APP_CLUSTER')
            ],
            'client_options' => [
            ],
        ],

        'ably' => [
            'driver' => 'ably',
            'key' => env('ABLY_KEY'),
        ],

        'redis' => [
            'driver' => 'redis',
            'connection' => 'default',
        ],

        'log' => [
            'driver' => 'log',
        ],

        'null' => [
            'driver' => 'null',
        ],

    ],

];

config\cache.php:
<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Cache Store
    |--------------------------------------------------------------------------
    |
    | This option controls the default cache store that will be used by the
    | framework. This connection is utilized if another isn't explicitly
    | specified when running a cache operation inside the application.
    |
    */

    'default' => env('CACHE_STORE', 'database'),

    /*
    |--------------------------------------------------------------------------
    | Cache Stores
    |--------------------------------------------------------------------------
    |
    | Here you may define all of the cache "stores" for your application as
    | well as their drivers. You may even define multiple stores for the
    | same cache driver to group types of items stored in your caches.
    |
    | Supported drivers: "array", "database", "file", "memcached",
    |                    "redis", "dynamodb", "octane", "null"
    |
    */

    'stores' => [

        'array' => [
            'driver' => 'array',
            'serialize' => false,
        ],

        'database' => [
            'driver' => 'database',
            'connection' => env('DB_CACHE_CONNECTION'),
            'table' => env('DB_CACHE_TABLE', 'cache'),
            'lock_connection' => env('DB_CACHE_LOCK_CONNECTION'),
            'lock_table' => env('DB_CACHE_LOCK_TABLE'),
        ],

        'file' => [
            'driver' => 'file',
            'path' => storage_path('framework/cache/data'),
            'lock_path' => storage_path('framework/cache/data'),
        ],

        'memcached' => [
            'driver' => 'memcached',
            'persistent_id' => env('MEMCACHED_PERSISTENT_ID'),
            'sasl' => [
                env('MEMCACHED_USERNAME'),
                env('MEMCACHED_PASSWORD'),
            ],
            'options' => [
                // Memcached::OPT_CONNECT_TIMEOUT => 2000,
            ],
            'servers' => [
                [
                    'host' => env('MEMCACHED_HOST', '127.0.0.1'),
                    'port' => env('MEMCACHED_PORT', 11211),
                    'weight' => 100,
                ],
            ],
        ],

        'redis' => [
            'driver' => 'redis',
            'connection' => env('REDIS_CACHE_CONNECTION', 'cache'),
            'lock_connection' => env('REDIS_CACHE_LOCK_CONNECTION', 'default'),
        ],

        'dynamodb' => [
            'driver' => 'dynamodb',
            'key' => env('AWS_ACCESS_KEY_ID'),
            'secret' => env('AWS_SECRET_ACCESS_KEY'),
            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
            'table' => env('DYNAMODB_CACHE_TABLE', 'cache'),
            'endpoint' => env('DYNAMODB_ENDPOINT'),
        ],

        'octane' => [
            'driver' => 'octane',
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Cache Key Prefix
    |--------------------------------------------------------------------------
    |
    | When utilizing the APC, database, memcached, Redis, and DynamoDB cache
    | stores, there might be other applications using the same cache. For
    | that reason, you may prefix every cache key to avoid collisions.
    |
    */

    'prefix' => env('CACHE_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_cache_'),

];


config\database.php:
<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Database Connection Name
    |--------------------------------------------------------------------------
    |
    | Here you may specify which of the database connections below you wish
    | to use as your default connection for database operations. This is
    | the connection which will be utilized unless another connection
    | is explicitly specified when you execute a query / statement.
    |
    */

    'default' => env('DB_CONNECTION', 'sqlite'),

    /*
    |--------------------------------------------------------------------------
    | Database Connections
    |--------------------------------------------------------------------------
    |
    | Below are all of the database connections defined for your application.
    | An example configuration is provided for each database system which
    | is supported by Laravel. You're free to add / remove connections.
    |
    */

    'connections' => [

        'sqlite' => [
            'driver' => 'sqlite',
            'url' => env('DB_URL'),
            'database' => env('DB_DATABASE', database_path('database.sqlite')),
            'prefix' => '',
            'foreign_key_constraints' => env('DB_FOREIGN_KEYS', true),
            'busy_timeout' => null,
            'journal_mode' => null,
            'synchronous' => null,
        ],

        'mysql' => [
            'driver' => 'mysql',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', '127.0.0.1'),
            'port' => env('DB_PORT', '3306'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'unix_socket' => env('DB_SOCKET', ''),
            'charset' => env('DB_CHARSET', 'utf8mb4'),
            'collation' => env('DB_COLLATION', 'utf8mb4_unicode_ci'),
            'prefix' => '',
            'prefix_indexes' => true,
            'strict' => true,
            'engine' => null,
            'options' => extension_loaded('pdo_mysql') ? array_filter([
                PDO::MYSQL_ATTR_SSL_CA => env('MYSQL_ATTR_SSL_CA'),
            ]) : [],
        ],

        'mariadb' => [
            'driver' => 'mariadb',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', '127.0.0.1'),
            'port' => env('DB_PORT', '3306'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'unix_socket' => env('DB_SOCKET', ''),
            'charset' => env('DB_CHARSET', 'utf8mb4'),
            'collation' => env('DB_COLLATION', 'utf8mb4_unicode_ci'),
            'prefix' => '',
            'prefix_indexes' => true,
            'strict' => true,
            'engine' => null,
            'options' => extension_loaded('pdo_mysql') ? array_filter([
                PDO::MYSQL_ATTR_SSL_CA => env('MYSQL_ATTR_SSL_CA'),
            ]) : [],
        ],

        'pgsql' => [
            'driver' => 'pgsql',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', '127.0.0.1'),
            'port' => env('DB_PORT', '5432'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'charset' => env('DB_CHARSET', 'utf8'),
            'prefix' => '',
            'prefix_indexes' => true,
            'search_path' => 'public',
            'sslmode' => 'prefer',
        ],

        'sqlsrv' => [
            'driver' => 'sqlsrv',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', 'localhost'),
            'port' => env('DB_PORT', '1433'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'charset' => env('DB_CHARSET', 'utf8'),
            'prefix' => '',
            'prefix_indexes' => true,
            // 'encrypt' => env('DB_ENCRYPT', 'yes'),
            // 'trust_server_certificate' => env('DB_TRUST_SERVER_CERTIFICATE', 'false'),
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Migration Repository Table
    |--------------------------------------------------------------------------
    |
    | This table keeps track of all the migrations that have already run for
    | your application. Using this information, we can determine which of
    | the migrations on disk haven't actually been run on the database.
    |
    */

    'migrations' => [
        'table' => 'migrations',
        'update_date_on_publish' => true,
    ],

    /*
    |--------------------------------------------------------------------------
    | Redis Databases
    |--------------------------------------------------------------------------
    |
    | Redis is an open source, fast, and advanced key-value store that also
    | provides a richer body of commands than a typical key-value system
    | such as Memcached. You may define your connection settings here.
    |
    */

    'redis' => [

        'client' => env('REDIS_CLIENT', 'phpredis'),

        'options' => [
            'cluster' => env('REDIS_CLUSTER', 'redis'),
            'prefix' => env('REDIS_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_database_'),
            'persistent' => env('REDIS_PERSISTENT', false),
        ],

        'default' => [
            'url' => env('REDIS_URL'),
            'host' => env('REDIS_HOST', '127.0.0.1'),
            'username' => env('REDIS_USERNAME'),
            'password' => env('REDIS_PASSWORD'),
            'port' => env('REDIS_PORT', '6379'),
            'database' => env('REDIS_DB', '0'),
        ],

        'cache' => [
            'url' => env('REDIS_URL'),
            'host' => env('REDIS_HOST', '127.0.0.1'),
            'username' => env('REDIS_USERNAME'),
            'password' => env('REDIS_PASSWORD'),
            'port' => env('REDIS_PORT', '6379'),
            'database' => env('REDIS_CACHE_DB', '1'),
        ],

    ],

];

config\filesystems.php:
<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Default Filesystem Disk
    |--------------------------------------------------------------------------
    |
    | Here you may specify the default filesystem disk that should be used
    | by the framework. The "local" disk, as well as a variety of cloud
    | based disks are available to your application for file storage.
    |
    */

    'default' => env('FILESYSTEM_DISK', 'local'),

    /*
    |--------------------------------------------------------------------------
    | Filesystem Disks
    |--------------------------------------------------------------------------
    |
    | Below you may configure as many filesystem disks as necessary, and you
    | may even configure multiple disks for the same driver. Examples for
    | most supported storage drivers are configured here for reference.
    |
    | Supported drivers: "local", "ftp", "sftp", "s3"
    |
    */

    'disks' => [

        'local' => [
            'driver' => 'local',
            'root' => storage_path('app/private'),
            'serve' => true,
            'throw' => false,
            'report' => false,
        ],

        'public' => [
            'driver' => 'local',
            'root' => storage_path('app/public'),
            'url' => env('APP_URL').'/storage',
            'visibility' => 'public',
            'throw' => false,
            'report' => false,
        ],

        's3' => [
            'driver' => 's3',
            'key' => env('AWS_ACCESS_KEY_ID'),
            'secret' => env('AWS_SECRET_ACCESS_KEY'),
            'region' => env('AWS_DEFAULT_REGION'),
            'bucket' => env('AWS_BUCKET'),
            'url' => env('AWS_URL'),
            'endpoint' => env('AWS_ENDPOINT'),
            'use_path_style_endpoint' => env('AWS_USE_PATH_STYLE_ENDPOINT', false),
            'throw' => false,
            'report' => false,
        ],

            'backup' => [
            'driver' => 'local',
            'root' => storage_path('app/backups'),
        ],

        'logs' => [
            'driver' => 'local',
            'root' => storage_path('logs'),
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Symbolic Links
    |--------------------------------------------------------------------------
    |
    | Here you may configure the symbolic links that will be created when the
    | `storage:link` Artisan command is executed. The array keys should be
    | the locations of the links and the values should be their targets.
    |
    */

    'links' => [
        public_path('storage') => storage_path('app/public'),
    ],

];

config\logging.php:
<?php

use Monolog\Handler\NullHandler;
use Monolog\Handler\StreamHandler;
use Monolog\Handler\SyslogUdpHandler;
use Monolog\Processor\PsrLogMessageProcessor;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Log Channel
    |--------------------------------------------------------------------------
    |
    | This option defines the default log channel that is utilized to write
    | messages to your logs. The value provided here should match one of
    | the channels present in the list of "channels" configured below.
    |
    */

    'default' => env('LOG_CHANNEL', 'stack'),

    /*
    |--------------------------------------------------------------------------
    | Deprecations Log Channel
    |--------------------------------------------------------------------------
    |
    | This option controls the log channel that should be used to log warnings
    | regarding deprecated PHP and library features. This allows you to get
    | your application ready for upcoming major versions of dependencies.
    |
    */

    'deprecations' => [
        'channel' => env('LOG_DEPRECATIONS_CHANNEL', 'null'),
        'trace' => env('LOG_DEPRECATIONS_TRACE', false),
    ],

    /*
    |--------------------------------------------------------------------------
    | Log Channels
    |--------------------------------------------------------------------------
    |
    | Here you may configure the log channels for your application. Laravel
    | utilizes the Monolog PHP logging library, which includes a variety
    | of powerful log handlers and formatters that you're free to use.
    |
    | Available drivers: "single", "daily", "slack", "syslog",
    |                    "errorlog", "monolog", "custom", "stack"
    |
    */

    'channels' => [

        'stack' => [
            'driver' => 'stack',
            'channels' => explode(',', env('LOG_STACK', 'single')),
            'ignore_exceptions' => false,
        ],

        'single' => [
            'driver' => 'single',
            'path' => storage_path('logs/laravel.log'),
            'level' => env('LOG_LEVEL', 'debug'),
            'replace_placeholders' => true,
        ],

        'daily' => [
            'driver' => 'daily',
            'path' => storage_path('logs/laravel.log'),
            'level' => env('LOG_LEVEL', 'debug'),
            'days' => env('LOG_DAILY_DAYS', 14),
            'replace_placeholders' => true,
        ],

        'slack' => [
            'driver' => 'slack',
            'url' => env('LOG_SLACK_WEBHOOK_URL'),
            'username' => env('LOG_SLACK_USERNAME', 'Laravel Log'),
            'emoji' => env('LOG_SLACK_EMOJI', ':boom:'),
            'level' => env('LOG_LEVEL', 'critical'),
            'replace_placeholders' => true,
        ],

        'papertrail' => [
            'driver' => 'monolog',
            'level' => env('LOG_LEVEL', 'debug'),
            'handler' => env('LOG_PAPERTRAIL_HANDLER', SyslogUdpHandler::class),
            'handler_with' => [
                'host' => env('PAPERTRAIL_URL'),
                'port' => env('PAPERTRAIL_PORT'),
                'connectionString' => 'tls://'.env('PAPERTRAIL_URL').':'.env('PAPERTRAIL_PORT'),
            ],
            'processors' => [PsrLogMessageProcessor::class],
        ],

        'stderr' => [
            'driver' => 'monolog',
            'level' => env('LOG_LEVEL', 'debug'),
            'handler' => StreamHandler::class,
            'handler_with' => [
                'stream' => 'php://stderr',
            ],
            'formatter' => env('LOG_STDERR_FORMATTER'),
            'processors' => [PsrLogMessageProcessor::class],
        ],

        'syslog' => [
            'driver' => 'syslog',
            'level' => env('LOG_LEVEL', 'debug'),
            'facility' => env('LOG_SYSLOG_FACILITY', LOG_USER),
            'replace_placeholders' => true,
        ],

        'errorlog' => [
            'driver' => 'errorlog',
            'level' => env('LOG_LEVEL', 'debug'),
            'replace_placeholders' => true,
        ],

        'null' => [
            'driver' => 'monolog',
            'handler' => NullHandler::class,
        ],

        'emergency' => [
            'path' => storage_path('logs/laravel.log'),
        ],

    ],

];

config\mail.php:
<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Default Mailer
    |--------------------------------------------------------------------------
    |
    | This option controls the default mailer that is used to send all email
    | messages unless another mailer is explicitly specified when sending
    | the message. All additional mailers can be configured within the
    | "mailers" array. Examples of each type of mailer are provided.
    |
    */

    'default' => env('MAIL_MAILER', 'log'),

    /*
    |--------------------------------------------------------------------------
    | Mailer Configurations
    |--------------------------------------------------------------------------
    |
    | Here you may configure all of the mailers used by your application plus
    | their respective settings. Several examples have been configured for
    | you and you are free to add your own as your application requires.
    |
    | Laravel supports a variety of mail "transport" drivers that can be used
    | when delivering an email. You may specify which one you're using for
    | your mailers below. You may also add additional mailers if needed.
    |
    | Supported: "smtp", "sendmail", "mailgun", "ses", "ses-v2",
    |            "postmark", "resend", "log", "array",
    |            "failover", "roundrobin"
    |
    */

    'mailers' => [

        'smtp' => [
            'transport' => 'smtp',
            'scheme' => env('MAIL_SCHEME'),
            'url' => env('MAIL_URL'),
            'host' => env('MAIL_HOST', '127.0.0.1'),
            'port' => env('MAIL_PORT', 2525),
            'username' => env('MAIL_USERNAME'),
            'password' => env('MAIL_PASSWORD'),
            'timeout' => null,
            'local_domain' => env('MAIL_EHLO_DOMAIN', parse_url(env('APP_URL', 'http://localhost'), PHP_URL_HOST)),
        ],

        'ses' => [
            'transport' => 'ses',
        ],

        'postmark' => [
            'transport' => 'postmark',
            // 'message_stream_id' => env('POSTMARK_MESSAGE_STREAM_ID'),
            // 'client' => [
            //     'timeout' => 5,
            // ],
        ],

        'resend' => [
            'transport' => 'resend',
        ],

        'sendmail' => [
            'transport' => 'sendmail',
            'path' => env('MAIL_SENDMAIL_PATH', '/usr/sbin/sendmail -bs -i'),
        ],

        'log' => [
            'transport' => 'log',
            'channel' => env('MAIL_LOG_CHANNEL'),
        ],

        'array' => [
            'transport' => 'array',
        ],

        'failover' => [
            'transport' => 'failover',
            'mailers' => [
                'smtp',
                'log',
            ],
            'retry_after' => 60,
        ],

        'roundrobin' => [
            'transport' => 'roundrobin',
            'mailers' => [
                'ses',
                'postmark',
            ],
            'retry_after' => 60,
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Global "From" Address
    |--------------------------------------------------------------------------
    |
    | You may wish for all emails sent by your application to be sent from
    | the same address. Here you may specify a name and address that is
    | used globally for all emails that are sent by your application.
    |
    */

    'from' => [
        'address' => env('MAIL_FROM_ADDRESS', 'hello@example.com'),
        'name' => env('MAIL_FROM_NAME', 'Example'),
    ],

];

config\permission.php:
<?php

return [

    'models' => [

        /*
         * When using the "HasPermissions" trait from this package, we need to know which
         * Eloquent model should be used to retrieve your permissions. Of course, it
         * is often just the "Permission" model but you may use whatever you like.
         *
         * The model you want to use as a Permission model needs to implement the
         * `Spatie\Permission\Contracts\Permission` contract.
         */

        'permission' => Spatie\Permission\Models\Permission::class,

        /*
         * When using the "HasRoles" trait from this package, we need to know which
         * Eloquent model should be used to retrieve your roles. Of course, it
         * is often just the "Role" model but you may use whatever you like.
         *
         * The model you want to use as a Role model needs to implement the
         * `Spatie\Permission\Contracts\Role` contract.
         */

        'role' => Spatie\Permission\Models\Role::class,

    ],

    'table_names' => [

        /*
         * When using the "HasRoles" trait from this package, we need to know which
         * table should be used to retrieve your roles. We have chosen a basic
         * default value but you may easily change it to any table you like.
         */

        'roles' => 'roles',

        /*
         * When using the "HasPermissions" trait from this package, we need to know which
         * table should be used to retrieve your permissions. We have chosen a basic
         * default value but you may easily change it to any table you like.
         */

        'permissions' => 'permissions',

        /*
         * When using the "HasPermissions" trait from this package, we need to know which
         * table should be used to retrieve your models permissions. We have chosen a
         * basic default value but you may easily change it to any table you like.
         */

        'model_has_permissions' => 'model_has_permissions',

        /*
         * When using the "HasRoles" trait from this package, we need to know which
         * table should be used to retrieve your models roles. We have chosen a
         * basic default value but you may easily change it to any table you like.
         */

        'model_has_roles' => 'model_has_roles',

        /*
         * When using the "HasRoles" trait from this package, we need to know which
         * table should be used to retrieve your roles permissions. We have chosen a
         * basic default value but you may easily change it to any table you like.
         */

        'role_has_permissions' => 'role_has_permissions',
    ],

    'column_names' => [
        /*
         * Change this if you want to name the related pivots other than defaults
         */
        'role_pivot_key' => null, // default 'role_id',
        'permission_pivot_key' => null, // default 'permission_id',

        /*
         * Change this if you want to name the related model primary key other than
         * `model_id`.
         *
         * For example, this would be nice if your primary keys are all UUIDs. In
         * that case, name this `model_uuid`.
         */

        'model_morph_key' => 'model_id',

        /*
         * Change this if you want to use the teams feature and your related model's
         * foreign key is other than `team_id`.
         */

        'team_foreign_key' => 'team_id',
    ],

    /*
     * When set to true, the method for checking permissions will be registered on the gate.
     * Set this to false if you want to implement custom logic for checking permissions.
     */

    'register_permission_check_method' => true,

    /*
     * When set to true, Laravel\Octane\Events\OperationTerminated event listener will be registered
     * this will refresh permissions on every TickTerminated, TaskTerminated and RequestTerminated
     * NOTE: This should not be needed in most cases, but an Octane/Vapor combination benefited from it.
     */
    'register_octane_reset_listener' => false,

    /*
     * Events will fire when a role or permission is assigned/unassigned:
     * \Spatie\Permission\Events\RoleAttached
     * \Spatie\Permission\Events\RoleDetached
     * \Spatie\Permission\Events\PermissionAttached
     * \Spatie\Permission\Events\PermissionDetached
     *
     * To enable, set to true, and then create listeners to watch these events.
     */
    'events_enabled' => false,

    /*
     * Teams Feature.
     * When set to true the package implements teams using the 'team_foreign_key'.
     * If you want the migrations to register the 'team_foreign_key', you must
     * set this to true before doing the migration.
     * If you already did the migration then you must make a new migration to also
     * add 'team_foreign_key' to 'roles', 'model_has_roles', and 'model_has_permissions'
     * (view the latest version of this package's migration file)
     */

    'teams' => false,

    /*
     * The class to use to resolve the permissions team id
     */
    'team_resolver' => \Spatie\Permission\DefaultTeamResolver::class,

    /*
     * Passport Client Credentials Grant
     * When set to true the package will use Passports Client to check permissions
     */

    'use_passport_client_credentials' => false,

    /*
     * When set to true, the required permission names are added to exception messages.
     * This could be considered an information leak in some contexts, so the default
     * setting is false here for optimum safety.
     */

    'display_permission_in_exception' => false,

    /*
     * When set to true, the required role names are added to exception messages.
     * This could be considered an information leak in some contexts, so the default
     * setting is false here for optimum safety.
     */

    'display_role_in_exception' => false,

    /*
     * By default wildcard permission lookups are disabled.
     * See documentation to understand supported syntax.
     */

    'enable_wildcard_permission' => false,

    /*
     * The class to use for interpreting wildcard permissions.
     * If you need to modify delimiters, override the class and specify its name here.
     */
    // 'wildcard_permission' => Spatie\Permission\WildcardPermission::class,

    /* Cache-specific settings */

    'cache' => [

        /*
         * By default all permissions are cached for 24 hours to speed up performance.
         * When permissions or roles are updated the cache is flushed automatically.
         */

        'expiration_time' => \DateInterval::createFromDateString('24 hours'),

        /*
         * The cache key used to store all permissions.
         */

        'key' => 'spatie.permission.cache',

        /*
         * You may optionally indicate a specific cache driver to use for permission and
         * role caching using any of the `store` drivers listed in the cache.php config
         * file. Using 'default' here means to use the `default` set in cache.php.
         */

        'store' => 'default',
    ],
];

config\queue.php:
<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Default Queue Connection Name
    |--------------------------------------------------------------------------
    |
    | Laravel's queue supports a variety of backends via a single, unified
    | API, giving you convenient access to each backend using identical
    | syntax for each. The default queue connection is defined below.
    |
    */

    'default' => env('QUEUE_CONNECTION', 'database'),

    /*
    |--------------------------------------------------------------------------
    | Queue Connections
    |--------------------------------------------------------------------------
    |
    | Here you may configure the connection options for every queue backend
    | used by your application. An example configuration is provided for
    | each backend supported by Laravel. You're also free to add more.
    |
    | Drivers: "sync", "database", "beanstalkd", "sqs", "redis", "null"
    |
    */

    'connections' => [

        'sync' => [
            'driver' => 'sync',
        ],

        'database' => [
            'driver' => 'database',
            'connection' => env('DB_QUEUE_CONNECTION'),
            'table' => env('DB_QUEUE_TABLE', 'jobs'),
            'queue' => env('DB_QUEUE', 'default'),
            'retry_after' => (int) env('DB_QUEUE_RETRY_AFTER', 90),
            'after_commit' => false,
        ],

        'beanstalkd' => [
            'driver' => 'beanstalkd',
            'host' => env('BEANSTALKD_QUEUE_HOST', 'localhost'),
            'queue' => env('BEANSTALKD_QUEUE', 'default'),
            'retry_after' => (int) env('BEANSTALKD_QUEUE_RETRY_AFTER', 90),
            'block_for' => 0,
            'after_commit' => false,
        ],

        'sqs' => [
            'driver' => 'sqs',
            'key' => env('AWS_ACCESS_KEY_ID'),
            'secret' => env('AWS_SECRET_ACCESS_KEY'),
            'prefix' => env('SQS_PREFIX', 'https://sqs.us-east-1.amazonaws.com/your-account-id'),
            'queue' => env('SQS_QUEUE', 'default'),
            'suffix' => env('SQS_SUFFIX'),
            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
            'after_commit' => false,
        ],

        'redis' => [
            'driver' => 'redis',
            'connection' => env('REDIS_QUEUE_CONNECTION', 'default'),
            'queue' => env('REDIS_QUEUE', 'default'),
            'retry_after' => (int) env('REDIS_QUEUE_RETRY_AFTER', 90),
            'block_for' => null,
            'after_commit' => false,
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Job Batching
    |--------------------------------------------------------------------------
    |
    | The following options configure the database and table that store job
    | batching information. These options can be updated to any database
    | connection and table which has been defined by your application.
    |
    */

    'batching' => [
        'database' => env('DB_CONNECTION', 'sqlite'),
        'table' => 'job_batches',
    ],

    /*
    |--------------------------------------------------------------------------
    | Failed Queue Jobs
    |--------------------------------------------------------------------------
    |
    | These options configure the behavior of failed queue job logging so you
    | can control how and where failed jobs are stored. Laravel ships with
    | support for storing failed jobs in a simple file or in a database.
    |
    | Supported drivers: "database-uuids", "dynamodb", "file", "null"
    |
    */

    'failed' => [
        'driver' => env('QUEUE_FAILED_DRIVER', 'database-uuids'),
        'database' => env('DB_CONNECTION', 'sqlite'),
        'table' => 'failed_jobs',
    ],

];

config\services.php:
<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Third Party Services
    |--------------------------------------------------------------------------
    |
    | This file is for storing the credentials for third party services such
    | as Mailgun, Postmark, AWS and more. This file provides the de facto
    | location for this type of information, allowing packages to have
    | a conventional file to locate the various service credentials.
    |
    */

    'postmark' => [
        'token' => env('POSTMARK_TOKEN'),
    ],

    'resend' => [
        'key' => env('RESEND_KEY'),
    ],

    'ses' => [
        'key' => env('AWS_ACCESS_KEY_ID'),
        'secret' => env('AWS_SECRET_ACCESS_KEY'),
        'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
    ],

    'slack' => [
        'notifications' => [
            'bot_user_oauth_token' => env('SLACK_BOT_USER_OAUTH_TOKEN'),
            'channel' => env('SLACK_BOT_USER_DEFAULT_CHANNEL'),
        ],
    ],

];

config\session.php:
<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Session Driver
    |--------------------------------------------------------------------------
    |
    | This option determines the default session driver that is utilized for
    | incoming requests. Laravel supports a variety of storage options to
    | persist session data. Database storage is a great default choice.
    |
    | Supported: "file", "cookie", "database", "memcached",
    |            "redis", "dynamodb", "array"
    |
    */

    'driver' => env('SESSION_DRIVER', 'database'),

    /*
    |--------------------------------------------------------------------------
    | Session Lifetime
    |--------------------------------------------------------------------------
    |
    | Here you may specify the number of minutes that you wish the session
    | to be allowed to remain idle before it expires. If you want them
    | to expire immediately when the browser is closed then you may
    | indicate that via the expire_on_close configuration option.
    |
    */

    'lifetime' => (int) env('SESSION_LIFETIME', 120),

    'expire_on_close' => env('SESSION_EXPIRE_ON_CLOSE', false),

    /*
    |--------------------------------------------------------------------------
    | Session Encryption
    |--------------------------------------------------------------------------
    |
    | This option allows you to easily specify that all of your session data
    | should be encrypted before it's stored. All encryption is performed
    | automatically by Laravel and you may use the session like normal.
    |
    */

    'encrypt' => env('SESSION_ENCRYPT', false),

    /*
    |--------------------------------------------------------------------------
    | Session File Location
    |--------------------------------------------------------------------------
    |
    | When utilizing the "file" session driver, the session files are placed
    | on disk. The default storage location is defined here; however, you
    | are free to provide another location where they should be stored.
    |
    */

    'files' => storage_path('framework/sessions'),

    /*
    |--------------------------------------------------------------------------
    | Session Database Connection
    |--------------------------------------------------------------------------
    |
    | When using the "database" or "redis" session drivers, you may specify a
    | connection that should be used to manage these sessions. This should
    | correspond to a connection in your database configuration options.
    |
    */

    'connection' => env('SESSION_CONNECTION'),

    /*
    |--------------------------------------------------------------------------
    | Session Database Table
    |--------------------------------------------------------------------------
    |
    | When using the "database" session driver, you may specify the table to
    | be used to store sessions. Of course, a sensible default is defined
    | for you; however, you're welcome to change this to another table.
    |
    */

    'table' => env('SESSION_TABLE', 'sessions'),

    /*
    |--------------------------------------------------------------------------
    | Session Cache Store
    |--------------------------------------------------------------------------
    |
    | When using one of the framework's cache driven session backends, you may
    | define the cache store which should be used to store the session data
    | between requests. This must match one of your defined cache stores.
    |
    | Affects: "dynamodb", "memcached", "redis"
    |
    */

    'store' => env('SESSION_STORE'),

    /*
    |--------------------------------------------------------------------------
    | Session Sweeping Lottery
    |--------------------------------------------------------------------------
    |
    | Some session drivers must manually sweep their storage location to get
    | rid of old sessions from storage. Here are the chances that it will
    | happen on a given request. By default, the odds are 2 out of 100.
    |
    */

    'lottery' => [2, 100],

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Name
    |--------------------------------------------------------------------------
    |
    | Here you may change the name of the session cookie that is created by
    | the framework. Typically, you should not need to change this value
    | since doing so does not grant a meaningful security improvement.
    |
    */

    'cookie' => env(
        'SESSION_COOKIE',
        Str::slug(env('APP_NAME', 'laravel'), '_').'_session'
    ),

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Path
    |--------------------------------------------------------------------------
    |
    | The session cookie path determines the path for which the cookie will
    | be regarded as available. Typically, this will be the root path of
    | your application, but you're free to change this when necessary.
    |
    */

    'path' => env('SESSION_PATH', '/'),

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Domain
    |--------------------------------------------------------------------------
    |
    | This value determines the domain and subdomains the session cookie is
    | available to. By default, the cookie will be available to the root
    | domain and all subdomains. Typically, this shouldn't be changed.
    |
    */

    'domain' => env('SESSION_DOMAIN'),

    /*
    |--------------------------------------------------------------------------
    | HTTPS Only Cookies
    |--------------------------------------------------------------------------
    |
    | By setting this option to true, session cookies will only be sent back
    | to the server if the browser has a HTTPS connection. This will keep
    | the cookie from being sent to you when it can't be done securely.
    |
    */

    'secure' => env('SESSION_SECURE_COOKIE'),

    /*
    |--------------------------------------------------------------------------
    | HTTP Access Only
    |--------------------------------------------------------------------------
    |
    | Setting this value to true will prevent JavaScript from accessing the
    | value of the cookie and the cookie will only be accessible through
    | the HTTP protocol. It's unlikely you should disable this option.
    |
    */

    'http_only' => env('SESSION_HTTP_ONLY', true),

    /*
    |--------------------------------------------------------------------------
    | Same-Site Cookies
    |--------------------------------------------------------------------------
    |
    | This option determines how your cookies behave when cross-site requests
    | take place, and can be used to mitigate CSRF attacks. By default, we
    | will set this value to "lax" to permit secure cross-site requests.
    |
    | See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie#samesitesamesite-value
    |
    | Supported: "lax", "strict", "none", null
    |
    */

    'same_site' => env('SESSION_SAME_SITE', 'lax'),

    /*
    |--------------------------------------------------------------------------
    | Partitioned Cookies
    |--------------------------------------------------------------------------
    |
    | Setting this value to true will tie the cookie to the top-level site for
    | a cross-site context. Partitioned cookies are accepted by the browser
    | when flagged "secure" and the Same-Site attribute is set to "none".
    |
    */

    'partitioned' => env('SESSION_PARTITIONED_COOKIE', false),

];

database\factories\UserFactory.php:
<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Str;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\User>
 */
class UserFactory extends Factory
{
    /**
     * The current password being used by the factory.
     */
    protected static ?string $password;

    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [
            'name' => fake()->name(),
            'email' => fake()->unique()->safeEmail(),
            'email_verified_at' => now(),
            'password' => static::$password ??= Hash::make('password'),
            'remember_token' => Str::random(10),
        ];
    }

    /**
     * Indicate that the model's email address should be unverified.
     */
    public function unverified(): static
    {
        return $this->state(fn (array $attributes) => [
            'email_verified_at' => null,
        ]);
    }
}

database\migrations\0001_01_01_000000_create_users_table.php:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('users', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('email')->unique();
            $table->timestamp('email_verified_at')->nullable();
            $table->string('password');
            $table->rememberToken();
            $table->timestamps();
        });

        Schema::create('password_reset_tokens', function (Blueprint $table) {
            $table->string('email')->primary();
            $table->string('token');
            $table->timestamp('created_at')->nullable();
        });

        Schema::create('sessions', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->foreignId('user_id')->nullable()->index();
            $table->string('ip_address', 45)->nullable();
            $table->text('user_agent')->nullable();
            $table->longText('payload');
            $table->integer('last_activity')->index();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('users');
        Schema::dropIfExists('password_reset_tokens');
        Schema::dropIfExists('sessions');
    }
};

database\migrations\0001_01_01_000001_create_cache_table.php:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('cache', function (Blueprint $table) {
            $table->string('key')->primary();
            $table->mediumText('value');
            $table->integer('expiration');
        });

        Schema::create('cache_locks', function (Blueprint $table) {
            $table->string('key')->primary();
            $table->string('owner');
            $table->integer('expiration');
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('cache');
        Schema::dropIfExists('cache_locks');
    }
};

database\migrations\0001_01_01_000002_create_jobs_table.php:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('jobs', function (Blueprint $table) {
            $table->id();
            $table->string('queue')->index();
            $table->longText('payload');
            $table->unsignedTinyInteger('attempts');
            $table->unsignedInteger('reserved_at')->nullable();
            $table->unsignedInteger('available_at');
            $table->unsignedInteger('created_at');
        });

        Schema::create('job_batches', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->string('name');
            $table->integer('total_jobs');
            $table->integer('pending_jobs');
            $table->integer('failed_jobs');
            $table->longText('failed_job_ids');
            $table->mediumText('options')->nullable();
            $table->integer('cancelled_at')->nullable();
            $table->integer('created_at');
            $table->integer('finished_at')->nullable();
        });

        Schema::create('failed_jobs', function (Blueprint $table) {
            $table->id();
            $table->string('uuid')->unique();
            $table->text('connection');
            $table->text('queue');
            $table->longText('payload');
            $table->longText('exception');
            $table->timestamp('failed_at')->useCurrent();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('jobs');
        Schema::dropIfExists('job_batches');
        Schema::dropIfExists('failed_jobs');
    }
};

database\migrations\2025_06_21_142906_add_fields_to_users_table.php:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up()
    {
        Schema::table('users', function (Blueprint $table) {
            $table->string('phone')->nullable()->after('email');
            $table->text('address')->nullable()->after('phone');
            $table->boolean('is_active')->default(true)->after('address');
            $table->string('profile_photo')->nullable()->after('is_active');
        });
    }

    public function down()
    {
        Schema::table('users', function (Blueprint $table) {
            $table->dropColumn(['phone', 'address', 'is_active', 'profile_photo']);
        });
    }
};

database\migrations\2025_06_21_142950_create_clients_table.php:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up()
    {
        Schema::create('clients', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('email')->nullable();
            $table->string('phone');
            $table->string('whatsapp')->nullable();
            $table->text('address');
            $table->enum('status', ['prospek', 'aktif', 'selesai'])->default('prospek');
            $table->foreignId('pic_id')->constrained('users');
            $table->enum('source', ['referral', 'website', 'walk-in', 'social-media', 'other']);
            $table->string('source_detail')->nullable();
            $table->text('notes')->nullable();
            $table->timestamps();
        });
    }

    public function down()
    {
        Schema::dropIfExists('clients');
    }
};

database\migrations\2025_06_21_143025_create_projects_table.php:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up()
    {
        Schema::create('projects', function (Blueprint $table) {
            $table->id();
            $table->string('code')->unique();
            $table->string('name');
            $table->enum('type', ['kantor', 'showroom', 'kafe', 'restoran', 'outlet', 'other']);
            $table->text('location');
            $table->date('start_date')->nullable();
            $table->date('target_date')->nullable();
            $table->enum('status', ['lead', 'survey', 'penawaran', 'negosiasi', 'deal', 'eksekusi', 'selesai', 'batal']);
            $table->decimal('project_value', 15, 2)->nullable();
            $table->decimal('deal_value', 15, 2)->nullable();
            $table->foreignId('client_id')->constrained('clients');
            $table->foreignId('pic_id')->constrained('users');
            $table->text('description')->nullable();
            $table->timestamps();
        });
    }

    public function down()
    {
        Schema::dropIfExists('projects');
    }
};

database\migrations\2025_06_21_143043_create_surveys_table.php:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up()
    {
        Schema::create('surveys', function (Blueprint $table) {
            $table->id();
            $table->foreignId('project_id')->constrained('projects');
            $table->foreignId('surveyor_id')->constrained('users');
            $table->datetime('scheduled_date');
            $table->datetime('actual_date')->nullable();
            $table->enum('status', ['pending', 'in_progress', 'completed', 'cancelled']);
            $table->decimal('latitude', 10, 8)->nullable();
            $table->decimal('longitude', 11, 8)->nullable();
            $table->text('address')->nullable();
            $table->text('notes')->nullable();
            $table->json('checklist_data')->nullable();
            $table->timestamps();
        });
    }

    public function down()
    {
        Schema::dropIfExists('surveys');
    }
};

database\migrations\2025_06_21_143120_create_survey_photos_table.php:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up()
    {
        Schema::create('survey_photos', function (Blueprint $table) {
            $table->id();
            $table->foreignId('survey_id')->constrained('surveys')->onDelete('cascade');
            $table->string('filename');
            $table->string('path');
            $table->string('caption')->nullable();
            $table->integer('order')->default(0);
            $table->timestamps();
        });
    }

    public function down()
    {
        Schema::dropIfExists('survey_photos');
    }
};

database\migrations\2025_06_21_143141_create_pipeline_stages_table.php:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up()
    {
        Schema::create('pipeline_stages', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('slug');
            $table->string('color')->default('#6c757d');
            $table->integer('order')->default(0);
            $table->boolean('is_active')->default(true);
            $table->timestamps();
        });
    }

    public function down()
    {
        Schema::dropIfExists('pipeline_stages');
    }
};

database\migrations\2025_06_21_150906_create_permission_tables.php:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        $teams = config('permission.teams');
        $tableNames = config('permission.table_names');
        $columnNames = config('permission.column_names');
        $pivotRole = $columnNames['role_pivot_key'] ?? 'role_id';
        $pivotPermission = $columnNames['permission_pivot_key'] ?? 'permission_id';

        throw_if(empty($tableNames), new Exception('Error: config/permission.php not loaded. Run [php artisan config:clear] and try again.'));
        throw_if($teams && empty($columnNames['team_foreign_key'] ?? null), new Exception('Error: team_foreign_key on config/permission.php not loaded. Run [php artisan config:clear] and try again.'));

        Schema::create($tableNames['permissions'], static function (Blueprint $table) {
            // $table->engine('InnoDB');
            $table->bigIncrements('id'); // permission id
            $table->string('name');       // For MyISAM use string('name', 225); // (or 166 for InnoDB with Redundant/Compact row format)
            $table->string('guard_name'); // For MyISAM use string('guard_name', 25);
            $table->timestamps();

            $table->unique(['name', 'guard_name']);
        });

        Schema::create($tableNames['roles'], static function (Blueprint $table) use ($teams, $columnNames) {
            // $table->engine('InnoDB');
            $table->bigIncrements('id'); // role id
            if ($teams || config('permission.testing')) { // permission.testing is a fix for sqlite testing
                $table->unsignedBigInteger($columnNames['team_foreign_key'])->nullable();
                $table->index($columnNames['team_foreign_key'], 'roles_team_foreign_key_index');
            }
            $table->string('name');       // For MyISAM use string('name', 225); // (or 166 for InnoDB with Redundant/Compact row format)
            $table->string('guard_name'); // For MyISAM use string('guard_name', 25);
            $table->timestamps();
            if ($teams || config('permission.testing')) {
                $table->unique([$columnNames['team_foreign_key'], 'name', 'guard_name']);
            } else {
                $table->unique(['name', 'guard_name']);
            }
        });

        Schema::create($tableNames['model_has_permissions'], static function (Blueprint $table) use ($tableNames, $columnNames, $pivotPermission, $teams) {
            $table->unsignedBigInteger($pivotPermission);

            $table->string('model_type');
            $table->unsignedBigInteger($columnNames['model_morph_key']);
            $table->index([$columnNames['model_morph_key'], 'model_type'], 'model_has_permissions_model_id_model_type_index');

            $table->foreign($pivotPermission)
                ->references('id') // permission id
                ->on($tableNames['permissions'])
                ->onDelete('cascade');
            if ($teams) {
                $table->unsignedBigInteger($columnNames['team_foreign_key']);
                $table->index($columnNames['team_foreign_key'], 'model_has_permissions_team_foreign_key_index');

                $table->primary([$columnNames['team_foreign_key'], $pivotPermission, $columnNames['model_morph_key'], 'model_type'],
                    'model_has_permissions_permission_model_type_primary');
            } else {
                $table->primary([$pivotPermission, $columnNames['model_morph_key'], 'model_type'],
                    'model_has_permissions_permission_model_type_primary');
            }

        });

        Schema::create($tableNames['model_has_roles'], static function (Blueprint $table) use ($tableNames, $columnNames, $pivotRole, $teams) {
            $table->unsignedBigInteger($pivotRole);

            $table->string('model_type');
            $table->unsignedBigInteger($columnNames['model_morph_key']);
            $table->index([$columnNames['model_morph_key'], 'model_type'], 'model_has_roles_model_id_model_type_index');

            $table->foreign($pivotRole)
                ->references('id') // role id
                ->on($tableNames['roles'])
                ->onDelete('cascade');
            if ($teams) {
                $table->unsignedBigInteger($columnNames['team_foreign_key']);
                $table->index($columnNames['team_foreign_key'], 'model_has_roles_team_foreign_key_index');

                $table->primary([$columnNames['team_foreign_key'], $pivotRole, $columnNames['model_morph_key'], 'model_type'],
                    'model_has_roles_role_model_type_primary');
            } else {
                $table->primary([$pivotRole, $columnNames['model_morph_key'], 'model_type'],
                    'model_has_roles_role_model_type_primary');
            }
        });

        Schema::create($tableNames['role_has_permissions'], static function (Blueprint $table) use ($tableNames, $pivotRole, $pivotPermission) {
            $table->unsignedBigInteger($pivotPermission);
            $table->unsignedBigInteger($pivotRole);

            $table->foreign($pivotPermission)
                ->references('id') // permission id
                ->on($tableNames['permissions'])
                ->onDelete('cascade');

            $table->foreign($pivotRole)
                ->references('id') // role id
                ->on($tableNames['roles'])
                ->onDelete('cascade');

            $table->primary([$pivotPermission, $pivotRole], 'role_has_permissions_permission_id_role_id_primary');
        });

        app('cache')
            ->store(config('permission.cache.store') != 'default' ? config('permission.cache.store') : null)
            ->forget(config('permission.cache.key'));
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        $tableNames = config('permission.table_names');

        if (empty($tableNames)) {
            throw new \Exception('Error: config/permission.php not found and defaults could not be merged. Please publish the package configuration before proceeding, or drop the tables manually.');
        }

        Schema::drop($tableNames['role_has_permissions']);
        Schema::drop($tableNames['model_has_roles']);
        Schema::drop($tableNames['model_has_permissions']);
        Schema::drop($tableNames['roles']);
        Schema::drop($tableNames['permissions']);
    }
};

database\migrations\2025_06_21_190248_create_model_names_table.php:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('model_names', function (Blueprint $table) {
            $table->id();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('model_names');
    }
};


database\migrations\2025_06_24_152843_create_project_pipelines_table.php:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up()
    {
        Schema::create('project_pipelines', function (Blueprint $table) {
            $table->id();
            $table->foreignId('project_id')->constrained('projects');
            $table->string('from_status')->nullable();
            $table->string('to_status');
            $table->foreignId('changed_by')->constrained('users');
            $table->datetime('changed_at');
            $table->text('notes')->nullable();
            $table->timestamps();
            
            $table->index(['project_id', 'changed_at']);
        });
    }

    public function down()
    {
        Schema::dropIfExists('project_pipelines');
    }

    
};

database\migrations\2025_06_24_153832_create_documents_table.php:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up()
    {
        Schema::create('documents', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('original_name');
            $table->string('category'); // penawaran, kontrak, invoice, survey, design, progress, other
            $table->string('type'); // pdf, image, word, excel, other
            $table->text('description')->nullable();
            $table->string('path');
            $table->bigInteger('size');
            $table->string('extension', 10);
            $table->morphs('documentable'); // polymorphic relation
            $table->foreignId('uploaded_by')->constrained('users');
            $table->boolean('is_public')->default(false);
            $table->integer('views')->default(0);
            $table->integer('downloads')->default(0);
            $table->timestamps();
            
            $table->index(['documentable_type', 'documentable_id']);
            $table->index('category');
            $table->index('type');
            $table->index('uploaded_by');
        });
    }

    public function down()
    {
        Schema::dropIfExists('documents');
    }
};

database\migrations\2025_06_24_164359_add_project_id_to_documents_table.php:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up()
    {
        Schema::table('documents', function (Blueprint $table) {
            $table->foreignId('project_id')->nullable()->constrained('projects');
        });
    }



    /**
     * Reverse the migrations.
     */
    public function down()
    {
        Schema::table('documents', function (Blueprint $table) {
            $table->dropForeign(['project_id']);
            $table->dropColumn('project_id');
        });
    }


};


database\migrations\2025_06_25_155055_create_notifications_table.php:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('notifications', function (Blueprint $table) {
            $table->uuid('id')->primary();
            $table->string('type');
            $table->morphs('notifiable');
            $table->text('data');
            $table->timestamp('read_at')->nullable();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('notifications');
    }
};


database\migrations\2025_06_28_131602_create_settings_table.php:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('settings', function (Blueprint $table) {
            $table->id();
            $table->string('key')->unique();
            $table->text('value')->nullable();
            $table->string('group')->default('general');
            $table->string('type')->default('string');
            $table->timestamps();

            // Add index for faster lookups
            $table->index('group');
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('settings');
    }
};

database\migrations\2025_06_28_153133_add_fields_to_users_table.php:
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
        public function up()
        {
            Schema::table('users', function (Blueprint $table) {
                if (!Schema::hasColumn('users', 'phone')) {
                    $table->string('phone')->nullable()->after('email');
                }

                // Add any other columns you need here
                // Make sure to check for their existence too
            });
        }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::table('users', function (Blueprint $table) {
            $table->dropColumn(['phone', 'address', 'avatar', 'is_active', 'last_login_at']);
        });
    }
};



database\seeders\DatabaseSeeder.php:
<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;

class DatabaseSeeder extends Seeder
{
    public function run()
    {
        $this->call([
            UserSeeder::class,
            PipelineStageSeeder::class,
        ]);
    }
}

database\seeders\PipelineStageSeeder.php:
<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use App\Models\PipelineStage;

class PipelineStageSeeder extends Seeder
{
    public function run()
    {
        $stages = [
            ['name' => 'Lead Masuk', 'slug' => 'lead', 'color' => '#6c757d', 'order' => 1],
            ['name' => 'Penjadwalan Survey', 'slug' => 'scheduling', 'color' => '#17a2b8', 'order' => 2],
            ['name' => 'Survey Dilakukan', 'slug' => 'survey', 'color' => '#ffc107', 'order' => 3],
            ['name' => 'Penawaran Dibuat', 'slug' => 'quotation', 'color' => '#fd7e14', 'order' => 4],
            ['name' => 'Negosiasi', 'slug' => 'negotiation', 'color' => '#6f42c1', 'order' => 5],
            ['name' => 'Deal/Kontrak', 'slug' => 'deal', 'color' => '#28a745', 'order' => 6],
            ['name' => 'Eksekusi Proyek', 'slug' => 'execution', 'color' => '#007bff', 'order' => 7],
            ['name' => 'Selesai', 'slug' => 'completed', 'color' => '#20c997', 'order' => 8],
        ];

        foreach ($stages as $stage) {
            PipelineStage::create($stage);
        }
    }
}

database\seeders\RoleSeeder.php:
<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use Spatie\Permission\Models\Role;
use Spatie\Permission\Models\Permission;
use App\Models\User;

class RoleSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        // Reset cached roles and permissions
        app()[\Spatie\Permission\PermissionRegistrar::class]->forgetCachedPermissions();

        // Create roles
        $roles = [
            'admin' => 'Full access to all features',
            'manager' => 'Manage projects, clients, and reports',
            'marketing' => 'Manage clients and projects',
            'surveyor' => 'Conduct surveys and upload reports',
            'user' => 'Basic access'
        ];

        foreach ($roles as $name => $description) {
            // Check if the role already exists before creating it
            if (!Role::where('name', $name)->where('guard_name', 'web')->exists()) {
                Role::create([
                    'name' => $name,
                    'guard_name' => 'web'
                ]);
            }
        }

        // Ensure at least one admin user exists
        $admin = User::where('email', 'admin@example.com')->first();

        if (!$admin) {
            $admin = User::create([
                'name' => 'Admin',
                'email' => 'admin@example.com',
                'password' => bcrypt('password'),
                'email_verified_at' => now(),
                'is_active' => true,
            ]);
        }

        // Make sure user has admin role
        if (!$admin->hasRole('admin')) {
            $admin->assignRole('admin');
        }
    }
}


database\seeders\SettingsSeeder.php:
<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use App\Models\Setting;

class SettingsSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        // General Settings
        $this->createSetting('site_name', 'Project Management System', 'general', 'string');
        $this->createSetting('site_description', 'Project and survey management system', 'general', 'string');
        $this->createSetting('maintenance_mode', '0', 'general', 'boolean');
        $this->createSetting('default_pagination', '20', 'general', 'integer');
        $this->createSetting('date_format', 'd M Y', 'general', 'string');
        $this->createSetting('time_format', 'H:i', 'general', 'string');
        $this->createSetting('timezone', 'Asia/Jakarta', 'general', 'string');

        // Company Settings
        $this->createSetting('company_name', 'Your Company Name', 'company', 'string');
        $this->createSetting('company_address', 'Company Address Line 1, Line 2', 'company', 'string');
        $this->createSetting('company_phone', '+62 123 456 7890', 'company', 'string');
        $this->createSetting('company_email', 'info@company.com', 'company', 'string');
        $this->createSetting('company_website', 'https://company.com', 'company', 'string');
        $this->createSetting('company_tax_id', '123456789', 'company', 'string');
        $this->createSetting('invoice_prefix', 'INV', 'company', 'string');
        $this->createSetting('currency', 'IDR', 'company', 'string');
        $this->createSetting('fiscal_year_start', '01-01', 'company', 'string');

        // Notification Settings
        $this->createSetting('email_notifications', '1', 'notification', 'boolean');
        $this->createSetting('survey_notifications', '1', 'notification', 'boolean');
        $this->createSetting('project_status_notifications', '1', 'notification', 'boolean');
        $this->createSetting('document_upload_notifications', '1', 'notification', 'boolean');
        $this->createSetting('client_notifications', '1', 'notification', 'boolean');
        $this->createSetting('notification_email', 'notifications@company.com', 'notification', 'string');
        $this->createSetting('email_sender_name', 'Project Management System', 'notification', 'string');

        // User Settings
        $this->createSetting('default_role', 'user', 'user', 'string');
        $this->createSetting('allow_registration', '0', 'user', 'boolean');
        $this->createSetting('account_approval', '1', 'user', 'boolean');
        $this->createSetting('password_min_length', '8', 'user', 'integer');
        $this->createSetting('password_requires_letters', '1', 'user', 'boolean');
        $this->createSetting('password_requires_numbers', '1', 'user', 'boolean');
        $this->createSetting('password_requires_symbols', '0', 'user', 'boolean');
        $this->createSetting('user_avatar_max_size', '2', 'user', 'integer');
        $this->createSetting('inactive_user_days', '90', 'user', 'integer');
    }

    /**
     * Create a setting if it doesn't exist
     */
    private function createSetting($key, $value, $group, $type)
    {
        Setting::firstOrCreate(
            ['key' => $key],
            [
                'value' => $value,
                'group' => $group,
                'type' => $type
            ]
        );
    }
}


database\seeders\UserSeeder.php:
<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use App\Models\User;
use Illuminate\Support\Facades\Hash;
use Spatie\Permission\Models\Role;
use Spatie\Permission\Models\Permission;

class UserSeeder extends Seeder
{
    public function run()
    {
        // Create Roles
        $roles = ['admin', 'manager', 'marketing', 'surveyor'];
        foreach ($roles as $role) {
            Role::firstOrCreate(['name' => $role]);
        }
        
        // Create Permissions
        $permissions = [
            // Client permissions
            'view-clients', 'create-clients', 'edit-clients', 'delete-clients',
            // Project permissions
            'view-projects', 'create-projects', 'edit-projects', 'delete-projects',
            // Survey permissions
            'view-surveys', 'create-surveys', 'edit-surveys', 'delete-surveys',
            // Pipeline permissions
            'view-pipeline', 'edit-pipeline',
            // Document permissions
            'view-documents', 'upload-documents', 'delete-documents',
            // Report permissions
            'view-reports', 'export-reports',
            // User management
            'manage-users', 'manage-roles',
            // Settings
            'manage-settings'
        ];
        
        foreach ($permissions as $permission) {
            Permission::firstOrCreate(['name' => $permission]);
        }
        
        // Assign permissions to roles
        $adminRole = Role::findByName('admin');
        $adminRole->syncPermissions(Permission::all());
        
        $managerRole = Role::findByName('manager');
        $managerRole->syncPermissions([
            'view-clients', 'view-projects', 'view-surveys',
            'view-pipeline', 'view-documents', 'view-reports',
            'export-reports'
        ]);
        
        $marketingRole = Role::findByName('marketing');
        $marketingRole->syncPermissions([
            'view-clients', 'create-clients', 'edit-clients',
            'view-projects', 'create-projects', 'edit-projects',
            'view-surveys', 'view-pipeline', 'edit-pipeline',
            'view-documents', 'upload-documents'
        ]);
        
        $surveyorRole = Role::findByName('surveyor');
        $surveyorRole->syncPermissions([
            'view-surveys', 'create-surveys', 'edit-surveys',
            'upload-documents'
        ]);
        
        // Create default users
        $users = [
            [
                'name' => 'Admin Hansen',
                'email' => 'admin@hansen.com',
                'password' => Hash::make('password123'),
                'role' => 'admin',
                'phone' => '081234567890',
                'address' => 'Jl. Sudirman No. 1, Jakarta',
                'is_active' => true
            ],
            [
                'name' => 'Manager Hansen',
                'email' => 'manager@hansen.com',
                'password' => Hash::make('password123'),
                'role' => 'manager',
                'phone' => '081234567891',
                'address' => 'Jl. Thamrin No. 2, Jakarta',
                'is_active' => true
            ],
            [
                'name' => 'Marketing Hansen',
                'email' => 'marketing@hansen.com',
                'password' => Hash::make('password123'),
                'role' => 'marketing',
                'phone' => '081234567892',
                'address' => 'Jl. Gatot Subroto No. 3, Jakarta',
                'is_active' => true
            ],
            [
                'name' => 'Surveyor Hansen',
                'email' => 'surveyor@hansen.com',
                'password' => Hash::make('password123'),
                'role' => 'surveyor',
                'phone' => '081234567893',
                'address' => 'Jl. HR Rasuna Said No. 4, Jakarta',
                'is_active' => true
            ],
            [
                'name' => 'Surveyor 2',
                'email' => 'surveyor2@hansen.com',
                'password' => Hash::make('password123'),
                'role' => 'surveyor',
                'phone' => '081234567894',
                'address' => 'Jl. Kuningan No. 5, Jakarta',
                'is_active' => true
            ]
        ];
        
        foreach ($users as $userData) {
            $role = $userData['role'];
            unset($userData['role']);
            
            $user = User::firstOrCreate(
                ['email' => $userData['email']],
                $userData
            );
            
            // Sync role (akan replace role lama jika ada)
            $user->syncRoles([$role]);
        }
        
        $this->command->info('Users seeded successfully!');
    }
}

public\css\custom.css:
/* Variables */
:root {
    --primary-color: #1a73e8;
    --secondary-color: #5f6368;
    --success-color: #1e8e3e;
    --danger-color: #d93025;
    --warning-color: #f9ab00;
    --info-color: #1967d2;
    --light-color: #f8f9fa;
    --dark-color: #202124;
    --sidebar-width: 280px;
    --navbar-height: 64px;
    --border-radius: 8px;
    --transition: all 0.3s ease;
}

/* Global Styles */
* {
    box-sizing: border-box;
}

body {
    font-family: 'Inter', sans-serif;
    font-size: 14px;
    line-height: 1.6;
    color: var(--dark-color);
    background-color: #f5f5f5;
}

/* Typography */
h1, h2, h3, h4, h5, h6 {
    font-weight: 600;
    margin-bottom: 1rem;
    color: var(--dark-color);
}

/* Navbar Styles */
.navbar {
    background-color: #fff;
    box-shadow: 0 2px 4px rgba(0,0,0,0.08);
    height: var(--navbar-height);
    z-index: 1040;
}

.navbar-brand {
    font-weight: 600;
    font-size: 1.25rem;
    color: var(--primary-color) !important;
}

.navbar .nav-link {
    color: var(--secondary-color);
    font-weight: 500;
    padding: 0.5rem 1rem;
    transition: var(--transition);
}

.navbar .nav-link:hover {
    color: var(--primary-color);
}

/* Sidebar Styles */
.sidebar {
    position: fixed;
    top: var(--navbar-height);
    bottom: 0;
    left: 0;
    z-index: 100;
    padding: 20px 0;
    overflow-x: hidden;
    overflow-y: auto;
    border-right: 1px solid #e0e0e0;
    width: var(--sidebar-width);
    transition: var(--transition);
}

.sidebar .nav-link {
    color: var(--secondary-color);
    padding: 0.75rem 1.5rem;
    margin-bottom: 0.25rem;
    border-radius: 0 25px 25px 0;
    transition: var(--transition);
    font-weight: 500;
    display: flex;
    align-items: center;
}

.sidebar .nav-link:hover {
    background-color: rgba(26, 115, 232, 0.08);
    color: var(--primary-color);
}

.sidebar .nav-link.active {
    background-color: rgba(26, 115, 232, 0.12);
    color: var(--primary-color);
    font-weight: 600;
}

.sidebar .nav-link i {
    width: 24px;
    margin-right: 12px;
    font-size: 1.1rem;
}

/* Main Content */
main {
    margin-top: var(--navbar-height);
    margin-left: var(--sidebar-width);
    min-height: calc(100vh - var(--navbar-height));
    transition: var(--transition);
}

/* Cards */
.card {
    border: none;
    border-radius: var(--border-radius);
    box-shadow: 0 1px 3px rgba(0,0,0,0.12);
    transition: var(--transition);
    background-color: #fff;
}

.card:hover {
    box-shadow: 0 4px 6px rgba(0,0,0,0.15);
}

.card-header {
    background-color: transparent;
    border-bottom: 1px solid #e0e0e0;
    padding: 1.25rem;
    font-weight: 600;
}

/* Buttons */
.btn {
    border-radius: 6px;
    font-weight: 500;
    padding: 0.5rem 1.25rem;
    transition: var(--transition);
    border: none;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
}

.btn-primary {
    background-color: var(--primary-color);
    color: white;
}

.btn-primary:hover {
    background-color: #1557b0;
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(26, 115, 232, 0.3);
}

.btn-outline-primary {
    color: var(--primary-color);
    border: 2px solid var(--primary-color);
}

.btn-outline-primary:hover {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
}

/* Forms */
.form-control, .form-select {
    border: 2px solid #e0e0e0;
    border-radius: 6px;
    padding: 0.75rem 1rem;
    transition: var(--transition);
    font-size: 14px;
}

.form-control:focus, .form-select:focus {
    border-color: var(--primary-color);
    box-shadow: 0 0 0 0.2rem rgba(26, 115, 232, 0.25);
}

.form-label {
    font-weight: 600;
    color: var(--secondary-color);
    margin-bottom: 0.5rem;
}

/* Tables */
.table {
    background-color: #fff;
}

.table thead th {
    border-bottom: 2px solid #e0e0e0;
    font-weight: 600;
    color: var(--secondary-color);
    text-transform: uppercase;
    font-size: 12px;
    letter-spacing: 0.5px;
}

.table-hover tbody tr:hover {
    background-color: #f8f9fa;
}

/* Stats Cards */
.stat-card {
    padding: 1.5rem;
    border-radius: var(--border-radius);
    background-color: #fff;
    box-shadow: 0 1px 3px rgba(0,0,0,0.12);
    transition: var(--transition);
}

.stat-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 6px rgba(0,0,0,0.15);
}

.stat-card .stat-icon {
    width: 48px;
    height: 48px;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 24px;
    margin-bottom: 1rem;
}

.stat-card .stat-value {
    font-size: 2rem;
    font-weight: 700;
    line-height: 1;
    margin-bottom: 0.5rem;
}

.stat-card .stat-label {
    color: var(--secondary-color);
    font-size: 14px;
    font-weight: 500;
}

/* Pipeline Kanban */
.kanban-board {
    display: flex;
    gap: 1rem;
    overflow-x: auto;
    padding-bottom: 1rem;
}

.kanban-column {
    min-width: 300px;
    background-color: #f5f5f5;
    border-radius: var(--border-radius);
    padding: 1rem;
}

.kanban-column-header {
    font-weight: 600;
    margin-bottom: 1rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.kanban-card {
    background-color: #fff;
    border-radius: 6px;
    padding: 1rem;
    margin-bottom: 0.75rem;
    cursor: move;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    transition: var(--transition);
}

.kanban-card:hover {
    box-shadow: 0 4px 6px rgba(0,0,0,0.15);
}

.kanban-card.dragging {
    opacity: 0.5;
}

/* Notifications */
.notification-bell {
    position: relative;
}

.notification-badge {
    position: absolute;
    top: -5px;
    right: -5px;
    background-color: var(--danger-color);
    color: white;
    border-radius: 10px;
    padding: 2px 6px;
    font-size: 11px;
    font-weight: 600;
}

/* Mobile Responsive */
@media (max-width: 768px) {
    .sidebar {
        margin-left: -var(--sidebar-width);
    }
    
    .sidebar.show {
        margin-left: 0;
    }
    
    main {
        margin-left: 0;
    }
    
    .kanban-board {
        flex-direction: column;
    }
    
    .kanban-column {
        min-width: 100%;
    }
}

/* Survey Mobile UI */
.survey-mobile-container {
    max-width: 100%;
    margin: 0 auto;
    padding: 1rem;
}

.photo-upload-area {
    border: 2px dashed var(--primary-color);
    border-radius: var(--border-radius);
    padding: 2rem;
    text-align: center;
    cursor: pointer;
    transition: var(--transition);
}

.photo-upload-area:hover {
    background-color: rgba(26, 115, 232, 0.05);
}

.photo-preview {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    gap: 0.5rem;
    margin-top: 1rem;
}

.photo-preview img {
    width: 100%;
    height: 100px;
    object-fit: cover;
    border-radius: 6px;
}

/* Loading States */
.skeleton {
    animation: skeleton-loading 1s linear infinite alternate;
}

@keyframes skeleton-loading {
    0% {
        background-color: hsl(200, 20%, 80%);
    }
    100% {
        background-color: hsl(200, 20%, 95%);
    }
}

/* Custom Scrollbar */
::-webkit-scrollbar {
    width: 8px;
    height: 8px;
}

::-webkit-scrollbar-track {
    background: #f1f1f1;
}

::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
    background: #555;
}

public\css\mobile.css:
/* Mobile Specific Styles */
.mobile-body {
    padding-top: 60px;
    padding-bottom: 70px;
    background-color: #f5f5f5;
}

.mobile-header {
    height: 60px;
    z-index: 1030;
}

.mobile-main {
    min-height: calc(100vh - 130px);
}

.mobile-bottom-nav {
    height: 60px;
    z-index: 1030;
}

.mobile-bottom-nav .nav-link {
    color: #6c757d;
    padding: 8px 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-decoration: none;
    position: relative;
}

.mobile-bottom-nav .nav-link i {
    font-size: 20px;
    margin-bottom: 4px;
}

.mobile-bottom-nav .nav-link span {
    font-size: 11px;
}

.mobile-bottom-nav .nav-link.active {
    color: var(--primary-color);
}

.mobile-bottom-nav .badge {
    position: absolute;
    top: 5px;
    right: 30%;
    font-size: 9px;
    padding: 2px 5px;
}

/* Mobile Cards */
.mobile-card {
    background: white;
    border-radius: 12px;
    padding: 16px;
    margin-bottom: 12px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.08);
}

/* Mobile Form Elements */
.mobile-form .form-control,
.mobile-form .form-select {
    font-size: 16px; /* Prevent zoom on iOS */
    padding: 12px 16px;
    border-radius: 8px;
}

.mobile-form .form-label {
    font-weight: 600;
    margin-bottom: 8px;
}

/* Photo Upload Mobile */
.photo-capture-btn {
    width: 100%;
    height: 200px;
    border: 2px dashed var(--primary-color);
    border-radius: 12px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background-color: rgba(26, 115, 232, 0.05);
    cursor: pointer;
    transition: all 0.3s ease;
}

.photo-capture-btn:active {
    transform: scale(0.98);
}

.photo-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 8px;
}

.photo-grid img {
    width: 100%;
    height: 100px;
    object-fit: cover;
    border-radius: 8px;
}

/* Offline Banner */
.offline-banner {
    background-color: #ffc107;
    color: #000;
    padding: 8px;
    text-align: center;
    font-size: 14px;
    position: fixed;
    top: 60px;
    left: 0;
    right: 0;
    z-index: 1020;
}

/* Loading States */
.mobile-skeleton {
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
    background-size: 200% 100%;
    animation: loading 1.5s infinite;
}

@keyframes loading {
    0% { background-position: 200% 0; }
    100% { background-position: -200% 0; }
}

/* Mobile Specific Utilities */
@media (max-width: 576px) {
    .hide-mobile {
        display: none !important;
    }
    
    .container-fluid {
        padding-left: 16px;
        padding-right: 16px;
    }
    
    .btn {
        padding: 12px 20px;
        font-size: 16px;
    }
    
    .modal-dialog {
        margin: 0;
        max-width: 100%;
        height: 100%;
    }
    
    .modal-content {
        height: 100%;
        border-radius: 0;
    }
}

public\storage\avatars
public\storage\documents\clients
public\storage\documents\projects
public\storage\reports
public\storage\settings
public\storage\surveys

public\index.php:
<?php

use Illuminate\Foundation\Application;
use Illuminate\Http\Request;

define('LARAVEL_START', microtime(true));

// Determine if the application is in maintenance mode...
if (file_exists($maintenance = __DIR__.'/../storage/framework/maintenance.php')) {
    require $maintenance;
}

// Register the Composer autoloader...
require __DIR__.'/../vendor/autoload.php';

// Bootstrap Laravel and handle the request...
/** @var Application $app */
$app = require_once __DIR__.'/../bootstrap/app.php';

$app->handleRequest(Request::capture());


resources\css\app.css:
@import 'tailwindcss';

@source '../../vendor/laravel/framework/src/Illuminate/Pagination/resources/views/*.blade.php';
@source '../../storage/framework/views/*.php';
@source '../**/*.blade.php';
@source '../**/*.js';

@theme {
    --font-sans: 'Instrument Sans', ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',
        'Segoe UI Symbol', 'Noto Color Emoji';
}


resources\js\app.js:
import './bootstrap';


resources\js\bootstrap.js:
import axios from 'axios';
window.axios = axios;

window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';

import Echo from 'laravel-echo';
import Pusher from 'pusher-js';

window.Pusher = Pusher;

window.Echo = new Echo({
    broadcaster: 'pusher',
    key: '851eecb2e2c0bf8ffc6e',
    cluster: 'ap1',
    forceTLS: true
});

resources\views\auth\confirm-password.blade.php:
import axios from 'axios';
window.axios = axios;

window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';

import Echo from 'laravel-echo';
import Pusher from 'pusher-js';

window.Pusher = Pusher;

window.Echo = new Echo({
    broadcaster: 'pusher',
    key: '851eecb2e2c0bf8ffc6e',
    cluster: 'ap1',
    forceTLS: true
});

resources\views\auth\forgot-password.blade.php:
<x-guest-layout>
    <div class="mb-4 text-sm text-gray-600">
        {{ __('Forgot your password? No problem. Just let us know your email address and we will email you a password reset link that will allow you to choose a new one.') }}
    </div>

    <!-- Session Status -->
    <x-auth-session-status class="mb-4" :status="session('status')" />

    <form method="POST" action="{{ route('password.email') }}">
        @csrf

        <!-- Email Address -->
        <div>
            <x-input-label for="email" :value="__('Email')" />
            <x-text-input id="email" class="block mt-1 w-full" type="email" name="email" :value="old('email')" required autofocus />
            <x-input-error :messages="$errors->get('email')" class="mt-2" />
        </div>

        <div class="flex items-center justify-end mt-4">
            <x-primary-button>
                {{ __('Email Password Reset Link') }}
            </x-primary-button>
        </div>
    </form>
</x-guest-layout>

resources\views\auth\login.blade.php:
@extends('layouts.guest')

@section('title', 'Login')

@section('content')
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-5 col-lg-4">
            <div class="text-center mb-4">
                <h3 class="text-white">Hansen CRM</h3>
                <p class="text-white-50">Silakan login untuk melanjutkan</p>
            </div>

            <div class="card">
                <div class="card-body p-4">
                    @if(session('error'))
                        <div class="alert alert-danger">
                            {{ session('error') }}
                        </div>
                    @endif

                    <form method="POST" action="{{ route('login') }}">
                        @csrf

                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <input type="email" name="email" id="email"
                                   class="form-control @error('email') is-invalid @enderror"
                                   value="{{ old('email') }}" placeholder="Enter your email"
                                   required autofocus>
                            @error('email')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>

                        <div class="mb-3">
                            <div class="d-flex align-items-center justify-content-between">
                                <label for="password" class="form-label">Password</label>
                                @if (Route::has('password.request'))
                                    <a href="{{ route('password.request') }}" class="text-muted small">Forgot Password?</a>
                                @endif
                            </div>
                            <div class="input-group">
                                <input type="password" name="password" id="password"
                                       class="form-control @error('password') is-invalid @enderror"
                                       placeholder="Enter your password" required>
                                <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                                    <i class="bi bi-eye"></i>
                                </button>
                                @error('password')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                        </div>

                        <div class="form-check mb-3">
                            <input type="checkbox" class="form-check-input" name="remember" id="remember"
                                   {{ old('remember') ? 'checked' : '' }}>
                            <label class="form-check-label" for="remember">Remember me</label>
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary w-100">
                                <i class="bi bi-box-arrow-in-right me-2"></i>Log in
                            </button>
                        </div>
                    </form>

                    <div class="mt-4 p-3 bg-light rounded">
                        <small class="d-block mb-2"><strong>Demo Accounts:</strong></small>
                        <small class="d-block">Admin: admin@hansen.com / password123</small>
                        <small class="d-block">Manager: manager@hansen.com / password123</small>
                        <small class="d-block">Marketing: marketing@hansen.com / password123</small>
                        <small class="d-block">Surveyor: surveyor@hansen.com / password123</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
    // Toggle password visibility
    document.getElementById('togglePassword').addEventListener('click', function() {
        const passwordInput = document.getElementById('password');
        const icon = this.querySelector('i');

        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            icon.classList.remove('bi-eye');
            icon.classList.add('bi-eye-slash');
        } else {
            passwordInput.type = 'password';
            icon.classList.remove('bi-eye-slash');
            icon.classList.add('bi-eye');
        }
    });
</script>
@endpush

resources\views\auth\register.blade.php:
@extends('layouts.guest')

@section('title', 'Register')

@section('content')
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-5 col-lg-4">
            <div class="text-center mb-4">
                <h3 class="text-white">Hansen CRM</h3>
                <p class="text-white-50">Buat akun baru</p>
            </div>

            <div class="card">
                <div class="card-body p-4">
                    @if(session('error'))
                        <div class="alert alert-danger">
                            {{ session('error') }}
                        </div>
                    @endif

                    <form method="POST" action="{{ route('register') }}">
                        @csrf

                        <div class="mb-3">
                            <label for="name" class="form-label">Full Name</label>
                            <input type="text" name="name" id="name"
                                   class="form-control @error('name') is-invalid @enderror"
                                   value="{{ old('name') }}" placeholder="Enter your full name"
                                   required autofocus>
                            @error('name')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>

                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <input type="email" name="email" id="email"
                                   class="form-control @error('email') is-invalid @enderror"
                                   value="{{ old('email') }}" placeholder="Enter your email"
                                   required>
                            @error('email')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>

                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <div class="input-group">
                                <input type="password" name="password" id="password"
                                       class="form-control @error('password') is-invalid @enderror"
                                       placeholder="Enter password" required>
                                <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                                    <i class="bi bi-eye"></i>
                                </button>
                                @error('password')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                            <div class="form-text">
                                Password must be at least 8 characters long.
                            </div>
                        </div>

                        <div class="mb-4">
                            <label for="password_confirmation" class="form-label">Confirm Password</label>
                            <input type="password" class="form-control"
                                   id="password_confirmation" name="password_confirmation"
                                   placeholder="Confirm password" required>
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary w-100">
                                <i class="bi bi-person-plus me-2"></i>Register
                            </button>
                        </div>
                    </form>

                    <div class="text-center mt-4">
                        <p class="mb-0">Already have an account? <a href="{{ route('login') }}">Log in</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
    // Toggle password visibility
    document.getElementById('togglePassword').addEventListener('click', function() {
        const passwordInput = document.getElementById('password');
        const icon = this.querySelector('i');

        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            icon.classList.remove('bi-eye');
            icon.classList.add('bi-eye-slash');
        } else {
            passwordInput.type = 'password';
            icon.classList.remove('bi-eye-slash');
            icon.classList.add('bi-eye');
        }
    });
</script>
@endpush

resources\views\auth\reset-password.blade.php:
<x-guest-layout>
    <form method="POST" action="{{ route('password.store') }}">
        @csrf

        <!-- Password Reset Token -->
        <input type="hidden" name="token" value="{{ $request->route('token') }}">

        <!-- Email Address -->
        <div>
            <x-input-label for="email" :value="__('Email')" />
            <x-text-input id="email" class="block mt-1 w-full" type="email" name="email" :value="old('email', $request->email)" required autofocus autocomplete="username" />
            <x-input-error :messages="$errors->get('email')" class="mt-2" />
        </div>

        <!-- Password -->
        <div class="mt-4">
            <x-input-label for="password" :value="__('Password')" />
            <x-text-input id="password" class="block mt-1 w-full" type="password" name="password" required autocomplete="new-password" />
            <x-input-error :messages="$errors->get('password')" class="mt-2" />
        </div>

        <!-- Confirm Password -->
        <div class="mt-4">
            <x-input-label for="password_confirmation" :value="__('Confirm Password')" />

            <x-text-input id="password_confirmation" class="block mt-1 w-full"
                                type="password"
                                name="password_confirmation" required autocomplete="new-password" />

            <x-input-error :messages="$errors->get('password_confirmation')" class="mt-2" />
        </div>

        <div class="flex items-center justify-end mt-4">
            <x-primary-button>
                {{ __('Reset Password') }}
            </x-primary-button>
        </div>
    </form>
</x-guest-layout>

resources\views\auth\verify-email.blade.php:
<x-guest-layout>
    <div class="mb-4 text-sm text-gray-600">
        {{ __('Thanks for signing up! Before getting started, could you verify your email address by clicking on the link we just emailed to you? If you didn\'t receive the email, we will gladly send you another.') }}
    </div>

    @if (session('status') == 'verification-link-sent')
        <div class="mb-4 font-medium text-sm text-green-600">
            {{ __('A new verification link has been sent to the email address you provided during registration.') }}
        </div>
    @endif

    <div class="mt-4 flex items-center justify-between">
        <form method="POST" action="{{ route('verification.send') }}">
            @csrf

            <div>
                <x-primary-button>
                    {{ __('Resend Verification Email') }}
                </x-primary-button>
            </div>
        </form>

        <form method="POST" action="{{ route('logout') }}">
            @csrf

            <button type="submit" class="underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                {{ __('Log Out') }}
            </button>
        </form>
    </div>
</x-guest-layout>

resources\views\clients\partials
resources\views\clients\create.blade.php:
@extends('layouts.app')

@section('title', 'Tambah Klien')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="mb-4">
        <h4 class="mb-0">Tambah Klien Baru</h4>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item"><a href="{{ route('dashboard') }}">Dashboard</a></li>
                <li class="breadcrumb-item"><a href="{{ route('clients.index') }}">Klien</a></li>
                <li class="breadcrumb-item active">Tambah Baru</li>
            </ol>
        </nav>
    </div>

    <form action="{{ route('clients.store') }}" method="POST">
        @csrf
        
        <div class="row">
            <div class="col-md-8">
                <!-- Basic Information -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h6 class="mb-0">Informasi Dasar</h6>
                    </div>
                    <div class="card-body">
                        <div class="row g-3">
                            <div class="col-md-12">
                                <label class="form-label required">Nama Klien</label>
                                <input type="text" 
                                       name="name" 
                                       class="form-control @error('name') is-invalid @enderror" 
                                       value="{{ old('name') }}"
                                       placeholder="PT. Contoh Nama Perusahaan"
                                       required>
                                @error('name')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label">Email</label>
                                <input type="email" 
                                       name="email" 
                                       class="form-control @error('email') is-invalid @enderror" 
                                       value="{{ old('email') }}"
                                       placeholder="email@perusahaan.com">
                                @error('email')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label required">Telepon</label>
                                <input type="text" 
                                       name="phone" 
                                       class="form-control @error('phone') is-invalid @enderror" 
                                       value="{{ old('phone') }}"
                                       placeholder="021-1234567"
                                       required>
                                @error('phone')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label">WhatsApp</label>
                                <div class="input-group">
                                    <span class="input-group-text">
                                        <i class="bi bi-whatsapp"></i>
                                    </span>
                                    <input type="text" 
                                           name="whatsapp" 
                                           class="form-control @error('whatsapp') is-invalid @enderror" 
                                           value="{{ old('whatsapp') }}"
                                           placeholder="08123456789">
                                </div>
                                @error('whatsapp')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label required">Person in Charge (PIC)</label>
                                <select name="pic_id" 
                                        class="form-select @error('pic_id') is-invalid @enderror" 
                                        required>
                                    <option value="">-- Pilih PIC --</option>
                                    @foreach($pics as $pic)
                                    <option value="{{ $pic->id }}" {{ old('pic_id') == $pic->id ? 'selected' : '' }}>
                                        {{ $pic->name }}
                                    </option>
                                    @endforeach
                                </select>
                                @error('pic_id')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-12">
                                <label class="form-label required">Alamat</label>
                                <textarea name="address" 
                                          class="form-control @error('address') is-invalid @enderror" 
                                          rows="3"
                                          placeholder="Alamat lengkap..."
                                          required>{{ old('address') }}</textarea>
                                @error('address')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <!-- Source Information -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h6 class="mb-0">Sumber Lead</h6>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label class="form-label required">Sumber</label>
                            <select name="source" 
                                    class="form-select @error('source') is-invalid @enderror" 
                                    required>
                                <option value="">-- Pilih Sumber --</option>
                                <option value="referral" {{ old('source') == 'referral' ? 'selected' : '' }}>Referral</option>
                                <option value="website" {{ old('source') == 'website' ? 'selected' : '' }}>Website</option>
                                <option value="walk-in" {{ old('source') == 'walk-in' ? 'selected' : '' }}>Walk In</option>
                                <option value="social-media" {{ old('source') == 'social-media' ? 'selected' : '' }}>Social Media</option>
                                <option value="other" {{ old('source') == 'other' ? 'selected' : '' }}>Lainnya</option>
                            </select>
                            @error('source')
                            <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Detail Sumber</label>
                            <input type="text" 
                                   name="source_detail" 
                                   class="form-control @error('source_detail') is-invalid @enderror" 
                                   value="{{ old('source_detail') }}"
                                   placeholder="Misal: Nama yang mereferensikan">
                            @error('source_detail')
                            <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>
                    </div>
                </div>

                <!-- Notes -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h6 class="mb-0">Catatan</h6>
                    </div>
                    <div class="card-body">
                        <textarea name="notes" 
                                  class="form-control @error('notes') is-invalid @enderror" 
                                  rows="4"
                                  placeholder="Catatan tambahan...">{{ old('notes') }}</textarea>
                        @error('notes')
                        <div class="invalid-feedback">{{ $message }}</div>
                        @enderror
                    </div>
                </div>

                <!-- Actions -->
                <div class="card">
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-save me-2"></i>Simpan Klien
                            </button>
                            <a href="{{ route('clients.index') }}" class="btn btn-outline-secondary">
                                <i class="bi bi-x-circle me-2"></i>Batal
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
@endsection

@push('styles')
<style>
.form-label.required::after {
    content: " *";
    color: #dc3545;
}
</style>
@endpush

@push('scripts')
<script>
// Auto-fill WhatsApp from phone number
document.querySelector('input[name="phone"]').addEventListener('input', function(e) {
    const phone = e.target.value;
    const whatsappInput = document.querySelector('input[name="whatsapp"]');
    
    // If WhatsApp is empty and phone starts with 0, auto-fill
    if (!whatsappInput.value && phone.startsWith('0')) {
        whatsappInput.value = phone;
    }
});

// Initialize Select2 for PIC selection
$(document).ready(function() {
    $('select[name="pic_id"]').select2({
        theme: 'bootstrap-5',
        placeholder: '-- Pilih PIC --'
    });
});
</script>
@endpush

resources\views\clients\edit.blade.php:
@extends('layouts.app')

@section('title', 'Edit Klien')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="mb-4">
        <h4 class="mb-0">Edit Klien</h4>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item"><a href="{{ route('dashboard') }}">Dashboard</a></li>
                <li class="breadcrumb-item"><a href="{{ route('clients.index') }}">Klien</a></li>
                <li class="breadcrumb-item active">Edit</li>
            </ol>
        </nav>
    </div>

    <form action="{{ route('clients.update', $client) }}" method="POST">
        @csrf
        @method('PUT')
        
        <div class="row">
            <div class="col-md-8">
                <!-- Basic Information -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h6 class="mb-0">Informasi Dasar</h6>
                    </div>
                    <div class="card-body">
                        <div class="row g-3">
                            <div class="col-md-12">
                                <label class="form-label required">Nama Klien</label>
                                <input type="text" 
                                       name="name" 
                                       class="form-control @error('name') is-invalid @enderror" 
                                       value="{{ old('name', $client->name) }}"
                                       required>
                                @error('name')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label">Email</label>
                                <input type="email" 
                                       name="email" 
                                       class="form-control @error('email') is-invalid @enderror" 
                                       value="{{ old('email', $client->email) }}">
                                @error('email')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label required">Telepon</label>
                                <input type="text" 
                                       name="phone" 
                                       class="form-control @error('phone') is-invalid @enderror" 
                                       value="{{ old('phone', $client->phone) }}"
                                       required>
                                @error('phone')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label">WhatsApp</label>
                                <div class="input-group">
                                    <span class="input-group-text">
                                        <i class="bi bi-whatsapp"></i>
                                    </span>
                                    <input type="text" 
                                           name="whatsapp" 
                                           class="form-control @error('whatsapp') is-invalid @enderror" 
                                           value="{{ old('whatsapp', $client->whatsapp) }}">
                                </div>
                                @error('whatsapp')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label required">Status</label>
                                <select name="status" 
                                        class="form-select @error('status') is-invalid @enderror" 
                                        required>
                                    <option value="prospek" {{ old('status', $client->status) == 'prospek' ? 'selected' : '' }}>Prospek</option>
                                    <option value="aktif" {{ old('status', $client->status) == 'aktif' ? 'selected' : '' }}>Aktif</option>
                                    <option value="selesai" {{ old('status', $client->status) == 'selesai' ? 'selected' : '' }}>Selesai</option>
                                </select>
                                @error('status')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label required">Person in Charge (PIC)</label>
                                <select name="pic_id" 
                                        class="form-select @error('pic_id') is-invalid @enderror" 
                                        required
                                        {{ Auth::user()->hasRole('marketing') && !Auth::user()->hasRole('admin') ? 'disabled' : '' }}>
                                    @foreach($pics as $pic)
                                    <option value="{{ $pic->id }}" {{ old('pic_id', $client->pic_id) == $pic->id ? 'selected' : '' }}>
                                        {{ $pic->name }}
                                    </option>
                                    @endforeach
                                </select>
                                @if(Auth::user()->hasRole('marketing') && !Auth::user()->hasRole('admin'))
                                <input type="hidden" name="pic_id" value="{{ $client->pic_id }}">
                                <small class="text-muted">PIC tidak dapat diubah oleh Marketing</small>
                                @endif
                                @error('pic_id')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-12">
                                <label class="form-label required">Alamat</label>
                                <textarea name="address" 
                                          class="form-control @error('address') is-invalid @enderror" 
                                          rows="3"
                                          required>{{ old('address', $client->address) }}</textarea>
                                @error('address')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <!-- Client Info -->
                <div class="card mb-4 border-primary">
                    <div class="card-body">
                        <h6 class="text-primary mb-3">Informasi Klien</h6>
                        <dl class="row mb-0">
                            <dt class="col-sm-5">Dibuat:</dt>
                            <dd class="col-sm-7">{{ $client->created_at->format('d M Y') }}</dd>
                            
                            <dt class="col-sm-5">Terakhir Update:</dt>
                            <dd class="col-sm-7">{{ $client->updated_at->format('d M Y H:i') }}</dd>
                            
                            <dt class="col-sm-5">Total Project:</dt>
                            <dd class="col-sm-7">
                                <span class="badge bg-primary">{{ $client->projects_count ?? 0 }}</span>
                            </dd>
                        </dl>
                    </div>
                </div>

                <!-- Source Information -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h6 class="mb-0">Sumber Lead</h6>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label class="form-label required">Sumber</label>
                            <select name="source" 
                                    class="form-select @error('source') is-invalid @enderror" 
                                    required>
                                <option value="referral" {{ old('source', $client->source) == 'referral' ? 'selected' : '' }}>Referral</option>
                                <option value="website" {{ old('source', $client->source) == 'website' ? 'selected' : '' }}>Website</option>
                                <option value="walk-in" {{ old('source', $client->source) == 'walk-in' ? 'selected' : '' }}>Walk In</option>
                                <option value="social-media" {{ old('source', $client->source) == 'social-media' ? 'selected' : '' }}>Social Media</option>
                                <option value="other" {{ old('source', $client->source) == 'other' ? 'selected' : '' }}>Lainnya</option>
                            </select>
                            @error('source')
                            <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Detail Sumber</label>
                            <input type="text" 
                                   name="source_detail" 
                                   class="form-control @error('source_detail') is-invalid @enderror" 
                                   value="{{ old('source_detail', $client->source_detail) }}">
                            @error('source_detail')
                            <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>
                    </div>
                </div>

                <!-- Notes -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h6 class="mb-0">Catatan</h6>
                    </div>
                    <div class="card-body">
                        <textarea name="notes" 
                                  class="form-control @error('notes') is-invalid @enderror" 
                                  rows="4">{{ old('notes', $client->notes) }}</textarea>
                        @error('notes')
                        <div class="invalid-feedback">{{ $message }}</div>
                        @enderror
                    </div>
                </div>

                <!-- Actions -->
                <div class="card">
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-save me-2"></i>Update Klien
                            </button>
                            <a href="{{ route('clients.show', $client) }}" class="btn btn-outline-secondary">
                                <i class="bi bi-x-circle me-2"></i>Batal
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
@endsection

@push('styles')
<style>
.form-label.required::after {
    content: " *";
    color: #dc3545;
}
</style>
@endpush

resources\views\clients\index.blade.php:
@extends('layouts.app')

@section('title', 'Data Klien')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">Data Klien</h4>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item"><a href="{{ route('dashboard') }}">Dashboard</a></li>
                    <li class="breadcrumb-item active">Klien</li>
                </ol>
            </nav>
        </div>
        <div>
            @can('create-clients')
            <a href="{{ route('clients.create') }}" class="btn btn-primary">
                <i class="bi bi-plus-circle me-2"></i>Tambah Klien
            </a>
            @endcan
        </div>
    </div>

    <!-- Filters -->
    <div class="card mb-3">
        <div class="card-body">
            <form method="GET" action="{{ route('clients.index') }}" class="row g-3">
                <div class="col-md-4">
                    <input type="text" 
                           name="search" 
                           class="form-control" 
                           placeholder="Cari nama, email, atau telepon..."
                           value="{{ request('search') }}">
                </div>
                <div class="col-md-3">
                    <select name="status" class="form-select">
                        <option value="">Semua Status</option>
                        <option value="prospek" {{ request('status') == 'prospek' ? 'selected' : '' }}>Prospek</option>
                        <option value="aktif" {{ request('status') == 'aktif' ? 'selected' : '' }}>Aktif</option>
                        <option value="selesai" {{ request('status') == 'selesai' ? 'selected' : '' }}>Selesai</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-outline-primary w-100">
                        <i class="bi bi-search me-2"></i>Filter
                    </button>
                </div>
                @if(request('search') || request('status'))
                <div class="col-md-2">
                    <a href="{{ route('clients.index') }}" class="btn btn-outline-secondary w-100">
                        <i class="bi bi-x-circle me-2"></i>Reset
                    </a>
                </div>
                @endif
            </form>
        </div>
    </div>

    <!-- Clients Table -->
    <div class="card">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th width="5%">#</th>
                            <th>Nama Klien</th>
                            <th>Kontak</th>
                            <th>PIC</th>
                            <th>Status</th>
                            <th>Projects</th>
                            <th>Sumber</th>
                            <th width="15%">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @forelse($clients as $client)
                        <tr>
                            <td>{{ $loop->iteration + ($clients->currentPage() - 1) * $clients->perPage() }}</td>
                            <td>
                                <div class="fw-semibold">{{ $client->name }}</div>
                                <small class="text-muted">{{ $client->email }}</small>
                            </td>
                            <td>
                                <div>{{ $client->phone }}</div>
                                @if($client->whatsapp)
                                <small class="text-success">
                                    <i class="bi bi-whatsapp"></i> {{ $client->whatsapp }}
                                </small>
                                @endif
                            </td>
                            <td>{{ $client->pic->name }}</td>
                            <td>
                                <span class="badge bg-{{ $client->status_badge }}">
                                    {{ ucfirst($client->status) }}
                                </span>
                            </td>
                            <td>
                                <span class="badge bg-secondary">{{ $client->projects_count ?? 0 }}</span>
                            </td>
                            <td>{{ ucfirst($client->source) }}</td>
                            <td>
                                <div class="btn-group" role="group">
                                    <a href="{{ route('clients.show', $client) }}" 
                                       class="btn btn-sm btn-outline-primary"
                                       data-bs-toggle="tooltip"
                                       title="View">
                                        <i class="bi bi-eye"></i>
                                    </a>
                                    @can('edit-clients')
                                    <a href="{{ route('clients.edit', $client) }}" 
                                       class="btn btn-sm btn-outline-warning"
                                       data-bs-toggle="tooltip"
                                       title="Edit">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                    @endcan
                                    @can('delete-clients')
                                    <form action="{{ route('clients.destroy', $client) }}" 
                                          method="POST" 
                                          class="d-inline"
                                          onsubmit="return confirm('Yakin ingin menghapus client ini?')">
                                        @csrf
                                        @method('DELETE')
                                        <button type="submit" 
                                                class="btn btn-sm btn-outline-danger"
                                                data-bs-toggle="tooltip"
                                                title="Delete">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </form>
                                    @endcan
                                </div>
                            </td>
                        </tr>
                        @empty
                        <tr>
                            <td colspan="8" class="text-center py-4 text-muted">
                                <i class="bi bi-inbox fs-1 d-block mb-2"></i>
                                Belum ada data klien
                            </td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
        </div>
        
        @if($clients->hasPages())
        <div class="card-footer">
            {{ $clients->links() }}
        </div>
        @endif
    </div>
</div>
@endsection

@push('scripts')
<script>
// Initialize tooltips
var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
    return new bootstrap.Tooltip(tooltipTriggerEl)
});
</script>
@endpush

resources\views\clients\show.blade.php:
@extends('layouts.app')

@section('title', 'Detail Klien')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">Detail Klien</h4>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item"><a href="{{ route('dashboard') }}">Dashboard</a></li>
                    <li class="breadcrumb-item"><a href="{{ route('clients.index') }}">Klien</a></li>
                    <li class="breadcrumb-item active">{{ $client->name }}</li>
                </ol>
            </nav>
        </div>
        <div>
            @can('edit-clients')
            <a href="{{ route('clients.edit', $client) }}" class="btn btn-warning">
                <i class="bi bi-pencil me-2"></i>Edit
            </a>
            @endcan
            <a href="{{ route('projects.create', ['client_id' => $client->id]) }}" class="btn btn-primary">
                <i class="bi bi-plus-circle me-2"></i>Tambah Project
            </a>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <!-- Client Information Card -->
            <div class="card mb-4">
                <div class="card-body">
                    <div class="text-center mb-4">
                        <div class="avatar-circle mx-auto mb-3">
                            {{ strtoupper(substr($client->name, 0, 2)) }}
                        </div>
                        <h5 class="mb-1">{{ $client->name }}</h5>
                        <span class="badge bg-{{ $client->status_badge }}">
                            {{ ucfirst($client->status) }}
                        </span>
                    </div>

                    <dl class="row">
                        <dt class="col-sm-4">Email:</dt>
                        <dd class="col-sm-8">
                            @if($client->email)
                            <a href="mailto:{{ $client->email }}">{{ $client->email }}</a>
                            @else
                            <span class="text-muted">-</span>
                            @endif
                        </dd>

                        <dt class="col-sm-4">Telepon:</dt>
                        <dd class="col-sm-8">
                            <a href="tel:{{ $client->phone }}">{{ $client->phone }}</a>
                        </dd>

                        <dt class="col-sm-4">WhatsApp:</dt>
                        <dd class="col-sm-8">
                            @if($client->whatsapp)
                            <a href="https://wa.me/{{ preg_replace('/[^0-9]/', '', $client->whatsapp) }}" 
                               target="_blank" 
                               class="text-success">
                                <i class="bi bi-whatsapp"></i> {{ $client->whatsapp }}
                            </a>
                            @else
                            <span class="text-muted">-</span>
                            @endif
                        </dd>

                        <dt class="col-sm-4">PIC:</dt>
                        <dd class="col-sm-8">{{ $client->pic->name }}</dd>

                        <dt class="col-sm-4">Sumber:</dt>
                        <dd class="col-sm-8">
                            {{ ucfirst($client->source) }}
                            @if($client->source_detail)
                            <br><small class="text-muted">{{ $client->source_detail }}</small>
                            @endif
                        </dd>

                        <dt class="col-sm-4">Alamat:</dt>
                        <dd class="col-sm-8">{{ $client->address }}</dd>

                        <dt class="col-sm-4">Bergabung:</dt>
                        <dd class="col-sm-8">{{ $client->created_at->format('d M Y') }}</dd>
                    </dl>

                    @if($client->notes)
                    <hr>
                    <h6>Catatan:</h6>
                    <p class="text-muted mb-0">{{ $client->notes }}</p>
                    @endif
                </div>
            </div>

            <!-- Quick Stats -->
            <div class="card">
                <div class="card-body">
                    <h6 class="mb-3">Statistik</h6>
                    <div class="row text-center">
                        <div class="col-6 border-end">
                            <h4 class="mb-0">{{ $client->projects->count() }}</h4>
                            <small class="text-muted">Total Project</small>
                        </div>
                        <div class="col-6">
                            <h4 class="mb-0">{{ $client->projects->where('status', 'eksekusi')->count() }}</h4>
                            <small class="text-muted">Project Aktif</small>
                        </div>
                    </div>
                    <hr>
                    <div class="row text-center">
                        <div class="col-12">
                            <h5 class="mb-0">Rp {{ number_format($client->projects->sum('deal_value'), 0, ',', '.') }}</h5>
                            <small class="text-muted">Total Nilai Project</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-8">
            <!-- Projects Tab -->
            <div class="card">
                <div class="card-header">
                    <ul class="nav nav-tabs card-header-tabs" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" data-bs-toggle="tab" href="#projects">
                                <i class="bi bi-building me-2"></i>Projects ({{ $client->projects->count() }})
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-bs-toggle="tab" href="#timeline">
                                <i class="bi bi-clock-history me-2"></i>Timeline
                            </a>
                        </li>
                    </ul>
                </div>
                <div class="card-body">
                    <div class="tab-content">
                        <!-- Projects Tab -->
                        <div class="tab-pane fade show active" id="projects">
                            @if($client->projects->count() > 0)
                            <div class="table-responsive">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>Kode</th>
                                            <th>Nama Project</th>
                                            <th>Jenis</th>
                                            <th>Status</th>
                                            <th>Nilai</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach($client->projects as $project)
                                        <tr>
                                            <td>{{ $project->code }}</td>
                                            <td>
                                                <div class="fw-semibold">{{ $project->name }}</div>
                                                <small class="text-muted">{{ $project->location }}</small>
                                            </td>
                                            <td>{{ ucfirst($project->type) }}</td>
                                            <td>
                                                <span class="badge bg-{{ $project->status_badge }}">
                                                    {{ ucfirst($project->status) }}
                                                </span>
                                            </td>
                                            <td>
                                                @if($project->deal_value)
                                                Rp {{ number_format($project->deal_value, 0, ',', '.') }}
                                                @else
                                                <span class="text-muted">TBD</span>
                                                @endif
                                            </td>
                                            <td>
                                                <a href="{{ route('projects.show', $project) }}" 
                                                   class="btn btn-sm btn-outline-primary">
                                                    <i class="bi bi-eye"></i>
                                                </a>
                                            </td>
                                        </tr>
                                        @endforeach
                                    </tbody>
                                </table>
                            </div>
                            @else
                            <div class="text-center py-4">
                                <i class="bi bi-building fs-1 text-muted d-block mb-2"></i>
                                <p class="text-muted">Belum ada project untuk klien ini</p>
                                <a href="{{ route('projects.create', ['client_id' => $client->id]) }}" 
                                   class="btn btn-primary btn-sm">
                                    <i class="bi bi-plus-circle me-2"></i>Tambah Project
                                </a>
                            </div>
                            @endif
                        </div>

                        <!-- Timeline Tab -->
                        <div class="tab-pane fade" id="timeline">
                            <div class="activity-timeline">
                                @forelse($client->projects->sortByDesc('created_at')->take(10) as $project)
                                <div class="activity-item">
                                    <div class="activity-icon bg-primary">
                                        <i class="bi bi-building text-white"></i>
                                    </div>
                                    <div class="activity-content">
                                        <div class="fw-semibold">Project {{ $project->name }} dibuat</div>
                                        <p class="text-muted mb-1">Status: {{ ucfirst($project->status) }}</p>
                                        <small class="text-muted">{{ $project->created_at->diffForHumans() }}</small>
                                    </div>
                                </div>
                                @empty
                                <p class="text-muted text-center py-4">Belum ada aktivitas</p>
                                @endforelse

                                <div class="activity-item">
                                    <div class="activity-icon bg-success">
                                        <i class="bi bi-person-plus text-white"></i>
                                    </div>
                                    <div class="activity-content">
                                        <div class="fw-semibold">Klien terdaftar</div>
                                        <p class="text-muted mb-1">PIC: {{ $client->pic->name }}</p>
                                        <small class="text-muted">{{ $client->created_at->format('d M Y H:i') }}</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

@push('styles')
<style>
.avatar-circle {
    width: 80px;
    height: 80px;
    background-color: var(--primary-color);
    color: white;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 24px;
    font-weight: 600;
}

.activity-timeline {
    position: relative;
    padding-left: 40px;
}

.activity-timeline::before {
    content: '';
    position: absolute;
    left: 15px;
    top: 0;
    bottom: 0;
    width: 2px;
    background: #e0e0e0;
}

.activity-item {
    position: relative;
    margin-bottom: 2rem;
}

.activity-item:last-child {
    margin-bottom: 0;
}

.activity-icon {
    position: absolute;
    left: -25px;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 14px;
}
</style>
@endpush

resources\views\components\application-logo.blade.php:
<svg viewBox="0 0 316 316" xmlns="http://www.w3.org/2000/svg" {{ $attributes }}>
    <path d="M305.8 81.125C305.77 80.995 305.69 80.885 305.65 80.755C305.56 80.525 305.49 80.285 305.37 80.075C305.29 79.935 305.17 79.815 305.07 79.685C304.94 79.515 304.83 79.325 304.68 79.175C304.55 79.045 304.39 78.955 304.25 78.845C304.09 78.715 303.95 78.575 303.77 78.475L251.32 48.275C249.97 47.495 248.31 47.495 246.96 48.275L194.51 78.475C194.33 78.575 194.19 78.725 194.03 78.845C193.89 78.955 193.73 79.045 193.6 79.175C193.45 79.325 193.34 79.515 193.21 79.685C193.11 79.815 192.99 79.935 192.91 80.075C192.79 80.285 192.71 80.525 192.63 80.755C192.58 80.875 192.51 80.995 192.48 81.125C192.38 81.495 192.33 81.875 192.33 82.265V139.625L148.62 164.795V52.575C148.62 52.185 148.57 51.805 148.47 51.435C148.44 51.305 148.36 51.195 148.32 51.065C148.23 50.835 148.16 50.595 148.04 50.385C147.96 50.245 147.84 50.125 147.74 49.995C147.61 49.825 147.5 49.635 147.35 49.485C147.22 49.355 147.06 49.265 146.92 49.155C146.76 49.025 146.62 48.885 146.44 48.785L93.99 18.585C92.64 17.805 90.98 17.805 89.63 18.585L37.18 48.785C37 48.885 36.86 49.035 36.7 49.155C36.56 49.265 36.4 49.355 36.27 49.485C36.12 49.635 36.01 49.825 35.88 49.995C35.78 50.125 35.66 50.245 35.58 50.385C35.46 50.595 35.38 50.835 35.3 51.065C35.25 51.185 35.18 51.305 35.15 51.435C35.05 51.805 35 52.185 35 52.575V232.235C35 233.795 35.84 235.245 37.19 236.025L142.1 296.425C142.33 296.555 142.58 296.635 142.82 296.725C142.93 296.765 143.04 296.835 143.16 296.865C143.53 296.965 143.9 297.015 144.28 297.015C144.66 297.015 145.03 296.965 145.4 296.865C145.5 296.835 145.59 296.775 145.69 296.745C145.95 296.655 146.21 296.565 146.45 296.435L251.36 236.035C252.72 235.255 253.55 233.815 253.55 232.245V174.885L303.81 145.945C305.17 145.165 306 143.725 306 142.155V82.265C305.95 81.875 305.89 81.495 305.8 81.125ZM144.2 227.205L100.57 202.515L146.39 176.135L196.66 147.195L240.33 172.335L208.29 190.625L144.2 227.205ZM244.75 114.995V164.795L226.39 154.225L201.03 139.625V89.825L219.39 100.395L244.75 114.995ZM249.12 57.105L292.81 82.265L249.12 107.425L205.43 82.265L249.12 57.105ZM114.49 184.425L96.13 194.995V85.305L121.49 70.705L139.85 60.135V169.815L114.49 184.425ZM91.76 27.425L135.45 52.585L91.76 77.745L48.07 52.585L91.76 27.425ZM43.67 60.135L62.03 70.705L87.39 85.305V202.545V202.555V202.565C87.39 202.735 87.44 202.895 87.46 203.055C87.49 203.265 87.49 203.485 87.55 203.695V203.705C87.6 203.875 87.69 204.035 87.76 204.195C87.84 204.375 87.89 204.575 87.99 204.745C87.99 204.745 87.99 204.755 88 204.755C88.09 204.905 88.22 205.035 88.33 205.175C88.45 205.335 88.55 205.495 88.69 205.635L88.7 205.645C88.82 205.765 88.98 205.855 89.12 205.965C89.28 206.085 89.42 206.225 89.59 206.325C89.6 206.325 89.6 206.325 89.61 206.335C89.62 206.335 89.62 206.345 89.63 206.345L139.87 234.775V285.065L43.67 229.705V60.135ZM244.75 229.705L148.58 285.075V234.775L219.8 194.115L244.75 179.875V229.705ZM297.2 139.625L253.49 164.795V114.995L278.85 100.395L297.21 89.825V139.625H297.2Z"/>
</svg>

resources\views\components\auth-session-status.blade.php:
@props(['status'])

@if ($status)
    <div {{ $attributes->merge(['class' => 'font-medium text-sm text-green-600']) }}>
        {{ $status }}
    </div>
@endif

resources\views\components\breadcrumb.blade.php:
@if(isset($breadcrumbs) && count($breadcrumbs) > 0)
<nav aria-label="breadcrumb" class="mb-3">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="{{ route('dashboard') }}">
                <i class="bi bi-house-door"></i>
            </a>
        </li>
        @foreach($breadcrumbs as $breadcrumb)
            @if($loop->last)
                <li class="breadcrumb-item active" aria-current="page">
                    {{ $breadcrumb['label'] }}
                </li>
            @else
                <li class="breadcrumb-item">
                    <a href="{{ $breadcrumb['url'] }}">{{ $breadcrumb['label'] }}</a>
                </li>
            @endif
        @endforeach
    </ol>
</nav>
@endif

resources\views\components\danger-button.blade.php:
<button {{ $attributes->merge(['type' => 'submit', 'class' => 'inline-flex items-center px-4 py-2 bg-red-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-red-500 active:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 transition ease-in-out duration-150']) }}>
    {{ $slot }}
</button>

resources\views\components\dropdown-link.blade.php:
<a {{ $attributes->merge(['class' => 'block w-full px-4 py-2 text-start text-sm leading-5 text-gray-700 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition duration-150 ease-in-out']) }}>{{ $slot }}</a>

resources\views\components\dropdown.blade.php:
@props(['align' => 'right', 'width' => '48', 'contentClasses' => 'py-1 bg-white'])

@php
$alignmentClasses = match ($align) {
    'left' => 'ltr:origin-top-left rtl:origin-top-right start-0',
    'top' => 'origin-top',
    default => 'ltr:origin-top-right rtl:origin-top-left end-0',
};

$width = match ($width) {
    '48' => 'w-48',
    default => $width,
};
@endphp

<div class="relative" x-data="{ open: false }" @click.outside="open = false" @close.stop="open = false">
    <div @click="open = ! open">
        {{ $trigger }}
    </div>

    <div x-show="open"
            x-transition:enter="transition ease-out duration-200"
            x-transition:enter-start="opacity-0 scale-95"
            x-transition:enter-end="opacity-100 scale-100"
            x-transition:leave="transition ease-in duration-75"
            x-transition:leave-start="opacity-100 scale-100"
            x-transition:leave-end="opacity-0 scale-95"
            class="absolute z-50 mt-2 {{ $width }} rounded-md shadow-lg {{ $alignmentClasses }}"
            style="display: none;"
            @click="open = false">
        <div class="rounded-md ring-1 ring-black ring-opacity-5 {{ $contentClasses }}">
            {{ $content }}
        </div>
    </div>
</div>

resources\views\components\input-error.blade.php:
@props(['messages'])

@if ($messages)
    <ul {{ $attributes->merge(['class' => 'text-sm text-red-600 space-y-1']) }}>
        @foreach ((array) $messages as $message)
            <li>{{ $message }}</li>
        @endforeach
    </ul>
@endif

resources\views\components\input-label.blade.php:
@props(['value'])

<label {{ $attributes->merge(['class' => 'block font-medium text-sm text-gray-700']) }}>
    {{ $value ?? $slot }}
</label>

resources\views\components\modal.blade.php:
@props([
    'name',
    'show' => false,
    'maxWidth' => '2xl'
])

@php
$maxWidth = [
    'sm' => 'sm:max-w-sm',
    'md' => 'sm:max-w-md',
    'lg' => 'sm:max-w-lg',
    'xl' => 'sm:max-w-xl',
    '2xl' => 'sm:max-w-2xl',
][$maxWidth];
@endphp

<div
    x-data="{
        show: @js($show),
        focusables() {
            // All focusable element types...
            let selector = 'a, button, input:not([type=\'hidden\']), textarea, select, details, [tabindex]:not([tabindex=\'-1\'])'
            return [...$el.querySelectorAll(selector)]
                // All non-disabled elements...
                .filter(el => ! el.hasAttribute('disabled'))
        },
        firstFocusable() { return this.focusables()[0] },
        lastFocusable() { return this.focusables().slice(-1)[0] },
        nextFocusable() { return this.focusables()[this.nextFocusableIndex()] || this.firstFocusable() },
        prevFocusable() { return this.focusables()[this.prevFocusableIndex()] || this.lastFocusable() },
        nextFocusableIndex() { return (this.focusables().indexOf(document.activeElement) + 1) % (this.focusables().length + 1) },
        prevFocusableIndex() { return Math.max(0, this.focusables().indexOf(document.activeElement)) -1 },
    }"
    x-init="$watch('show', value => {
        if (value) {
            document.body.classList.add('overflow-y-hidden');
            {{ $attributes->has('focusable') ? 'setTimeout(() => firstFocusable().focus(), 100)' : '' }}
        } else {
            document.body.classList.remove('overflow-y-hidden');
        }
    })"
    x-on:open-modal.window="$event.detail == '{{ $name }}' ? show = true : null"
    x-on:close-modal.window="$event.detail == '{{ $name }}' ? show = false : null"
    x-on:close.stop="show = false"
    x-on:keydown.escape.window="show = false"
    x-on:keydown.tab.prevent="$event.shiftKey || nextFocusable().focus()"
    x-on:keydown.shift.tab.prevent="prevFocusable().focus()"
    x-show="show"
    class="fixed inset-0 overflow-y-auto px-4 py-6 sm:px-0 z-50"
    style="display: {{ $show ? 'block' : 'none' }};"
>
    <div
        x-show="show"
        class="fixed inset-0 transform transition-all"
        x-on:click="show = false"
        x-transition:enter="ease-out duration-300"
        x-transition:enter-start="opacity-0"
        x-transition:enter-end="opacity-100"
        x-transition:leave="ease-in duration-200"
        x-transition:leave-start="opacity-100"
        x-transition:leave-end="opacity-0"
    >
        <div class="absolute inset-0 bg-gray-500 opacity-75"></div>
    </div>

    <div
        x-show="show"
        class="mb-6 bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:w-full {{ $maxWidth }} sm:mx-auto"
        x-transition:enter="ease-out duration-300"
        x-transition:enter-start="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
        x-transition:enter-end="opacity-100 translate-y-0 sm:scale-100"
        x-transition:leave="ease-in duration-200"
        x-transition:leave-start="opacity-100 translate-y-0 sm:scale-100"
        x-transition:leave-end="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
    >
        {{ $slot }}
    </div>
</div>

resources\views\components\nav-link.blade.php:
@props(['active'])

@php
$classes = ($active ?? false)
            ? 'inline-flex items-center px-1 pt-1 border-b-2 border-indigo-400 text-sm font-medium leading-5 text-gray-900 focus:outline-none focus:border-indigo-700 transition duration-150 ease-in-out'
            : 'inline-flex items-center px-1 pt-1 border-b-2 border-transparent text-sm font-medium leading-5 text-gray-500 hover:text-gray-700 hover:border-gray-300 focus:outline-none focus:text-gray-700 focus:border-gray-300 transition duration-150 ease-in-out';
@endphp

<a {{ $attributes->merge(['class' => $classes]) }}>
    {{ $slot }}
</a>

resources\views\components\navbar.blade.php:
<nav class="navbar navbar-expand-lg navbar-light fixed-top">
    <div class="container-fluid">
        <!-- Logo & Toggle -->
        <div class="d-flex align-items-center">
            <button class="navbar-toggler border-0 me-3" type="button" id="sidebarToggle">
                <i class="bi bi-list fs-4"></i>
            </button>
            <a class="navbar-brand" href="{{ route('dashboard') }}">
                <img src="{{ asset('images/logo.png') }}" alt="Hansen CRM" height="32" class="me-2">
                Hansen CRM
            </a>
        </div>
        
        <!-- Search Bar (Desktop) -->
        <div class="d-none d-md-flex flex-grow-1 mx-4">
            <div class="input-group">
                <span class="input-group-text bg-white border-end-0">
                    <i class="bi bi-search text-muted"></i>
                </span>
                <input type="text" class="form-control border-start-0" placeholder="Cari klien, proyek, atau dokumen...">
            </div>
        </div>
        
        <!-- Right Menu -->
        <div class="d-flex align-items-center">
            <!-- Notifications -->
            <div class="dropdown me-3">
                <button class="btn btn-link text-dark position-relative p-2" data-bs-toggle="dropdown">
                    <i class="bi bi-bell fs-5"></i>
                    <span class="notification-badge">3</span>
                </button>
                <div class="dropdown-menu dropdown-menu-end shadow" style="width: 350px;">
                    <div class="dropdown-header d-flex justify-content-between align-items-center">
                        <h6 class="mb-0">Notifikasi</h6>
                        <a href="#" class="text-primary small">Tandai Semua Dibaca</a>
                    </div>
                    <div class="dropdown-divider"></div>
                    <a class="dropdown-item py-3" href="#">
                        <div class="d-flex align-items-start">
                            <div class="flex-shrink-0">
                                <div class="rounded-circle bg-primary bg-opacity-10 p-2">
                                    <i class="bi bi-clipboard-check text-primary"></i>
                                </div>
                            </div>
                            <div class="flex-grow-1 ms-3">
                                <p class="mb-1">Survey baru ditugaskan untuk Anda</p>
                                <small class="text-muted">PT. Maju Jaya - 5 menit lalu</small>
                            </div>
                        </div>
                    </a>
                    <a class="dropdown-item py-3" href="#">
                        <div class="d-flex align-items-start">
                            <div class="flex-shrink-0">
                                <div class="rounded-circle bg-warning bg-opacity-10 p-2">
                                    <i class="bi bi-clock-history text-warning"></i>
                                </div>
                            </div>
                            <div class="flex-grow-1 ms-3">
                                <p class="mb-1">Reminder: Follow up penawaran</p>
                                <small class="text-muted">CV. Berkah Abadi - 1 jam lalu</small>
                            </div>
                        </div>
                    </a>
                    <div class="dropdown-divider"></div>
                    <a class="dropdown-item text-center py-2" href="{{ route('notifications.index') }}">
                        Lihat Semua Notifikasi
                    </a>
                </div>
            </div>
            
            <!-- User Menu -->
            <div class="dropdown">
                <button class="btn btn-link text-dark d-flex align-items-center p-2" data-bs-toggle="dropdown">
                    <img src="https://ui-avatars.com/api/?name={{ Auth::user()->name }}" 
                         alt="Profile" 
                         class="rounded-circle me-2" 
                         width="32" 
                         height="32">
                    <span class="d-none d-md-inline">{{ Auth::user()->name }}</span>
                    <i class="bi bi-chevron-down ms-2 small"></i>
                </button>
                <div class="dropdown-menu dropdown-menu-end shadow">
                    <div class="dropdown-header">
                        <div class="fw-bold">{{ Auth::user()->name }}</div>
                        <div class="small text-muted">{{ Auth::user()->email }}</div>
                        <div class="badge bg-primary mt-1">{{ ucfirst(Auth::user()->role) }}</div>
                    </div>
                    <div class="dropdown-divider"></div>
                    <a class="dropdown-item" href="{{ route('profile.edit') }}">
                        <i class="bi bi-person me-2"></i> Profil Saya
                    </a>
                    <a class="dropdown-item" href="{{ route('settings.index') }}">
                        <i class="bi bi-gear me-2"></i> Pengaturan
                    </a>
                    <div class="dropdown-divider"></div>
                    <form method="POST" action="{{ route('logout') }}">
                        @csrf
                        <button type="submit" class="dropdown-item text-danger">
                            <i class="bi bi-box-arrow-right me-2"></i> Logout
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</nav>

resources\views\components\primary-button.blade.php:
<button {{ $attributes->merge(['type' => 'submit', 'class' => 'inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 focus:bg-gray-700 active:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 transition ease-in-out duration-150']) }}>
    {{ $slot }}
</button>

resources\views\components\responsive-nav-link.blade.php:
@props(['active'])

@php
$classes = ($active ?? false)
            ? 'block w-full ps-3 pe-4 py-2 border-l-4 border-indigo-400 text-start text-base font-medium text-indigo-700 bg-indigo-50 focus:outline-none focus:text-indigo-800 focus:bg-indigo-100 focus:border-indigo-700 transition duration-150 ease-in-out'
            : 'block w-full ps-3 pe-4 py-2 border-l-4 border-transparent text-start text-base font-medium text-gray-600 hover:text-gray-800 hover:bg-gray-50 hover:border-gray-300 focus:outline-none focus:text-gray-800 focus:bg-gray-50 focus:border-gray-300 transition duration-150 ease-in-out';
@endphp

<a {{ $attributes->merge(['class' => $classes]) }}>
    {{ $slot }}
</a>

resources\views\components\secondary-button.blade.php:
<button {{ $attributes->merge(['type' => 'button', 'class' => 'inline-flex items-center px-4 py-2 bg-white border border-gray-300 rounded-md font-semibold text-xs text-gray-700 uppercase tracking-widest shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 disabled:opacity-25 transition ease-in-out duration-150']) }}>
    {{ $slot }}
</button>

resources\views\components\sidebar.blade.php:
<div class="position-sticky pt-3">
    <ul class="nav flex-column">
        <!-- Dashboard -->
        <li class="nav-item">
            <a class="nav-link {{ request()->routeIs('dashboard') ? 'active' : '' }}"
               href="{{ route('dashboard') }}">
                <i class="bi bi-speedometer2"></i>
                <span>Dashboard</span>
            </a>
        </li>

        @php
            // Get user role using Spatie Permission
            $userRole = Auth::user()->getRoleNames()->first() ?? '';
        @endphp

        @if(in_array($userRole, ['admin', 'manager', 'marketing']))
        <!-- Clients -->
        <li class="nav-item">
            <a class="nav-link {{ request()->routeIs('clients.*') ? 'active' : '' }}"
               href="{{ route('clients.index') }}">
                <i class="bi bi-people"></i>
                <span>Data Klien</span>
            </a>
        </li>

        <!-- Projects -->
        <li class="nav-item">
            <a class="nav-link {{ request()->routeIs('projects.*') ? 'active' : '' }}"
               href="{{ route('projects.index') }}">
                <i class="bi bi-building"></i>
                <span>Proyek</span>
            </a>
        </li>
        @endif

        <!-- Survey -->
        @if(in_array($userRole, ['admin', 'surveyor', 'marketing']))
        <li class="nav-item">
            <a class="nav-link {{ request()->routeIs('surveys.*') ? 'active' : '' }}"
               href="{{ route('surveys.index') }}">
                <i class="bi bi-clipboard-check"></i>
                <span>Survey</span>
                @if($userRole == 'surveyor' && isset($pendingSurveys) && $pendingSurveys > 0)
                <span class="badge bg-danger ms-auto">{{ $pendingSurveys }}</span>
                @endif
            </a>
        </li>
        @endif

        @if(in_array($userRole, ['admin', 'manager', 'marketing']))
        <!-- Pipeline -->
        <li class="nav-item">
            <a class="nav-link {{ request()->routeIs('pipeline.*') ? 'active' : '' }}"
               href="{{ route('pipeline.index') }}">
                <i class="bi bi-funnel"></i>
                <span>Pipeline</span>
            </a>
        </li>

        <!-- Documents -->
        <li class="nav-item">
            <a class="nav-link {{ request()->routeIs('documents.*') ? 'active' : '' }}"
               href="{{ route('documents.index') }}">
                <i class="bi bi-folder"></i>
                <span>Dokumen</span>
            </a>
        </li>

        <!-- Reports -->
        <li class="nav-item">
            <a class="nav-link {{ request()->routeIs('reports.*') ? 'active' : '' }}"
               href="{{ route('reports.index') }}">
                <i class="bi bi-file-earmark-bar-graph me-2"></i>
                <span>Reports</span>
            </a>
        </li>
        @endif

        @if(in_array($userRole, ['admin', 'manager']))
        <!-- Reports Section -->
        <li class="nav-item mt-3">
            <h6 class="sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted">
                <span>Laporan</span>
            </h6>
        </li>

        <li class="nav-item">
            <a class="nav-link {{ request()->routeIs('reports.conversion') ? 'active' : '' }}"
               href="{{ route('reports.conversion') }}">
                <i class="bi bi-graph-up"></i>
                <span>Konversi</span>
            </a>
        </li>

        <li class="nav-item">
            <a class="nav-link {{ request()->routeIs('reports.revenue') ? 'active' : '' }}"
               href="{{ route('reports.revenue') }}">
                <i class="bi bi-currency-dollar"></i>
                <span>Revenue</span>
            </a>
        </li>

        <li class="nav-item">
            <a class="nav-link {{ request()->routeIs('reports.performance') ? 'active' : '' }}"
               href="{{ route('reports.performance') }}">
                <i class="bi bi-bar-chart"></i>
                <span>Performa</span>
            </a>
        </li>
        @endif

        @if($userRole == 'admin')
        <!-- Admin Section -->
        <li class="nav-item mt-3">
            <h6 class="sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted">
                <span>Administrasi</span>
            </h6>
        </li>

        <li class="nav-item">
            <a class="nav-link {{ request()->routeIs('users.*') ? 'active' : '' }}"
               href="{{ route('users.index') }}">
                <i class="bi bi-person-badge"></i>
                <span>Pengguna</span>
            </a>
        </li>

        <li class="nav-item">
            <a class="nav-link {{ request()->routeIs('settings.*') ? 'active' : '' }}"
               href="{{ route('settings.index') }}">
                <i class="bi bi-gear"></i>
                <span>Pengaturan</span>
            </a>
        </li>
        @endif
    </ul>

    @if(in_array(Auth::user()->getRoleNames()->first(), ['admin', 'manager']))
    <!-- Under Pipeline menu item -->
    <li class="nav-item">
        <a class="nav-link {{ request()->routeIs('pipeline.analytics') ? 'active' : '' }}"
        href="{{ route('pipeline.analytics') }}">
            <i class="bi bi-graph-up me-2"></i>
            <span>Pipeline Analytics</span>
        </a>
    </li>
    @endif


    <!-- Storage Info -->
    <div class="px-3 mt-5">
        <div class="small text-muted mb-2">Penyimpanan</div>
        <div class="progress" style="height: 6px;">
            <div class="progress-bar" role="progressbar" style="width: 65%"></div>
        </div>
        <div class="small text-muted mt-1">6.5 GB dari 10 GB</div>
    </div>
</div>

resources\views\components\text-input.blade.php:
@props(['disabled' => false])

<input @disabled($disabled) {{ $attributes->merge(['class' => 'border-gray-300 focus:border-indigo-500 focus:ring-indigo-500 rounded-md shadow-sm']) }}>

resources\views\dashboard\admin.blade.php:
@extends('layouts.app')

@section('title', 'Dashboard Admin')

@section('content')
<div class="container-fluid px-0">
    <h4 class="mb-4">Dashboard Admin</h4>
    
    <!-- Stats Cards -->
    <div class="row g-3 mb-4">
        <div class="col-md-3">
            <div class="stat-card">
                <div class="d-flex justify-content-between align-items-start">
                    <div>
                        <h6 class="text-muted mb-1">Total Clients</h6>
                        <div class="stat-value">{{ $totalClients }}</div>
                        <small class="text-success">+12% vs last month</small>
                    </div>
                    <div class="icon-box bg-primary bg-opacity-10">
                        <i class="bi bi-people fs-4 text-primary"></i>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3">
            <div class="stat-card">
                <div class="d-flex justify-content-between align-items-start">
                    <div>
                        <h6 class="text-muted mb-1">Active Projects</h6>
                        <div class="stat-value">{{ $activeProjects }}</div>
                        <small class="text-warning">8 on schedule</small>
                    </div>
                    <div class="icon-box bg-success bg-opacity-10">
                        <i class="bi bi-building fs-4 text-success"></i>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3">
            <div class="stat-card">
                <div class="d-flex justify-content-between align-items-start">
                    <div>
                        <h6 class="text-muted mb-1">Pending Surveys</h6>
                        <div class="stat-value">{{ $pendingSurveys }}</div>
                        <small class="text-danger">Need attention</small>
                    </div>
                    <div class="icon-box bg-warning bg-opacity-10">
                        <i class="bi bi-clipboard-check fs-4 text-warning"></i>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3">
            <div class="stat-card">
                <div class="d-flex justify-content-between align-items-start">
                    <div>
                        <h6 class="text-muted mb-1">Pipeline Value</h6>
                        <div class="stat-value">{{ number_format($pipelineValue/1000000, 1) }}M</div>
                        <small class="text-success">+18% growth</small>
                    </div>
                    <div class="icon-box bg-info bg-opacity-10">
                        <i class="bi bi-currency-dollar fs-4 text-info"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Charts Row -->
    <div class="row g-3 mb-4">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h6 class="mb-0">Revenue Overview</h6>
                </div>
                <div class="card-body">
                    <div class="chart-container">
                        <canvas id="revenueChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h6 class="mb-0">Project Status</h6>
                </div>
                <div class="card-body">
                    <div class="chart-container-small">
                        <canvas id="statusChart"></canvas>
                    </div>
                    <div class="mt-3">
                        <div class="d-flex justify-content-between mb-2">
                            <span class="text-muted">Lead</span>
                            <strong>12</strong>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span class="text-muted">Survey</span>
                            <strong>8</strong>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span class="text-muted">Negotiation</span>
                            <strong>15</strong>
                        </div>
                        <div class="d-flex justify-content-between">
                            <span class="text-muted">Execution</span>
                            <strong>24</strong>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Recent Activities Table -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h6 class="mb-0">Recent Projects</h6>
                    <a href="#" class="btn btn-sm btn-primary">View All</a>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead>
                                <tr>
                                    <th>Project</th>
                                    <th>Client</th>
                                    <th>Status</th>
                                    <th>Progress</th>
                                    <th>Value</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>
                                        <div class="fw-semibold">Office Renovation</div>
                                        <small class="text-muted">PRJ-2025-001</small>
                                    </td>
                                    <td>PT. Maju Jaya</td>
                                    <td><span class="badge bg-warning">Survey</span></td>
                                    <td>
                                        <div class="progress" style="height: 6px;">
                                            <div class="progress-bar" style="width: 25%"></div>
                                        </div>
                                    </td>
                                    <td>Rp 450M</td>
                                </tr>
                                <tr>
                                    <td>
                                        <div class="fw-semibold">Showroom Construction</div>
                                        <small class="text-muted">PRJ-2025-002</small>
                                    </td>
                                    <td>CV. Berkah Abadi</td>
                                    <td><span class="badge bg-primary">Execution</span></td>
                                    <td>
                                        <div class="progress" style="height: 6px;">
                                            <div class="progress-bar" style="width: 65%"></div>
                                        </div>
                                    </td>
                                    <td>Rp 1.2B</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

@push('styles')
<style>
/* Chart container fixes */
.chart-container {
    position: relative;
    height: 300px;
}

.chart-container-small {
    position: relative;
    height: 200px;
}

canvas {
    max-height: 100% !important;
}
</style>
@endpush

@push('scripts')
<script>
// Revenue Chart Configuration
const revenueCtx = document.getElementById('revenueChart').getContext('2d');
new Chart(revenueCtx, {
    type: 'line',
    data: {
        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
        datasets: [{
            label: 'Revenue',
            data: [120, 190, 150, 220, 180, 250, 280, 320, 300, 350, 380, 400],
            borderColor: '#1a73e8',
            backgroundColor: 'rgba(26, 115, 232, 0.1)',
            borderWidth: 3,
            tension: 0.4,
            fill: true
        }]
    },
    options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
            legend: {
                display: false
            },
            tooltip: {
                callbacks: {
                    label: function(context) {
                        return 'Revenue: Rp ' + context.parsed.y + 'M';
                    }
                }
            }
        },
        scales: {
            y: {
                beginAtZero: true,
                ticks: {
                    callback: function(value) {
                        return 'Rp ' + value + 'M';
                    }
                }
            },
            x: {
                grid: {
                    display: false
                }
            }
        }
    }
});

// Status Chart Configuration
const statusCtx = document.getElementById('statusChart').getContext('2d');
new Chart(statusCtx, {
    type: 'doughnut',
    data: {
        labels: ['Lead', 'Survey', 'Negotiation', 'Execution'],
        datasets: [{
            data: [12, 8, 15, 24],
            backgroundColor: [
                '#ffc107',
                '#17a2b8',
                '#6f42c1',
                '#28a745'
            ],
            borderWidth: 0
        }]
    },
    options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
            legend: {
                display: false
            }
        }
    }
});
</script>
@endpush

resources\views\dashboard\manager.blade.php:
@extends('layouts.app')

@section('title', 'Dashboard Manager')

@section('content')
<div class="container-fluid px-0">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">Dashboard Manager</h4>
            <p class="text-muted mb-0">Overview performa bisnis {{ now()->format('F Y') }}</p>
        </div>
        <div class="btn-group" role="group">
            <button type="button" class="btn btn-outline-primary active">Bulan Ini</button>
            <button type="button" class="btn btn-outline-primary">Kuartal</button>
            <button type="button" class="btn btn-outline-primary">Tahun</button>
        </div>
    </div>
    
    <!-- KPI Cards -->
    <div class="row g-3 mb-4">
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <p class="text-muted mb-1">Total Revenue</p>
                            <h4 class="mb-0">Rp 3.2M</h4>
                            <small class="text-success">
                                <i class="bi bi-arrow-up"></i> 12% vs bulan lalu
                            </small>
                        </div>
                        <div class="icon-box bg-success bg-opacity-10 text-success">
                            <i class="bi bi-cash-stack fs-4"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <p class="text-muted mb-1">Conversion Rate</p>
                            <h4 class="mb-0">68%</h4>
                            <small class="text-success">
                                <i class="bi bi-arrow-up"></i> 5% improvement
                            </small>
                        </div>
                        <div class="icon-box bg-primary bg-opacity-10 text-primary">
                            <i class="bi bi-graph-up-arrow fs-4"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <p class="text-muted mb-1">Avg Deal Size</p>
                            <h4 class="mb-0">Rp 420Jt</h4>
                            <small class="text-danger">
                                <i class="bi bi-arrow-down"></i> 3% vs target
                            </small>
                        </div>
                        <div class="icon-box bg-warning bg-opacity-10 text-warning">
                            <i class="bi bi-calculator fs-4"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <p class="text-muted mb-1">Active Projects</p>
                            <h4 class="mb-0">24</h4>
                            <small class="text-muted">
                                8 on schedule
                            </small>
                        </div>
                        <div class="icon-box bg-info bg-opacity-10 text-info">
                            <i class="bi bi-building fs-4"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Charts -->
    <div class="row g-3 mb-4">
        <!-- Revenue Trend -->
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h6 class="mb-0">Revenue Trend & Forecast</h6>
                </div>
                <div class="card-body">
                    <canvas id="revenueTrendChart" height="100"></canvas>
                </div>
            </div>
        </div>
        
    <!-- Pipeline Distribution -->
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h6 class="mb-0">Pipeline Distribution</h6>
            </div>
            <div class="card-body">
                <div class="chart-container-small">
                    <canvas id="pipelineChart"></canvas>
                </div>
                <div class="mt-3">
                    <small class="text-muted">Total Pipeline Value</small>
                    <h5>Rp 5.8 Miliar</h5>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Team Performance -->
    <div class="card">
        <div class="card-header">
            <h6 class="mb-0">Team Performance</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Marketing</th>
                            <th>Leads</th>
                            <th>Deals</th>
                            <th>Conversion</th>
                            <th>Revenue</th>
                            <th>Target Achievement</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                <div class="d-flex align-items-center">
                                    <img src="https://ui-avatars.com/api/?name=Marketing+1" 
                                         class="rounded-circle me-2" width="32" height="32">
                                    <span>Marketing Hansen</span>
                                </div>
                            </td>
                            <td>32</td>
                            <td>22</td>
                            <td>68.8%</td>
                            <td>Rp 1.2M</td>
                            <td>
                                <div class="progress" style="height: 8px;">
                                    <div class="progress-bar bg-success" style="width: 85%"></div>
                                </div>
                                <small>85%</small>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="d-flex align-items-center">
                                    <img src="https://ui-avatars.com/api/?name=Sarah+M" 
                                         class="rounded-circle me-2" width="32" height="32">
                                    <span>Sarah M</span>
                                </div>
                            </td>
                            <td>28</td>
                            <td>18</td>
                            <td>64.3%</td>
                            <td>Rp 980Jt</td>
                            <td>
                                <div class="progress" style="height: 8px;">
                                    <div class="progress-bar bg-warning" style="width: 73%"></div>
                                </div>
                                <small>73%</small>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="d-flex align-items-center">
                                    <img src="https://ui-avatars.com/api/?name=Budi+S" 
                                         class="rounded-circle me-2" width="32" height="32">
                                    <span>Budi S</span>
                                </div>
                            </td>
                            <td>25</td>
                            <td>19</td>
                            <td>76.0%</td>
                            <td>Rp 1.1M</td>
                            <td>
                                <div class="progress" style="height: 8px;">
                                    <div class="progress-bar bg-success" style="width: 92%"></div>
                                </div>
                                <small>92%</small>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@endsection

@push('styles')
<style>
.icon-box {
    width: 48px;
    height: 48px;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
}
</style>
@endpush

@push('styles')
<style>
/* Fix chart container heights */
canvas {
    max-height: 100% !important;
}

.chart-container {
    position: relative;
    height: 300px;
}

.chart-container-small {
    position: relative;
    height: 200px;
}

/* Icon boxes untuk stats */
.icon-box {
    width: 48px;
    height: 48px;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
}
</style>
@endpush

@push('scripts')
<script>
// Revenue Trend Chart
const revenueTrendCtx = document.getElementById('revenueTrendChart').getContext('2d');
new Chart(revenueTrendCtx, {
    type: 'line',
    data: {
        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'Mei', 'Jun', 'Jul', 'Agu', 'Sep', 'Okt', 'Nov', 'Des'],
        datasets: [{
            label: 'Actual',
            data: [280, 320, 300, 380, 350, 420, 380, 450, 480, 520, null, null],
            borderColor: '#1a73e8',
            backgroundColor: 'rgba(26, 115, 232, 0.1)',
            borderWidth: 3,
            tension: 0.4
        }, {
            label: 'Target',
            data: [300, 350, 350, 400, 400, 450, 450, 500, 500, 550, 550, 600],
            borderColor: '#ea4335',
            borderWidth: 2,
            borderDash: [5, 5]
        }, {
            label: 'Forecast',
            data: [null, null, null, null, null, null, null, null, null, 520, 540, 580],
            borderColor: '#34a853',
            borderWidth: 2,
            borderDash: [2, 2]
        }]
    },
    options: {
        responsive: true,
        maintainAspectRatio: false,
        interaction: {
            mode: 'index',
            intersect: false,
        },
        plugins: {
            tooltip: {
                callbacks: {
                    label: function(context) {
                        return context.dataset.label + ': Rp ' + context.parsed.y + ' Juta';
                    }
                }
            }
        },
        scales: {
            y: {
                beginAtZero: true,
                ticks: {
                    callback: function(value) {
                        return 'Rp ' + value + 'M';
                    }
                }
            }
        }
    }
});



// Pipeline Chart
const pipelineCtx = document.getElementById('pipelineChart').getContext('2d');
new Chart(pipelineCtx, {
    type: 'doughnut',
    data: {
        labels: ['Lead', 'Survey', 'Penawaran', 'Negosiasi', 'Deal'],
        datasets: [{
            data: [800, 1200, 2100, 1500, 200],
            backgroundColor: [
                '#6c757d',
                '#17a2b8',
                '#ffc107',
                '#6f42c1',
                '#28a745'
            ]
        }]
    },
    options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
            legend: {
                position: 'bottom',
                labels: {
                    padding: 10,
                    usePointStyle: true,
                    font: {
                        size: 12
                    }
                }
            }
        }
    }
});
</script>
@endpush

resources\views\dashboard\marketing.blade.php:
@extends('layouts.app')

@section('title', 'Dashboard Marketing')

@section('content')
<div class="container-fluid px-0">
    <!-- Welcome Section -->
    <div class="row mb-4">
        <div class="col-12">
            <h4 class="mb-1">Dashboard Marketing</h4>
            <p class="text-muted">Selamat datang, {{ Auth::user()->name }}! Berikut ringkasan aktivitas Anda.</p>
        </div>
    </div>
    
    <!-- Stats Cards -->
    <div class="row g-3 mb-4">
        <div class="col-md-3 col-6">
            <div class="stat-card">
                <div class="stat-icon bg-primary bg-opacity-10 text-primary">
                    <i class="bi bi-people"></i>
                </div>
                <div class="stat-value">{{ $myClients ?? 0 }}</div>
                <div class="stat-label">Klien Saya</div>
            </div>
        </div>
        
        <div class="col-md-3 col-6">
            <div class="stat-card">
                <div class="stat-icon bg-success bg-opacity-10 text-success">
                    <i class="bi bi-building"></i>
                </div>
                <div class="stat-value">{{ $myProjects ?? 0 }}</div>
                <div class="stat-label">Proyek Aktif</div>
            </div>
        </div>
        
        <div class="col-md-3 col-6">
            <div class="stat-card">
                <div class="stat-icon bg-warning bg-opacity-10 text-warning">
                    <i class="bi bi-clock-history"></i>
                </div>
                <div class="stat-value">5</div>
                <div class="stat-label">Follow Up Hari Ini</div>
            </div>
        </div>
        
        <div class="col-md-3 col-6">
            <div class="stat-card">
                <div class="stat-icon bg-info bg-opacity-10 text-info">
                    <i class="bi bi-file-earmark-text"></i>
                </div>
                <div class="stat-value">3</div>
                <div class="stat-label">Penawaran Pending</div>
            </div>
        </div>
    </div>
    
    <!-- Today's Tasks -->
    <div class="row g-3 mb-4">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h6 class="mb-0">
                        <i class="bi bi-calendar-check me-2"></i>
                        Tugas Hari Ini
                    </h6>
                    <a href="#" class="btn btn-sm btn-primary">
                        <i class="bi bi-plus"></i> Tambah
                    </a>
                </div>
                <div class="card-body">
                    <div class="task-list">
                        <div class="task-item d-flex align-items-start mb-3">
                            <input type="checkbox" class="form-check-input me-3 mt-1">
                            <div class="flex-grow-1">
                                <div class="fw-semibold">Follow up PT. Maju Jaya</div>
                                <small class="text-muted">Konfirmasi penawaran renovasi kantor</small>
                                <div class="mt-1">
                                    <span class="badge bg-warning">10:00 AM</span>
                                    <span class="badge bg-light text-dark">High Priority</span>
                                </div>
                            </div>
                        </div>
                        
                        <div class="task-item d-flex align-items-start mb-3">
                            <input type="checkbox" class="form-check-input me-3 mt-1">
                            <div class="flex-grow-1">
                                <div class="fw-semibold">Meeting dengan CV. Berkah</div>
                                <small class="text-muted">Presentasi design showroom</small>
                                <div class="mt-1">
                                    <span class="badge bg-primary">2:00 PM</span>
                                </div>
                            </div>
                        </div>
                        
                        <div class="task-item d-flex align-items-start">
                            <input type="checkbox" class="form-check-input me-3 mt-1" checked>
                            <div class="flex-grow-1 text-decoration-line-through opacity-50">
                                <div class="fw-semibold">Kirim invoice ke Kopi Nusantara</div>
                                <small class="text-muted">Invoice progress 50%</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Recent Activities -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h6 class="mb-0">
                        <i class="bi bi-activity me-2"></i>
                        Aktivitas Terbaru
                    </h6>
                </div>
                <div class="card-body">
                    <div class="activity-timeline">
                        <div class="activity-item">
                            <div class="activity-icon bg-success">
                                <i class="bi bi-check-circle text-white"></i>
                            </div>
                            <div class="activity-content">
                                <div class="fw-semibold">Kontrak ditandatangani</div>
                                <p class="text-muted mb-1">PT. Sentosa Jaya - Renovasi Outlet</p>
                                <small class="text-muted">2 jam yang lalu</small>
                            </div>
                        </div>
                        
                        <div class="activity-item">
                            <div class="activity-icon bg-primary">
                                <i class="bi bi-send text-white"></i>
                            </div>
                            <div class="activity-content">
                                <div class="fw-semibold">Penawaran terkirim</div>
                                <p class="text-muted mb-1">CV. Makmur - Interior Kafe</p>
                                <small class="text-muted">5 jam yang lalu</small>
                            </div>
                        </div>
                        
                        <div class="activity-item">
                            <div class="activity-icon bg-warning">
                                <i class="bi bi-telephone text-white"></i>
                            </div>
                            <div class="activity-content">
                                <div class="fw-semibold">Follow up call</div>
                                <p class="text-muted mb-1">PT. Indah Persada - Showroom</p>
                                <small class="text-muted">Kemarin</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- My Pipeline -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h6 class="mb-0">
                        <i class="bi bi-funnel me-2"></i>
                        Pipeline Saya
                    </h6>
                    <a href="{{ route('pipeline.index') }}" class="btn btn-sm btn-outline-primary">
                        Lihat Semua
                    </a>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Klien</th>
                                    <th>Proyek</th>
                                    <th>Status</th>
                                    <th>Nilai</th>
                                    <th>Last Update</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>PT. Maju Jaya</td>
                                    <td>Renovasi Kantor Lt. 2</td>
                                    <td><span class="badge bg-warning">Penawaran</span></td>
                                    <td>Rp 450 Juta</td>
                                    <td>2 hari lalu</td>
                                    <td>
                                        <button class="btn btn-sm btn-outline-primary">
                                            <i class="bi bi-eye"></i>
                                        </button>
                                    </td>
                                </tr>
                                <tr>
                                    <td>CV. Berkah Abadi</td>
                                    <td>Pembangunan Showroom</td>
                                    <td><span class="badge bg-info">Negosiasi</span></td>
                                    <td>Rp 1.2 Miliar</td>
                                    <td>1 minggu lalu</td>
                                    <td>
                                        <button class="btn btn-sm btn-outline-primary">
                                            <i class="bi bi-eye"></i>
                                        </button>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Kopi Nusantara</td>
                                    <td>Interior Kafe Cabang 3</td>
                                    <td><span class="badge bg-primary">Eksekusi</span></td>
                                    <td>Rp 280 Juta</td>
                                    <td>3 hari lalu</td>
                                    <td>
                                        <button class="btn btn-sm btn-outline-primary">
                                            <i class="bi bi-eye"></i>
                                        </button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

@push('styles')
<style>
.task-list .task-item:not(:last-child) {
    border-bottom: 1px solid #f0f0f0;
    padding-bottom: 1rem;
}

.activity-timeline {
    position: relative;
    padding-left: 40px;
}

.activity-timeline::before {
    content: '';
    position: absolute;
    left: 15px;
    top: 20px;
    bottom: 0;
    width: 2px;
    background: #e0e0e0;
}

.activity-item {
    position: relative;
    margin-bottom: 1.5rem;
}

.activity-icon {
    position: absolute;
    left: -25px;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 14px;
}
</style>
@endpush

resources\views\dashboard\surveyor.blade.php:
@extends('layouts.app')

@section('title', 'Dashboard Surveyor')

@section('content')
<div class="container-fluid px-0">
    <!-- Welcome Section -->
    <div class="row mb-4">
        <div class="col-12">
            <h4 class="mb-1">Dashboard Surveyor</h4>
            <p class="text-muted">Hi {{ Auth::user()->name }}, ada {{ $pendingSurveys }} survey menunggu Anda.</p>
        </div>
    </div>
    
    <!-- Quick Stats -->
    <div class="row g-3 mb-4">
        <div class="col-6 col-md-3">
            <div class="stat-card text-center">
                <div class="stat-value text-warning">{{ $pendingSurveys }}</div>
                <div class="stat-label">Pending</div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="stat-card text-center">
                <div class="stat-value text-info">3</div>
                <div class="stat-label">Hari Ini</div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="stat-card text-center">
                <div class="stat-value text-success">{{ $mySurveys }}</div>
                <div class="stat-label">Selesai</div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="stat-card text-center">
                <div class="stat-value text-primary">95%</div>
                <div class="stat-label">On Time</div>
            </div>
        </div>
    </div>
    
    <!-- Today's Schedule -->
    <div class="card mb-4">
        <div class="card-header bg-primary text-white">
            <h6 class="mb-0">
                <i class="bi bi-calendar-event me-2"></i>
                Jadwal Hari Ini - {{ now()->format('l, d F Y') }}
            </h6>
        </div>
        <div class="card-body p-0">
            <div class="list-group list-group-flush">
                <a href="#" class="list-group-item list-group-item-action py-3">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <h6 class="mb-1">PT. Maju Jaya - Renovasi Kantor</h6>
                            <p class="mb-1 text-muted">
                                <i class="bi bi-geo-alt me-1"></i>
                                Jl. Sudirman No. 123, Jakarta Selatan
                            </p>
                            <span class="badge bg-warning">10:00 - 11:00 WIB</span>
                        </div>
                        <button class="btn btn-primary btn-sm">
                            <i class="bi bi-play-circle"></i> Mulai
                        </button>
                    </div>
                </a>
                
                <a href="#" class="list-group-item list-group-item-action py-3">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <h6 class="mb-1">CV. Berkah - Showroom Mobil</h6>
                            <p class="mb-1 text-muted">
                                <i class="bi bi-geo-alt me-1"></i>
                                Jl. TB Simatupang No. 456, Jakarta Selatan
                            </p>
                            <span class="badge bg-info">14:00 - 15:30 WIB</span>
                        </div>
                        <button class="btn btn-outline-primary btn-sm" disabled>
                            <i class="bi bi-clock"></i> Nanti
                        </button>
                    </div>
                </a>
            </div>
        </div>
    </div>
    
    <!-- Pending Surveys -->
    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h6 class="mb-0">
                <i class="bi bi-hourglass-split me-2"></i>
                Survey Menunggu
            </h6>
            <a href="{{ route('surveys.index') }}" class="btn btn-sm btn-outline-primary">
                Lihat Semua
            </a>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Klien</th>
                            <th>Lokasi</th>
                            <th>Jadwal</th>
                            <th>Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                <div class="fw-semibold">Kopi Nusantara</div>
                                <small class="text-muted">Interior Kafe</small>
                            </td>
                            <td>
                                <small>Kemang, Jakarta Selatan</small>
                            </td>
                            <td>
                                <small>Besok, 09:00</small>
                            </td>
                            <td>
                                <span class="badge bg-warning">Pending</span>
                            </td>
                            <td>
                                <a href="{{ route('surveys.mobile.form') }}" class="btn btn-sm btn-primary">
                                    <i class="bi bi-clipboard-check"></i>
                                </a>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="fw-semibold">PT. Sentosa</div>
                                <small class="text-muted">Renovasi Outlet</small>
                            </td>
                            <td>
                                <small>Tangerang</small>
                            </td>
                            <td>
                                <small>Rabu, 10:00</small>
                            </td>
                            <td>
                                <span class="badge bg-warning">Pending</span>
                            </td>
                            <td>
                                <a href="{{ route('surveys.mobile.form') }}" class="btn btn-sm btn-primary">
                                    <i class="bi bi-clipboard-check"></i>
                                </a>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    
    <!-- Quick Actions for Mobile -->
    <div class="position-fixed bottom-0 end-0 p-3 d-md-none">
        <a href="{{ route('surveys.mobile.form') }}" class="btn btn-primary btn-lg rounded-circle shadow">
            <i class="bi bi-camera"></i>
        </a>
    </div>
</div>
@endsection

@push('styles')
<style>
@media (max-width: 768px) {
    .stat-card {
        padding: 1rem;
    }
    
    .stat-value {
        font-size: 1.5rem;
    }
}
</style>
@endpush

resources\views\documents\create.blade.php:
@extends('layouts.app')

@section('title', 'Upload Dokumen')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="mb-4">
        <h4 class="mb-0">Upload Dokumen</h4>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item"><a href="{{ route('dashboard') }}">Dashboard</a></li>
                <li class="breadcrumb-item"><a href="{{ route('documents.index') }}">Dokumen</a></li>
                <li class="breadcrumb-item active">Upload</li>
            </ol>
        </nav>
    </div>

    <form action="{{ route('documents.store') }}" method="POST" enctype="multipart/form-data" id="uploadForm">
        @csrf
        
        <div class="row">
            <div class="col-md-8">
                <!-- Upload Area -->
                <div class="card mb-4">
                    <div class="card-body">
                        <div class="upload-area text-center p-5 border-2 border-dashed rounded" 
                             id="uploadArea">
                            <i class="bi bi-cloud-upload fs-1 text-primary mb-3 d-block"></i>
                            <h5>Drag & Drop file di sini</h5>
                            <p class="text-muted mb-3">atau</p>
                            <label for="fileInput" class="btn btn-primary">
                                <i class="bi bi-folder2-open me-2"></i>Browse File
                            </label>
                            <input type="file" 
                                   id="fileInput" 
                                   name="file" 
                                   class="d-none @error('file') is-invalid @enderror"
                                   accept=".pdf,.jpg,.jpeg,.png,.doc,.docx,.xls,.xlsx,.ppt,.pptx">
                            <p class="text-muted mt-3 mb-0">
                                <small>Format: PDF, JPG, PNG, DOC, DOCX, XLS, XLSX, PPT, PPTX (Max: 50MB)</small>
                            </p>
                            @error('file')
                            <div class="invalid-feedback d-block">{{ $message }}</div>
                            @enderror
                        </div>
                        
                        <!-- File Preview -->
                        <div id="filePreview" class="mt-4" style="display: none;">
                            <div class="alert alert-info d-flex align-items-center">
                                <i class="bi bi-file-earmark me-2" id="fileIcon"></i>
                                <div class="flex-grow-1">
                                    <strong id="fileName"></strong>
                                    <br>
                                    <small id="fileSize"></small>
                                </div>
                                <button type="button" class="btn btn-sm btn-outline-danger" id="removeFile">
                                    <i class="bi bi-x"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Document Information -->
                <div class="card">
                    <div class="card-header">
                        <h6 class="mb-0">Informasi Dokumen</h6>
                    </div>
                    <div class="card-body">
                        <div class="row g-3">
                            <div class="col-md-12">
                                <label class="form-label required">Nama Dokumen</label>
                                <input type="text" 
                                       name="name" 
                                       class="form-control @error('name') is-invalid @enderror" 
                                       value="{{ old('name') }}"
                                       placeholder="Contoh: Penawaran Renovasi Kantor"
                                       required>
                                @error('name')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label required">Kategori</label>
                                <select name="category" 
                                        class="form-select @error('category') is-invalid @enderror" 
                                        required>
                                    <option value="">-- Pilih Kategori --</option>
                                    <option value="penawaran" {{ old('category') == 'penawaran' ? 'selected' : '' }}>
                                        Penawaran
                                    </option>
                                    <option value="kontrak" {{ old('category') == 'kontrak' ? 'selected' : '' }}>
                                        Kontrak
                                    </option>
                                    <option value="invoice" {{ old('category') == 'invoice' ? 'selected' : '' }}>
                                        Invoice
                                    </option>
                                    <option value="survey" {{ old('category') == 'survey' ? 'selected' : '' }}>
                                        Survey
                                    </option>
                                    <option value="design" {{ old('category') == 'design' ? 'selected' : '' }}>
                                        Design
                                    </option>
                                    <option value="progress" {{ old('category') == 'progress' ? 'selected' : '' }}>
                                        Progress
                                    </option>
                                    <option value="other" {{ old('category') == 'other' ? 'selected' : '' }}>
                                        Lainnya
                                    </option>
                                </select>
                                @error('category')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label required">Related To</label>
                                <div class="input-group">
                                    <select name="documentable_type" 
                                            class="form-select @error('documentable_type') is-invalid @enderror" 
                                            id="documentableType"
                                            style="max-width: 120px;"
                                            required>
                                        <option value="project" {{ old('documentable_type', $preselected['type']) == 'project' ? 'selected' : '' }}>
                                            Project
                                        </option>
                                        <option value="client" {{ old('documentable_type', $preselected['type']) == 'client' ? 'selected' : '' }}>
                                            Client
                                        </option>
                                    </select>
                                    <select name="documentable_id" 
                                            class="form-select @error('documentable_id') is-invalid @enderror" 
                                            id="documentableId"
                                            required>
                                        <option value="">-- Pilih --</option>
                                    </select>
                                </div>
                                @error('documentable_type')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                                @error('documentable_id')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-12">
                                <label class="form-label">Deskripsi</label>
                                <textarea name="description" 
                                          class="form-control @error('description') is-invalid @enderror" 
                                          rows="3"
                                          placeholder="Deskripsi singkat tentang dokumen ini...">{{ old('description') }}</textarea>
                                @error('description')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-12">
                                <div class="form-check">
                                    <input type="checkbox" 
                                           class="form-check-input" 
                                           id="is_public" 
                                           name="is_public" 
                                           value="1"
                                           {{ old('is_public') ? 'checked' : '' }}>
                                    <label class="form-check-label" for="is_public">
                                        Dokumen dapat diakses oleh semua user
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <!-- Upload Guidelines -->
                <div class="card mb-4 border-info">
                    <div class="card-body">
                        <h6 class="text-info mb-3">
                            <i class="bi bi-info-circle me-2"></i>Panduan Upload
                        </h6>
                        <ul class="small mb-0">
                            <li>Maksimal ukuran file: 50MB</li>
                            <li>Format yang didukung: PDF, JPG, PNG, DOC, DOCX, XLS, XLSX, PPT, PPTX</li>
                            <li>Gunakan nama file yang deskriptif</li>
                            <li>Pilih kategori yang sesuai</li>
                            <li>Pastikan dokumen terhubung dengan project/client yang tepat</li>
                        </ul>
                    </div>
                </div>

                <!-- Related Info (Dynamic) -->
                <div class="card mb-4" id="relatedInfo" style="display: none;">
                    <div class="card-header">
                        <h6 class="mb-0" id="relatedTitle">Info Project</h6>
                    </div>
                    <div class="card-body" id="relatedContent">
                        <!-- Will be filled by JavaScript -->
                    </div>
                </div>

                <!-- Actions -->
                <div class="card">
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary" id="uploadBtn">
                                <i class="bi bi-upload me-2"></i>Upload Dokumen
                            </button>
                            <a href="{{ route('documents.index') }}" class="btn btn-outline-secondary">
                                <i class="bi bi-x-circle me-2"></i>Batal
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
@endsection

@push('styles')
<style>
.upload-area {
    border: 2px dashed #dee2e6;
    background-color: #f8f9fa;
    cursor: pointer;
    transition: all 0.3s ease;
}

.upload-area:hover {
    border-color: var(--primary-color);
    background-color: rgba(26, 115, 232, 0.05);
}

.upload-area.drag-over {
    border-color: var(--primary-color);
    background-color: rgba(26, 115, 232, 0.1);
}

.form-label.required::after {
    content: " *";
    color: #dc3545;
}
</style>
@endpush

@push('scripts')
<script>
// Projects and Clients data
const projects = {!! json_encode($projects) !!};
const clients = {!! json_encode($clients) !!};
const preselected = {!! json_encode($preselected) !!};

// File handling
const fileInput = document.getElementById('fileInput');
const uploadArea = document.getElementById('uploadArea');
const filePreview = document.getElementById('filePreview');
const fileName = document.getElementById('fileName');
const fileSize = document.getElementById('fileSize');
const fileIcon = document.getElementById('fileIcon');
const removeFile = document.getElementById('removeFile');
const uploadBtn = document.getElementById('uploadBtn');

// Drag & Drop
uploadArea.addEventListener('dragover', (e) => {
    e.preventDefault();
    uploadArea.classList.add('drag-over');
});

uploadArea.addEventListener('dragleave', () => {
    uploadArea.classList.remove('drag-over');
});

uploadArea.addEventListener('drop', (e) => {
    e.preventDefault();
    uploadArea.classList.remove('drag-over');
    
    const files = e.dataTransfer.files;
    if (files.length > 0) {
        fileInput.files = files;
        handleFileSelect(files[0]);
    }
});

// File selection
fileInput.addEventListener('change', (e) => {
    if (e.target.files.length > 0) {
        handleFileSelect(e.target.files[0]);
    }
});

function handleFileSelect(file) {
    // Validate file size (50MB)
    if (file.size > 52428800) {
        Swal.fire({
            icon: 'error',
            title: 'File Terlalu Besar',
            text: 'Ukuran file maksimal 50MB'
        });
        fileInput.value = '';
        return;
    }
    
    // Show file preview
    fileName.textContent = file.name;
    fileSize.textContent = formatFileSize(file.size);
    
    // Set appropriate icon
    const ext = file.name.split('.').pop().toLowerCase();
    const iconMap = {
        'pdf': 'bi-file-pdf',
        'jpg': 'bi-file-image',
        'jpeg': 'bi-file-image',
        'png': 'bi-file-image',
        'doc': 'bi-file-word',
        'docx': 'bi-file-word',
        'xls': 'bi-file-excel',
        'xlsx': 'bi-file-excel',
        'ppt': 'bi-file-ppt',
        'pptx': 'bi-file-ppt'
    };
    
    fileIcon.className = `bi ${iconMap[ext] || 'bi-file-earmark'} me-2`;
    filePreview.style.display = 'block';
    
    // Auto-fill document name if empty
    const nameInput = document.querySelector('input[name="name"]');
    if (!nameInput.value) {
        nameInput.value = file.name.replace(/\.[^/.]+$/, '').replace(/[_-]/g, ' ');
    }
}

// Remove file
removeFile.addEventListener('click', () => {
    fileInput.value = '';
    filePreview.style.display = 'none';
});

// Format file size
function formatFileSize(bytes) {
    const units = ['B', 'KB', 'MB', 'GB'];
    let size = bytes;
    let unitIndex = 0;
    
    while (size >= 1024 && unitIndex < units.length - 1) {
        size /= 1024;
        unitIndex++;
    }
    
    return size.toFixed(2) + ' ' + units[unitIndex];
}

// Related to dropdown handling
const documentableType = document.getElementById('documentableType');
const documentableId = document.getElementById('documentableId');
const relatedInfo = document.getElementById('relatedInfo');
const relatedTitle = document.getElementById('relatedTitle');
const relatedContent = document.getElementById('relatedContent');

function updateDocumentableOptions() {
    const type = documentableType.value;
    documentableId.innerHTML = '<option value="">-- Pilih --</option>';
    
    if (type === 'project') {
        relatedTitle.textContent = 'Info Project';
        projects.forEach(project => {
            const option = document.createElement('option');
            option.value = project.id;
            option.textContent = `${project.code} - ${project.name}`;
            option.selected = preselected.type === 'project' && preselected.id == project.id;
            documentableId.appendChild(option);
        });
    } else if (type === 'client') {
        relatedTitle.textContent = 'Info Client';
        clients.forEach(client => {
            const option = document.createElement('option');
            option.value = client.id;
            option.textContent = client.name;
            option.selected = preselected.type === 'client' && preselected.id == client.id;
            documentableId.appendChild(option);
        });
    }
    
    // Trigger change event to show related info
    if (documentableId.value) {
        documentableId.dispatchEvent(new Event('change'));
    }
}

documentableType.addEventListener('change', updateDocumentableOptions);

documentableId.addEventListener('change', function() {
    const type = documentableType.value;
    const id = this.value;
    
    if (!id) {
        relatedInfo.style.display = 'none';
        return;
    }
    
    relatedInfo.style.display = 'block';
    
    if (type === 'project') {
        const project = projects.find(p => p.id == id);
        if (project) {
            relatedContent.innerHTML = `
                <dl class="row mb-0 small">
                    <dt class="col-5">Client:</dt>
                    <dd class="col-7">${project.client.name}</dd>
                    <dt class="col-5">Status:</dt>
                    <dd class="col-7"><span class="badge bg-secondary">${project.status}</span></dd>
                    <dt class="col-5">PIC:</dt>
                    <dd class="col-7">${project.pic?.name || 'N/A'}</dd>
                </dl>
            `;
        }
    } else if (type === 'client') {
        const client = clients.find(c => c.id == id);
        if (client) {
            relatedContent.innerHTML = `
                <dl class="row mb-0 small">
                    <dt class="col-5">Email:</dt>
                    <dd class="col-7">${client.email || 'N/A'}</dd>
                    <dt class="col-5">Phone:</dt>
                    <dd class="col-7">${client.phone || 'N/A'}</dd>
                    <dt class="col-5">Status:</dt>
                    <dd class="col-7"><span class="badge bg-secondary">${client.status}</span></dd>
                </dl>
            `;
        }
    }
});

// Initialize on load
updateDocumentableOptions();

// Form submit handling
document.getElementById('uploadForm').addEventListener('submit', function(e) {
    if (!fileInput.files.length) {
        e.preventDefault();
        Swal.fire({
            icon: 'error',
            title: 'File Belum Dipilih',
            text: 'Silakan pilih file yang akan diupload'
        });
        return;
    }
    
    // Show loading
    uploadBtn.disabled = true;
    uploadBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Uploading...';
});
</script>
@endpush

resources\views\documents\edit.blade.php:
@extends('layouts.app')

@section('title', 'Edit Dokumen')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="mb-4">
        <h4 class="mb-0">Edit Dokumen</h4>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item"><a href="{{ route('dashboard') }}">Dashboard</a></li>
                <li class="breadcrumb-item"><a href="{{ route('documents.index') }}">Dokumen</a></li>
                <li class="breadcrumb-item active">Edit</li>
            </ol>
        </nav>
    </div>

    <form action="{{ route('documents.update', $document) }}" method="POST">
        @csrf
        @method('PUT')
        
        <div class="row">
            <div class="col-md-8">
                <!-- Document Information -->
                <div class="card">
                    <div class="card-header">
                        <h6 class="mb-0">Informasi Dokumen</h6>
                    </div>
                    <div class="card-body">
                        <div class="alert alert-info">
                            <i class="bi bi-info-circle me-2"></i>
                            Anda hanya dapat mengubah informasi dokumen, tidak dapat mengganti file.
                        </div>
                        
                        <div class="row g-3">
                            <div class="col-md-12">
                                <label class="form-label required">Nama Dokumen</label>
                                <input type="text" 
                                       name="name" 
                                       class="form-control @error('name') is-invalid @enderror" 
                                       value="{{ old('name', $document->name) }}"
                                       required>
                                @error('name')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label required">Kategori</label>
                                <select name="category" 
                                        class="form-select @error('category') is-invalid @enderror" 
                                        required>
                                    <option value="penawaran" {{ old('category', $document->category) == 'penawaran' ? 'selected' : '' }}>
                                        Penawaran
                                    </option>
                                    <option value="kontrak" {{ old('category', $document->category) == 'kontrak' ? 'selected' : '' }}>
                                        Kontrak
                                    </option>
                                    <option value="invoice" {{ old('category', $document->category) == 'invoice' ? 'selected' : '' }}>
                                        Invoice
                                    </option>
                                    <option value="survey" {{ old('category', $document->category) == 'survey' ? 'selected' : '' }}>
                                        Survey
                                    </option>
                                    <option value="design" {{ old('category', $document->category) == 'design' ? 'selected' : '' }}>
                                        Design
                                    </option>
                                    <option value="progress" {{ old('category', $document->category) == 'progress' ? 'selected' : '' }}>
                                        Progress
                                    </option>
                                    <option value="other" {{ old('category', $document->category) == 'other' ? 'selected' : '' }}>
                                        Lainnya
                                    </option>
                                </select>
                                @error('category')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label">Related To</label>
                                <input type="text" 
                                       class="form-control" 
                                       value="{{ $document->documentable_type == 'App\Models\Project' ? 'Project: ' : 'Client: ' }}{{ $document->documentable->name ?? 'N/A' }}"
                                       disabled>
                                <small class="text-muted">Tidak dapat diubah</small>
                            </div>

                            <div class="col-md-12">
                                <label class="form-label">Deskripsi</label>
                                <textarea name="description" 
                                          class="form-control @error('description') is-invalid @enderror" 
                                          rows="3">{{ old('description', $document->description) }}</textarea>
                                @error('description')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-12">
                                <div class="form-check">
                                    <input type="checkbox" 
                                           class="form-check-input" 
                                           id="is_public" 
                                           name="is_public" 
                                           value="1"
                                           {{ old('is_public', $document->is_public) ? 'checked' : '' }}>
                                    <label class="form-check-label" for="is_public">
                                        Dokumen dapat diakses oleh semua user
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <!-- File Info -->
                <div class="card mb-4 border-primary">
                    <div class="card-body">
                        <h6 class="text-primary mb-3">Info File</h6>
                        <dl class="row mb-0">
                            <dt class="col-sm-5">File:</dt>
                            <dd class="col-sm-7 text-truncate" title="{{ $document->original_name }}">
                                {{ $document->original_name }}
                            </dd>
                            
                            <dt class="col-sm-5">Tipe:</dt>
                            <dd class="col-sm-7">
                                <i class="{{ $document->icon }} me-1"></i>
                                {{ strtoupper($document->extension) }}
                            </dd>
                            
                            <dt class="col-sm-5">Ukuran:</dt>
                            <dd class="col-sm-7">{{ $document->formatted_size }}</dd>
                            
                            <dt class="col-sm-5">Diupload:</dt>
                            <dd class="col-sm-7">{{ $document->created_at->format('d M Y') }}</dd>
                            
                            <dt class="col-sm-5">Views:</dt>
                            <dd class="col-sm-7">{{ $document->views }}</dd>
                            
                            <dt class="col-sm-5">Downloads:</dt>
                            <dd class="col-sm-7">{{ $document->downloads }}</dd>
                        </dl>
                    </div>
                </div>

                <!-- Actions -->
                <div class="card">
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-save me-2"></i>Update Dokumen
                            </button>
                            <a href="{{ route('documents.show', $document) }}" class="btn btn-outline-secondary">
                                <i class="bi bi-x-circle me-2"></i>Batal
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
@endsection

@push('styles')
<style>
.form-label.required::after {
    content: " *";
    color: #dc3545;
}
</style>
@endpush

resources\views\documents\index.blade.php:
@extends('layouts.app')

@section('title', 'Dokumen')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">Manajemen Dokumen</h4>
            <p class="text-muted mb-0">Upload dan kelola dokumen project</p>
        </div>
        <div>
            <button class="btn btn-outline-primary me-2" id="bulkDownloadBtn" style="display: none;">
                <i class="bi bi-download me-2"></i>Download Selected
            </button>
            <a href="{{ route('documents.create') }}" class="btn btn-primary">
                <i class="bi bi-upload me-2"></i>Upload Dokumen
            </a>
        </div>
    </div>

    <!-- Stats Cards -->
    <div class="row g-3 mb-4">
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="mb-1">{{ $stats['total_documents'] }}</h5>
                            <small class="text-muted">Total Dokumen</small>
                        </div>
                        <div class="icon-box bg-primary bg-opacity-10">
                            <i class="bi bi-file-earmark text-primary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="mb-1">{{ number_format($stats['total_size'] / 1048576, 1) }} MB</h5>
                            <small class="text-muted">Total Size</small>
                        </div>
                        <div class="icon-box bg-success bg-opacity-10">
                            <i class="bi bi-hdd text-success"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="mb-1">{{ $stats['this_month'] }}</h5>
                            <small class="text-muted">Bulan Ini</small>
                        </div>
                        <div class="icon-box bg-warning bg-opacity-10">
                            <i class="bi bi-calendar-month text-warning"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="mb-1">{{ $stats['by_category']['penawaran'] ?? 0 }}</h5>
                            <small class="text-muted">Penawaran</small>
                        </div>
                        <div class="icon-box bg-info bg-opacity-10">
                            <i class="bi bi-file-text text-info"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters -->
    <div class="card mb-3">
        <div class="card-body">
            <form method="GET" action="{{ route('documents.index') }}" class="row g-3">
                <div class="col-md-3">
                    <input type="text" 
                           name="search" 
                           class="form-control" 
                           placeholder="Cari nama dokumen..."
                           value="{{ request('search') }}">
                </div>
                
                <div class="col-md-2">
                    <select name="category" class="form-select">
                        <option value="">Semua Kategori</option>
                        <option value="penawaran" {{ request('category') == 'penawaran' ? 'selected' : '' }}>Penawaran</option>
                        <option value="kontrak" {{ request('category') == 'kontrak' ? 'selected' : '' }}>Kontrak</option>
                        <option value="invoice" {{ request('category') == 'invoice' ? 'selected' : '' }}>Invoice</option>
                        <option value="survey" {{ request('category') == 'survey' ? 'selected' : '' }}>Survey</option>
                        <option value="design" {{ request('category') == 'design' ? 'selected' : '' }}>Design</option>
                        <option value="progress" {{ request('category') == 'progress' ? 'selected' : '' }}>Progress</option>
                        <option value="other" {{ request('category') == 'other' ? 'selected' : '' }}>Lainnya</option>
                    </select>
                </div>
                
                <div class="col-md-2">
                    <select name="type" class="form-select">
                        <option value="">Semua Tipe</option>
                        <option value="pdf" {{ request('type') == 'pdf' ? 'selected' : '' }}>PDF</option>
                        <option value="image" {{ request('type') == 'image' ? 'selected' : '' }}>Image</option>
                        <option value="word" {{ request('type') == 'word' ? 'selected' : '' }}>Word</option>
                        <option value="excel" {{ request('type') == 'excel' ? 'selected' : '' }}>Excel</option>
                        <option value="other" {{ request('type') == 'other' ? 'selected' : '' }}>Other</option>
                    </select>
                </div>
                
                <div class="col-md-2">
                    <input type="date" name="date_from" class="form-control" 
                           placeholder="Dari tanggal" value="{{ request('date_from') }}">
                </div>
                
                <div class="col-md-2">
                    <input type="date" name="date_to" class="form-control" 
                           placeholder="Sampai tanggal" value="{{ request('date_to') }}">
                </div>
                
                <div class="col-md-1">
                    <button type="submit" class="btn btn-outline-primary w-100">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Documents Grid/List Toggle -->
    <div class="d-flex justify-content-end mb-3">
        <div class="btn-group" role="group">
            <button type="button" class="btn btn-sm btn-outline-secondary active" id="gridViewBtn">
                <i class="bi bi-grid-3x3-gap"></i> Grid
            </button>
            <button type="button" class="btn btn-sm btn-outline-secondary" id="listViewBtn">
                <i class="bi bi-list"></i> List
            </button>
        </div>
    </div>

    <!-- Documents Grid View -->
    <div id="gridView">
        <div class="row g-3">
            @forelse($documents as $document)
            <div class="col-md-3 col-sm-6">
                <div class="card document-card h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <div class="document-icon">
                                <i class="{{ $document->icon }} fs-1 text-primary"></i>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input document-checkbox" 
                                       type="checkbox" 
                                       value="{{ $document->id }}">
                            </div>
                        </div>
                        
                        <h6 class="card-title text-truncate" title="{{ $document->name }}">
                            {{ $document->name }}
                        </h6>
                        
                        <p class="text-muted small mb-2">
                            {{ Str::limit($document->description, 50) }}
                        </p>
                        
                        <div class="mb-2">
                            <span class="badge bg-{{ $document->category_badge }}">
                                {{ ucfirst($document->category) }}
                            </span>
                            <span class="badge bg-secondary">
                                {{ strtoupper($document->extension) }}
                            </span>
                        </div>
                        
                        <div class="small text-muted mb-3">
                            <div class="d-flex justify-content-between">
                                <span><i class="bi bi-hdd me-1"></i>{{ $document->formatted_size }}</span>
                                <span><i class="bi bi-eye me-1"></i>{{ $document->views }}</span>
                                <span><i class="bi bi-download me-1"></i>{{ $document->downloads }}</span>
                            </div>
                        </div>
                        
                        <div class="d-flex justify-content-between align-items-center">
                            <small class="text-muted">
                                {{ $document->created_at->diffForHumans() }}
                            </small>
                            <div class="btn-group" role="group">
                                <a href="{{ route('documents.show', $document) }}" 
                                   class="btn btn-sm btn-outline-primary"
                                   data-bs-toggle="tooltip" title="View">
                                    <i class="bi bi-eye"></i>
                                </a>
                                <a href="{{ route('documents.download', $document) }}" 
                                   class="btn btn-sm btn-outline-success"
                                   data-bs-toggle="tooltip" title="Download">
                                    <i class="bi bi-download"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @empty
            <div class="col-12">
                <div class="text-center py-5">
                    <i class="bi bi-file-earmark-x fs-1 text-muted d-block mb-3"></i>
                    <h5>Belum Ada Dokumen</h5>
                    <p class="text-muted">Mulai upload dokumen untuk project Anda</p>
                    <a href="{{ route('documents.create') }}" class="btn btn-primary">
                        <i class="bi bi-upload me-2"></i>Upload Dokumen
                    </a>
                </div>
            </div>
            @endforelse
        </div>
    </div>

    <!-- Documents List View (Hidden by default) -->
    <div id="listView" style="display: none;">
        <div class="card">
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead>
                            <tr>
                                <th width="5%">
                                    <input type="checkbox" class="form-check-input" id="selectAll">
                                </th>
                                <th>Nama Dokumen</th>
                                <th>Kategori</th>
                                <th>Related To</th>
                                <th>Size</th>
                                <th>Uploaded By</th>
                                <th>Date</th>
                                <th width="15%">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach($documents as $document)
                            <tr>
                                <td>
                                    <input type="checkbox" class="form-check-input document-checkbox" 
                                           value="{{ $document->id }}">
                                </td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <i class="{{ $document->icon }} me-2 text-primary"></i>
                                        <div>
                                            <div class="fw-semibold">{{ $document->name }}</div>
                                            <small class="text-muted">{{ $document->original_name }}</small>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <span class="badge bg-{{ $document->category_badge }}">
                                        {{ ucfirst($document->category) }}
                                    </span>
                                </td>
                                <td>
                                    @if($document->documentable_type == 'App\Models\Project')
                                        <a href="{{ route('projects.show', $document->documentable_id) }}">
                                            {{ $document->documentable->name ?? 'N/A' }}
                                        </a>
                                    @else
                                        <a href="{{ route('clients.show', $document->documentable_id) }}">
                                            {{ $document->documentable->name ?? 'N/A' }}
                                        </a>
                                    @endif
                                </td>
                                <td>{{ $document->formatted_size }}</td>
                                <td>{{ $document->uploadedBy->name }}</td>
                                <td>{{ $document->created_at->format('d M Y') }}</td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a href="{{ route('documents.show', $document) }}" 
                                           class="btn btn-sm btn-outline-primary"
                                           data-bs-toggle="tooltip" title="View">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        <a href="{{ route('documents.preview', $document) }}" 
                                           class="btn btn-sm btn-outline-info"
                                           data-bs-toggle="tooltip" title="Preview"
                                           target="_blank">
                                            <i class="bi bi-file-earmark-text"></i>
                                        </a>
                                        <a href="{{ route('documents.download', $document) }}" 
                                           class="btn btn-sm btn-outline-success"
                                           data-bs-toggle="tooltip" title="Download">
                                            <i class="bi bi-download"></i>
                                        </a>
                                        @if(Auth::user()->hasRole('admin') || $document->uploaded_by == Auth::id())
                                        <form action="{{ route('documents.destroy', $document) }}" 
                                              method="POST" 
                                              class="d-inline"
                                              onsubmit="return confirm('Yakin ingin menghapus dokumen ini?')">
                                            @csrf
                                            @method('DELETE')
                                            <button type="submit" 
                                                    class="btn btn-sm btn-outline-danger"
                                                    data-bs-toggle="tooltip" 
                                                    title="Delete">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </form>
                                        @endif
                                    </div>
                                </td>
                            </tr>
                            @endforeach
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Pagination -->
    @if($documents->hasPages())
    <div class="mt-4">
        {{ $documents->links() }}
    </div>
    @endif
</div>
@endsection

@push('styles')
<style>
.document-card {
    transition: all 0.3s ease;
    cursor: pointer;
}

.document-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
}

.document-icon {
    width: 60px;
    height: 60px;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f8f9fa;
    border-radius: 12px;
}

.icon-box {
    width: 40px;
    height: 40px;
    border-radius: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
}
</style>
@endpush

@push('scripts')
<script>
// View toggle
document.getElementById('gridViewBtn').addEventListener('click', function() {
    document.getElementById('gridView').style.display = 'block';
    document.getElementById('listView').style.display = 'none';
    this.classList.add('active');
    document.getElementById('listViewBtn').classList.remove('active');
});

document.getElementById('listViewBtn').addEventListener('click', function() {
    document.getElementById('gridView').style.display = 'none';
    document.getElementById('listView').style.display = 'block';
    this.classList.add('active');
    document.getElementById('gridViewBtn').classList.remove('active');
});

// Checkbox handling
const checkboxes = document.querySelectorAll('.document-checkbox');
const bulkDownloadBtn = document.getElementById('bulkDownloadBtn');
const selectAllCheckbox = document.getElementById('selectAll');

function updateBulkActions() {
    const checkedBoxes = document.querySelectorAll('.document-checkbox:checked');
    if (checkedBoxes.length > 0) {
        bulkDownloadBtn.style.display = 'inline-block';
    } else {
        bulkDownloadBtn.style.display = 'none';
    }
}

checkboxes.forEach(checkbox => {
    checkbox.addEventListener('change', updateBulkActions);
});

if (selectAllCheckbox) {
    selectAllCheckbox.addEventListener('change', function() {
        checkboxes.forEach(checkbox => {
            checkbox.checked = this.checked;
        });
        updateBulkActions();
    });
}

// Bulk download
bulkDownloadBtn.addEventListener('click', function() {
    const selectedIds = Array.from(document.querySelectorAll('.document-checkbox:checked'))
        .map(cb => cb.value);
    
    if (selectedIds.length === 0) {
        alert('Pilih dokumen yang akan didownload');
        return;
    }
    
    // Create form and submit
    const form = document.createElement('form');
    form.method = 'POST';
    form.action = '{{ route("documents.bulk-download") }}';
    form.innerHTML = `
        @csrf
        ${selectedIds.map(id => `<input type="hidden" name="document_ids[]" value="${id}">`).join('')}
    `;
    document.body.appendChild(form);
    form.submit();
});

// Initialize tooltips
var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
    return new bootstrap.Tooltip(tooltipTriggerEl)
});
</script>
@endpush

resources\views\documents\show.blade.php:
@extends('layouts.app')

@section('title', 'Detail Dokumen')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">{{ $document->name }}</h4>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item"><a href="{{ route('dashboard') }}">Dashboard</a></li>
                    <li class="breadcrumb-item"><a href="{{ route('documents.index') }}">Dokumen</a></li>
                    <li class="breadcrumb-item active">Detail</li>
                </ol>
            </nav>
        </div>
        <div>
            @if($document->type == 'pdf' || $document->type == 'image')
            <a href="{{ route('documents.preview', $document) }}" 
               class="btn btn-outline-info me-2"
               target="_blank">
                <i class="bi bi-eye me-2"></i>Preview
            </a>
            @endif
            
            <a href="{{ route('documents.download', $document) }}" class="btn btn-primary">
                <i class="bi bi-download me-2"></i>Download
            </a>
            
            @if(Auth::user()->hasRole('admin') || $document->uploaded_by == Auth::id())
            <a href="{{ route('documents.edit', $document) }}" class="btn btn-warning">
                <i class="bi bi-pencil me-2"></i>Edit
            </a>
            @endif
        </div>
    </div>

    <div class="row">
        <!-- Document Preview/Info -->
        <div class="col-md-8">
            <!-- Preview Card -->
            <div class="card mb-4">
                <div class="card-body">
                    @if($document->type == 'image')
                    <!-- Image Preview -->
                    <div class="text-center">
                        <img src="{{ $document->url }}" 
                             alt="{{ $document->name }}" 
                             class="img-fluid rounded"
                             style="max-height: 600px;">
                    </div>
                    @elseif($document->type == 'pdf')
                    <!-- PDF Preview -->
                    <div class="pdf-preview">
                        <embed src="{{ $document->url }}" 
                               type="application/pdf" 
                               width="100%" 
                               height="600px">
                    </div>
                    @else
                    <!-- Other File Types -->
                    <div class="text-center py-5">
                        <i class="{{ $document->icon }} display-1 text-primary mb-3"></i>
                        <h5>{{ $document->name }}</h5>
                        <p class="text-muted">{{ $document->original_name }}</p>
                        
                        <div class="mt-4">
                            <a href="{{ route('documents.download', $document) }}" 
                               class="btn btn-primary btn-lg">
                                <i class="bi bi-download me-2"></i>Download File
                            </a>
                        </div>
                    </div>
                    @endif
                </div>
            </div>

            <!-- Document Details -->
            <div class="card">
                <div class="card-header">
                    <h6 class="mb-0">Detail Dokumen</h6>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-3">Nama File:</dt>
                        <dd class="col-sm-9">{{ $document->original_name }}</dd>
                        
                        <dt class="col-sm-3">Kategori:</dt>
                        <dd class="col-sm-9">
                            <span class="badge bg-{{ $document->category_badge }}">
                                {{ ucfirst($document->category) }}
                            </span>
                        </dd>
                        
                        <dt class="col-sm-3">Tipe File:</dt>
                        <dd class="col-sm-9">
                            <i class="{{ $document->icon }} me-1"></i>
                            {{ strtoupper($document->extension) }}
                        </dd>
                        
                        <dt class="col-sm-3">Ukuran:</dt>
                        <dd class="col-sm-9">{{ $document->formatted_size }}</dd>
                        
                        <dt class="col-sm-3">Terkait dengan:</dt>
                        <dd class="col-sm-9">
                            @if($document->documentable_type == 'App\Models\Project')
                                <i class="bi bi-building me-1"></i>Project: 
                                <a href="{{ route('projects.show', $document->documentable_id) }}">
                                    {{ $document->documentable->name ?? 'N/A' }}
                                </a>
                            @else
                                <i class="bi bi-person me-1"></i>Client: 
                                <a href="{{ route('clients.show', $document->documentable_id) }}">
                                    {{ $document->documentable->name ?? 'N/A' }}
                                </a>
                            @endif
                        </dd>
                        
                        <dt class="col-sm-3">Diupload oleh:</dt>
                        <dd class="col-sm-9">{{ $document->uploadedBy->name }}</dd>
                        
                        <dt class="col-sm-3">Tanggal Upload:</dt>
                        <dd class="col-sm-9">{{ $document->created_at->format('d M Y H:i') }}</dd>
                        
                        <dt class="col-sm-3">Akses:</dt>
                        <dd class="col-sm-9">
                            @if($document->is_public)
                            <span class="badge bg-success">
                                <i class="bi bi-globe me-1"></i>Public
                            </span>
                            @else
                            <span class="badge bg-warning">
                                <i class="bi bi-lock me-1"></i>Private
                            </span>
                            @endif
                        </dd>
                        
                        @if($document->description)
                        <dt class="col-sm-3">Deskripsi:</dt>
                        <dd class="col-sm-9">{{ $document->description }}</dd>
                        @endif
                    </dl>
                </div>
            </div>
        </div>

        <!-- Right Sidebar -->
        <div class="col-md-4">
            <!-- Statistics -->
            <div class="card mb-4">
                <div class="card-body">
                    <h6 class="mb-3">Statistik</h6>
                    <div class="row text-center g-3">
                        <div class="col-6 border-end">
                            <h4 class="mb-0">{{ $document->views }}</h4>
                            <small class="text-muted">Views</small>
                        </div>
                        <div class="col-6">
                            <h4 class="mb-0">{{ $document->downloads }}</h4>
                            <small class="text-muted">Downloads</small>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Actions -->
            <div class="card mb-4">
                <div class="card-body">
                    <h6 class="mb-3">Actions</h6>
                    <div class="d-grid gap-2">
                        <a href="{{ route('documents.download', $document) }}" 
                           class="btn btn-primary">
                            <i class="bi bi-download me-2"></i>Download
                        </a>
                        
                        <button class="btn btn-outline-primary" onclick="shareDocument()">
                            <i class="bi bi-share me-2"></i>Share
                        </button>
                        
                        @if(Auth::user()->hasRole('admin') || $document->uploaded_by == Auth::id())
                        <hr>
                        
                        <a href="{{ route('documents.edit', $document) }}" 
                           class="btn btn-outline-warning">
                            <i class="bi bi-pencil me-2"></i>Edit
                        </a>
                        
                        <form action="{{ route('documents.destroy', $document) }}" 
                              method="POST" 
                              onsubmit="return confirm('Yakin ingin menghapus dokumen ini?')">
                            @csrf
                            @method('DELETE')
                            <button type="submit" class="btn btn-outline-danger w-100">
                                <i class="bi bi-trash me-2"></i>Hapus
                            </button>
                        </form>
                        @endif
                    </div>
                </div>
            </div>

            <!-- Related Documents -->
            @if($relatedDocuments->count() > 0)
            <div class="card">
                <div class="card-header">
                    <h6 class="mb-0">Dokumen Terkait</h6>
                </div>
                <div class="card-body">
                    <div class="list-group list-group-flush">
                        @foreach($relatedDocuments as $related)
                        <a href="{{ route('documents.show', $related) }}" 
                           class="list-group-item list-group-item-action px-0">
                            <div class="d-flex align-items-center">
                                <i class="{{ $related->icon }} me-2 text-primary"></i>
                                <div class="flex-grow-1">
                                    <h6 class="mb-0 text-truncate">{{ $related->name }}</h6>
                                    <small class="text-muted">
                                        {{ ucfirst($related->category) }} • {{ $related->formatted_size }}
                                    </small>
                                </div>
                            </div>
                        </a>
                        @endforeach
                    </div>
                </div>
            </div>
            @endif
        </div>
    </div>
</div>
@endsection

@push('styles')
<style>
.pdf-preview {
    border: 1px solid #dee2e6;
    border-radius: 6px;
    overflow: hidden;
}
</style>
@endpush

@push('scripts')
<script>
function shareDocument() {
    const url = window.location.href;
    
    if (navigator.share) {
        navigator.share({
            title: '{{ $document->name }}',
            text: 'Check out this document',
            url: url
        }).catch(err => console.log('Error sharing:', err));
    } else {
        // Copy to clipboard
        navigator.clipboard.writeText(url).then(() => {
            Swal.fire({
                icon: 'success',
                title: 'Link Copied!',
                text: 'Document link telah disalin ke clipboard',
                timer: 2000,
                showConfirmButton: false
            });
        });
    }
}
</script>
@endpush

resources\views\layouts\app.blade.php:
<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="csrf-token" content="{{ csrf_token() }}">
    <title>{{ $title ?? 'Dashboard' }} - Hansen CRM</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <!-- Custom CSS -->
    <link rel="stylesheet" href="{{ asset('css/custom.css') }}">

    <style>
        :root {
            --sidebar-width: 250px;
            --navbar-height: 60px;
            --primary-color: #1a73e8;
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: #f5f5f5;
        }

        /* Navbar */
        .navbar {
            height: var(--navbar-height);
            background-color: var(--primary-color) !important;
            box-shadow: 0 2px 4px rgba(0,0,0,0.08);
            z-index: 1000;
        }

        /* Notification Styles */
        .notification-menu {
            width: 350px;
            max-height: 400px;
            overflow-y: auto;
        }

        .notification-dropdown-item {
            padding: 0.75rem 1rem;
            border-bottom: 1px solid #eee;
        }

        .notification-dropdown-item:hover {
            background-color: #f8f9fa;
        }

        .notification-icon-small {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 14px;
        }

        .notification-badge {
            font-size: 0.65em;
            min-width: 18px;
            height: 18px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        /* Toast Container */
        .toast-container {
            z-index: 1060;
        }

        .notification-toast {
            min-width: 300px;
        }

        /* Sidebar */
        .sidebar {
            position: fixed;
            top: var(--navbar-height);
            left: 0;
            bottom: 0;
            width: var(--sidebar-width);
            background-color: #fff;
            border-right: 1px solid #e0e0e0;
            overflow-y: auto;
            z-index: 100;
            transition: all 0.3s;
        }

        .sidebar .nav-link {
            color: #6c757d;
            padding: 0.75rem 1rem;
            border-radius: 6px;
            margin-bottom: 0.25rem;
            transition: all 0.3s;
        }

        .sidebar .nav-link:hover {
            background-color: rgba(26, 115, 232, 0.08);
            color: var(--primary-color);
        }

        .sidebar .nav-link.active {
            background-color: rgba(26, 115, 232, 0.12);
            color: var(--primary-color);
            font-weight: 600;
        }

        /* Main Content */
        .main-content {
            margin-left: var(--sidebar-width);
            margin-top: var(--navbar-height);
            padding: 2rem;
            min-height: calc(100vh - var(--navbar-height));
        }

        /* Cards */
        .card {
            border: none;
            border-radius: 8px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            background-color: #fff;
        }

        .card-header {
            background-color: transparent;
            border-bottom: 1px solid #e0e0e0;
            padding: 1rem 1.25rem;
            font-weight: 600;
        }

        /* Stat Card */
        .stat-card {
            background: #fff;
            border-radius: 8px;
            padding: 1.5rem;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            height: 100%;
        }

        .stat-value {
            font-size: 2rem;
            font-weight: 700;
            margin: 0.5rem 0;
        }

        /* Icon Box */
        .icon-box {
            width: 48px;
            height: 48px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        /* Chart Container Fix */
        .chart-container {
            position: relative;
            height: 300px !important;
        }

        .chart-container-small {
            position: relative;
            height: 200px !important;
        }

        /* Table */
        .table {
            font-size: 14px;
        }

        .table thead th {
            border-bottom: 2px solid #e0e0e0;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 12px;
            color: #6c757d;
        }

        /* Form Label Required */
        .form-label.required:after {
            content: " *";
            color: red;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
            }
            .sidebar.active {
                transform: translateX(0);
            }
            .main-content {
                margin-left: 0;
            }
            .main-content.active {
                margin-left: var(--sidebar-width);
            }
            .notification-menu {
                width: 300px;
            }

            .notification-dropdown .nav-link {
                padding: 0.5rem 0.75rem;
            }
        }
    </style>

    <!-- Pusher JS and Echo Polyfill -->
    <script src="https://cdn.jsdelivr.net/npm/pusher-js@7.0.3/dist/web/pusher.min.js"></script>
    <script>
        // Definisikan Echo global
        window.Echo = (function() {
            const Echo = function(options) {
                this.options = options;
                this.connector = options.broadcaster === 'pusher' ? new Pusher(options.key, {
                    cluster: options.cluster,
                    forceTLS: options.forceTLS
                }) : null;
            };

            Echo.prototype.channel = function(channel) {
                const self = this;
                return {
                    listen: function(event, callback) {
                        if (self.connector) {
                            const ch = self.connector.subscribe(channel);
                            ch.bind(event, callback);
                        }
                        return this;
                    }
                };
            };

            Echo.prototype.private = function(channel) {
                return this.channel('private-' + channel);
            };

            Echo.prototype.presence = function(channel) {
                return this.channel('presence-' + channel);
            };

            return Echo;
        })();
    </script>

    <!-- Chart.js in the head for earlier loading -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    {{ $styles ?? '' }}
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark">
        <div class="container-fluid">
            <!-- Brand -->
            <a class="navbar-brand" href="{{ route('dashboard') }}">
                <i class="bi bi-building me-2"></i>Hansen CRM
            </a>

            <!-- Mobile Toggle -->
            <button class="navbar-toggler" type="button" id="sidebarToggle">
                <span class="navbar-toggler-icon"></span>
            </button>

            <!-- Navbar Content -->
            <div class="collapse navbar-collapse" id="navbarNav">
                <!-- Left Side Menu (Optional) -->
                <ul class="navbar-nav me-auto">
                    <!-- Menu items bisa ditambahkan di sini jika diperlukan -->
                </ul>

                <!-- Right Side Menu -->
                <ul class="navbar-nav ms-auto">
                    <!-- Notification Bell -->
                    <li class="nav-item dropdown notification-dropdown me-3">
                        <a class="nav-link position-relative" href="#" id="notificationDropdown"
                           role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="bi bi-bell fs-5"></i>
                            <span class="notification-badge position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger"
                                  style="display: none;">
                                0
                            </span>
                        </a>
                        <div class="dropdown-menu dropdown-menu-end notification-menu" aria-labelledby="notificationDropdown">
                            <div class="dropdown-header d-flex justify-content-between align-items-center">
                                <h6 class="mb-0">Notifikasi</h6>
                                <a href="{{ route('notifications.index') }}" class="text-decoration-none small">
                                    Lihat Semua
                                </a>
                            </div>
                            <div class="dropdown-divider"></div>
                            <div class="notification-list-dropdown" id="notificationList">
                                <div class="text-center py-3">
                                    <div class="spinner-border spinner-border-sm text-primary" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                </div>
                            </div>
                            <div class="dropdown-divider"></div>
                            <div class="dropdown-footer text-center">
                                <a href="{{ route('notifications.index') }}" class="text-decoration-none">
                                    Lihat Semua Notifikasi
                                </a>
                            </div>
                        </div>
                    </li>

                    <!-- User Dropdown -->
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle d-flex align-items-center" href="#" id="userDropdown"
                           role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <img src="https://ui-avatars.com/api/?name={{ urlencode(Auth::user()->name) }}&background=fff&color=1a73e8"
                                 alt="{{ Auth::user()->name }}"
                                 class="rounded-circle me-2"
                                 width="32" height="32">
                            <span>{{ Auth::user()->name }}</span>
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end">
                            <li>
                                <h6 class="dropdown-header">{{ Auth::user()->name }}</h6>
                            </li>
                            <li><hr class="dropdown-divider"></li>
                            <li>
                                <a class="dropdown-item" href="{{ route('profile.edit') }}">
                                    <i class="bi bi-person me-2"></i>Profile
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item" href="{{ route('notifications.index') }}">
                                    <i class="bi bi-bell me-2"></i>Notifikasi
                                </a>
                            </li>
                            <li><hr class="dropdown-divider"></li>
                            <li>
                                <form method="POST" action="{{ route('logout') }}">
                                    @csrf
                                    <button type="submit" class="dropdown-item">
                                        <i class="bi bi-box-arrow-right me-2"></i>Logout
                                    </button>
                                </form>
                            </li>
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Sidebar -->
    <nav class="sidebar" id="sidebar">
        <div class="p-3">
            <ul class="nav flex-column">
                <li class="nav-item">
                    <a class="nav-link {{ request()->routeIs('dashboard') ? 'active' : '' }}" href="{{ route('dashboard') }}">
                        <i class="bi bi-speedometer2 me-2"></i>Dashboard
                    </a>
                </li>

                @php
                    $userRole = Auth::user()->getRoleNames()->first() ?? '';
                @endphp

                @if(in_array($userRole, ['admin', 'manager', 'marketing']))
                <li class="nav-item">
                    <a class="nav-link {{ request()->routeIs('clients.*') ? 'active' : '' }}" href="{{ route('clients.index') }}">
                        <i class="bi bi-people me-2"></i>Clients
                    </a>
                </li>

                <li class="nav-item">
                    <a class="nav-link {{ request()->routeIs('projects.*') ? 'active' : '' }}" href="{{ route('projects.index') }}">
                        <i class="bi bi-building me-2"></i>Projects
                    </a>
                </li>
                @endif

                <li class="nav-item">
                    <a class="nav-link {{ request()->routeIs('surveys.*') ? 'active' : '' }}" href="{{ route('surveys.index') }}">
                        <i class="bi bi-clipboard-check me-2"></i>Survey
                    </a>
                </li>

                @if(in_array($userRole, ['admin', 'manager', 'marketing']))
                <li class="nav-item">
                    <a class="nav-link {{ request()->routeIs('reports.*') ? 'active' : '' }}"
                    href="{{ route('reports.index') }}">
                        <i class="bi bi-file-earmark-bar-graph me-2"></i>
                        <span>Reports</span>
                    </a>
                </li>
                @endif

                <li class="nav-item">
                    <a class="nav-link {{ request()->routeIs('profile') || request()->routeIs('profile.edit') ? 'active' : '' }}"
                       href="{{ route('profile.edit') }}">
                        <i class="bi bi-person-circle me-2"></i>My Profile
                    </a>
                </li>

                @if($userRole == 'admin')
                <li class="nav-item mt-3">
                    <h6 class="text-muted px-3">ADMIN</h6>
                </li>
                <li class="nav-item">
                    <a class="nav-link {{ request()->routeIs('users.*') ? 'active' : '' }}" href="{{ route('users.index') }}">
                        <i class="bi bi-people-fill me-2"></i>Users
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link {{ request()->routeIs('settings.*') ? 'active' : '' }}"
                    href="{{ route('settings.index') }}">
                        <i class="bi bi-gear me-2"></i>
                        <span>Settings</span>
                    </a>
                </li>
                @endif
            </ul>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="main-content" id="content">
        <!-- Alerts -->
        @if(session('success'))
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                {{ session('success') }}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        @endif

        @if(session('error'))
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            {{ session('error') }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
        @endif

        @yield('content')
    </main>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    @vite(['resources/css/app.css', 'resources/js/app.js'])

    <!-- Custom Scripts -->
    <script>
        // Toggle sidebar on mobile
        document.getElementById('sidebarToggle').addEventListener('click', function() {
            document.getElementById('sidebar').classList.toggle('active');
            document.getElementById('content').classList.toggle('active');
        });

        // Initialize tooltips
        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));

        // Auto-hide alerts after 5 seconds
        window.setTimeout(function() {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(function(alert) {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);
    </script>

    <!-- Notification Scripts -->
    <script>
        // Initialize Echo with Pusher
        window.Echo = new Echo({
            broadcaster: 'pusher',
            key: '{{ config('broadcasting.connections.pusher.key') }}',
            cluster: '{{ config('broadcasting.connections.pusher.options.cluster') }}',
            forceTLS: true,
            auth: {
                headers: {
                    'X-CSRF-TOKEN': '{{ csrf_token() }}'
                }
            }
        });

        // Listen for notifications with correct event name
        if (window.Echo) {
            // Listen for Laravel notifications using the correct event name
            Echo.private('App.Models.User.{{ Auth::id() }}')
                .listen('.Illuminate\\Notifications\\Events\\BroadcastNotificationCreated', function(notification) {
                    console.log('Received notification:', notification);

                    // Show toast notification
                    showNotificationToast(notification);

                    // Update notification badge
                    updateNotificationBadge();

                    // Reload notification dropdown
                    loadNotificationDropdown();

                    // Play notification sound (optional)
                    playNotificationSound();
                });

            // Listen for custom events
            Echo.private('user.' + {{ Auth::id() }})
                .listen('.survey.assigned', (e) => {
                    console.log('New survey assigned:', e);

                    // Tampilkan notifikasi
                    showNotification('Survey Baru', `Anda telah ditugaskan untuk survey "${e.title}" untuk klien ${e.client_name}`, 'info');

                    // Update jumlah pending surveys jika ada
                    const pendingSurveysElement = document.getElementById('pending-surveys-count');
                    if (pendingSurveysElement) {
                        const currentCount = parseInt(pendingSurveysElement.textContent);
                        pendingSurveysElement.textContent = currentCount + 1;
                    }
                });
        }

        // Load notifications on page load
        document.addEventListener('DOMContentLoaded', function() {
            loadNotificationDropdown();
            updateNotificationBadge();

            // Refresh notifications every 30 seconds
            setInterval(() => {
                updateNotificationBadge();
            }, 30000);
        });

        // Load notification dropdown
        function loadNotificationDropdown() {
            fetch('{{ route("notifications.unread") }}')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    const listContainer = document.getElementById('notificationList');

                    if (!data.notifications || data.notifications.length === 0) {
                        listContainer.innerHTML = `
                            <div class="text-center py-3 text-muted">
                                <i class="bi bi-bell-slash d-block mb-2"></i>
                                <small>Tidak ada notifikasi baru</small>
                            </div>
                        `;
                    } else {
                        let html = '';
                        data.notifications.forEach(notification => {
                            html += `
                                <a href="/notifications/${notification.id}"
                                class="dropdown-item notification-dropdown-item">
                                    <div class="d-flex align-items-start">
                                        <div class="notification-icon-small me-2">
                                            <i class="${notification.icon} text-${notification.color}"></i>
                                        </div>
                                        <div class="flex-1">
                                            <div class="small text-truncate">${notification.data.message}</div>
                                            <small class="text-muted">${notification.time}</small>
                                        </div>
                                    </div>
                                </a>
                            `;
                        });
                        listContainer.innerHTML = html;
                    }
                })
                .catch(error => {
                    console.log('Error loading notifications:', error);
                    const listContainer = document.getElementById('notificationList');
                    listContainer.innerHTML = `
                        <div class="text-center py-3 text-muted">
                            <small>Error loading notifications</small>
                        </div>
                    `;
                });
        }

        // Update notification badge
        function updateNotificationBadge() {
            fetch('{{ route("notifications.unread") }}')
                .then(response => response.json())
                .then(data => {
                    const badge = document.querySelector('.notification-badge');
                    if (data.unread_count > 0) {
                        badge.textContent = data.unread_count > 99 ? '99+' : data.unread_count;
                        badge.style.display = 'inline-block';
                    } else {
                        badge.style.display = 'none';
                    }
                })
                .catch(error => {
                    console.log('Error updating badge:', error);
                });
        }

        // Show notification toast
        function showNotificationToast(notification) {
            // Get data from the notification object
            const title = notification.title || 'Notifikasi Baru';
            const message = notification.body || notification.message ||
                        (notification.data ? notification.data.message : '');
            const type = notification.type || 'info';
            const time = notification.time || new Date().toLocaleTimeString();

            // Create toast element
            const toastHtml = `
                <div class="toast notification-toast" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="toast-header">
                        <i class="${getNotificationIcon(type)} text-primary me-2"></i>
                        <strong class="me-auto">${title}</strong>
                        <small>${time}</small>
                        <button type="button" class="btn-close" data-bs-dismiss="toast"></button>
                    </div>
                    <div class="toast-body">
                        ${message}
                    </div>
                </div>
            `;

            // Add to toast container
            let toastContainer = document.getElementById('toastContainer');
            if (!toastContainer) {
                const container = document.createElement('div');
                container.id = 'toastContainer';
                container.className = 'toast-container position-fixed bottom-0 end-0 p-3';
                document.body.appendChild(container);
                toastContainer = container;
            }

            const toastElement = document.createElement('div');
            toastElement.innerHTML = toastHtml;
            toastContainer.appendChild(toastElement.firstElementChild);

            // Initialize and show toast
            const toast = new bootstrap.Toast(toastElement.firstElementChild, {
                autohide: true,
                delay: 5000
            });
            toast.show();
        }

        // Show notification (for custom events)
        function showNotification(title, message, type = 'info') {
            // Create notification element
            const notification = document.createElement('div');
            notification.className = `alert alert-${type} alert-dismissible fade show notification-toast`;
            notification.innerHTML = `
                <strong>${title}</strong>
                <p>${message}</p>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            `;

            // Add to notification container
            const container = document.getElementById('notification-container');
            if (container) {
                container.appendChild(notification);
            } else {
                // Create container if it doesn't exist
                const newContainer = document.createElement('div');
                newContainer.id = 'notification-container';
                newContainer.className = 'position-fixed top-0 end-0 p-3';
                newContainer.style.zIndex = '1050';
                document.body.appendChild(newContainer);
                newContainer.appendChild(notification);
            }

            // Auto dismiss after 5 seconds
            setTimeout(() => {
                notification.classList.remove('show');
                setTimeout(() => {
                    notification.remove();
                }, 300);
            }, 5000);
        }

        // Get notification icon based on type
        function getNotificationIcon(type) {
            const icons = {
                'project_status_changed': 'bi-building',
                'survey_assigned': 'bi-clipboard-check',
                'document_uploaded': 'bi-file-earmark',
                'client_assigned': 'bi-person-plus'
            };
            return icons[type] || 'bi-bell';
        }

        // Play notification sound
        function playNotificationSound() {
            const audio = new Audio('/sounds/notification.mp3');
            audio.volume = 0.5;
            audio.play().catch(e => console.log('Could not play notification sound'));
        }
    </script>

    {{ $scripts ?? '' }}

    <!-- Notification Container -->
    <div id="notification-container" class="position-fixed top-0 end-0 p-3" style="z-index: 1050;"></div>
</body>
</html>

resources\views\layouts\auth.blade.php:
<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="csrf-token" content="{{ csrf_token() }}">

    <title>@yield('title') - {{ config('app.name', 'Laravel') }}</title>

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">

    <!-- Custom Styles -->
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f8f9fa;
            min-height: 100vh;
            display: flex;
            align-items: center;
        }
    </style>

    @stack('styles')
</head>
<body>
    <main class="w-100">
        @yield('content')
    </main>

    <!-- Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

    @stack('scripts')
</body>
</html>

resources\views\layouts\guest.blade.php:
<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="csrf-token" content="{{ csrf_token() }}">
    <title>@yield('title') - Hansen CRM</title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <!-- Custom CSS -->
    <link rel="stylesheet" href="{{ asset('css/custom.css') }}">
    
    <style>
        body {
            background: linear-gradient(135deg, #1a73e8 0%, #1557b0 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }
    </style>
</head>
<body>
    @yield('content')
    
    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

resources\views\layouts\mobile.blade.php:
<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <meta name="csrf-token" content="{{ csrf_token() }}">
    <title>@yield('title') - {{ config('app.name') }}</title>
    
    <!-- PWA Meta Tags -->
    <meta name="theme-color" content="#1a73e8">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <link rel="manifest" href="{{ asset('manifest.json') }}">
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    
    <!-- Styles -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <link rel="stylesheet" href="{{ asset('css/custom.css') }}">
    <link rel="stylesheet" href="{{ asset('css/mobile.css') }}">
    
    @stack('styles')
</head>
<body class="mobile-body">
    <!-- Mobile Header -->
    <nav class="mobile-header fixed-top bg-primary text-white">
        <div class="container-fluid">
            <div class="d-flex align-items-center justify-content-between py-3">
                <div class="d-flex align-items-center">
                    @if(!request()->routeIs('dashboard'))
                    <a href="javascript:history.back()" class="text-white me-3">
                        <i class="bi bi-arrow-left fs-4"></i>
                    </a>
                    @endif
                    <h5 class="mb-0">@yield('title', 'Hansen CRM')</h5>
                </div>
                <div>
                    @yield('header-actions')
                </div>
            </div>
        </div>
    </nav>
    
    <!-- Main Content -->
    <main class="mobile-main">
        @yield('content')
    </main>
    
    <!-- Mobile Bottom Navigation -->
    <nav class="mobile-bottom-nav fixed-bottom bg-white border-top">
        <div class="container-fluid">
            <div class="row text-center">
                <div class="col-3">
                    <a href="{{ route('dashboard') }}" class="nav-link {{ request()->routeIs('dashboard') ? 'active' : '' }}">
                        <i class="bi bi-house-door"></i>
                        <span>Home</span>
                    </a>
                </div>
                <div class="col-3">
                    <a href="{{ route('surveys.index') }}" class="nav-link {{ request()->routeIs('surveys.*') ? 'active' : '' }}">
                        <i class="bi bi-clipboard-check"></i>
                        <span>Survey</span>
                    </a>
                </div>
                <div class="col-3">
                    <a href="{{ route('notifications.index') }}" class="nav-link {{ request()->routeIs('notifications.*') ? 'active' : '' }}">
                        <i class="bi bi-bell"></i>
                        <span>Notifikasi</span>
                        @if($unreadNotifications ?? 0 > 0)
                        <span class="badge bg-danger">{{ $unreadNotifications }}</span>
                        @endif
                    </a>
                </div>
                <div class="col-3">
                    <a href="{{ route('profile.edit') }}" class="nav-link {{ request()->routeIs('profile.*') ? 'active' : '' }}">
                        <i class="bi bi-person"></i>
                        <span>Profil</span>
                    </a>
                </div>
            </div>
        </div>
    </nav>
    
    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    
    <!-- PWA Service Worker -->
    <script>
        if ('serviceWorker' in navigator) {
            navigator.serviceWorker.register('/service-worker.js');
        }
    </script>
    
    @stack('scripts')
</body>
</html>

resources\views\layouts\navigation.blade.php:
<nav x-data="{ open: false }" class="bg-white border-b border-gray-100">
    <!-- Primary Navigation Menu -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between h-16">
            <div class="flex">
                <!-- Logo -->
                <div class="shrink-0 flex items-center">
                    <a href="{{ route('dashboard') }}">
                        <x-application-logo class="block h-9 w-auto fill-current text-gray-800" />
                    </a>
                </div>

                <!-- Navigation Links -->
                <div class="hidden space-x-8 sm:-my-px sm:ms-10 sm:flex">
                    <x-nav-link :href="route('dashboard')" :active="request()->routeIs('dashboard')">
                        {{ __('Dashboard') }}
                    </x-nav-link>
                </div>
            </div>

            <!-- Settings Dropdown -->
            <div class="hidden sm:flex sm:items-center sm:ms-6">
                <x-dropdown align="right" width="48">
                    <x-slot name="trigger">
                        <button class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none transition ease-in-out duration-150">
                            <div>{{ Auth::user()->name }}</div>

                            <div class="ms-1">
                                <svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                                </svg>
                            </div>
                        </button>
                    </x-slot>

                    <x-slot name="content">
                        <x-dropdown-link :href="route('profile.edit')">
                            {{ __('Profile') }}
                        </x-dropdown-link>

                        <!-- Authentication -->
                        <form method="POST" action="{{ route('logout') }}">
                            @csrf

                            <x-dropdown-link :href="route('logout')"
                                    onclick="event.preventDefault();
                                                this.closest('form').submit();">
                                {{ __('Log Out') }}
                            </x-dropdown-link>
                        </form>
                    </x-slot>
                </x-dropdown>
            </div>

            <!-- Hamburger -->
            <div class="-me-2 flex items-center sm:hidden">
                <button @click="open = ! open" class="inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 focus:text-gray-500 transition duration-150 ease-in-out">
                    <svg class="h-6 w-6" stroke="currentColor" fill="none" viewBox="0 0 24 24">
                        <path :class="{'hidden': open, 'inline-flex': ! open }" class="inline-flex" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                        <path :class="{'hidden': ! open, 'inline-flex': open }" class="hidden" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
        </div>
    </div>

    <!-- Responsive Navigation Menu -->
    <div :class="{'block': open, 'hidden': ! open}" class="hidden sm:hidden">
        <div class="pt-2 pb-3 space-y-1">
            <x-responsive-nav-link :href="route('dashboard')" :active="request()->routeIs('dashboard')">
                {{ __('Dashboard') }}
            </x-responsive-nav-link>
        </div>

        <!-- Responsive Settings Options -->
        <div class="pt-4 pb-1 border-t border-gray-200">
            <div class="px-4">
                <div class="font-medium text-base text-gray-800">{{ Auth::user()->name }}</div>
                <div class="font-medium text-sm text-gray-500">{{ Auth::user()->email }}</div>
            </div>

            <div class="mt-3 space-y-1">
                <x-responsive-nav-link :href="route('profile.edit')">
                    {{ __('Profile') }}
                </x-responsive-nav-link>

                <!-- Authentication -->
                <form method="POST" action="{{ route('logout') }}">
                    @csrf

                    <x-responsive-nav-link :href="route('logout')"
                            onclick="event.preventDefault();
                                        this.closest('form').submit();">
                        {{ __('Log Out') }}
                    </x-responsive-nav-link>
                </form>
            </div>
        </div>
    </div>
</nav>


resources\views\notifications\index.blade.php:
@extends('layouts.app')

@section('title', 'Notifikasi')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">Notifikasi</h4>
            <p class="text-muted mb-0">{{ $unreadCount }} notifikasi belum dibaca</p>
        </div>
        <div>
            @if($groupedNotifications->count() > 0)
            <form action="{{ route('notifications.mark-all-read') }}" method="POST" class="d-inline">
                @csrf
                <button type="submit" class="btn btn-outline-primary btn-sm">
                    <i class="bi bi-check-all me-2"></i>Tandai Semua Dibaca
                </button>
            </form>
            
            <form action="{{ route('notifications.clear-all') }}" method="POST" class="d-inline"
                  onsubmit="return confirm('Hapus semua notifikasi?')">
                @csrf
                @method('DELETE')
                <button type="submit" class="btn btn-outline-danger btn-sm">
                    <i class="bi bi-trash me-2"></i>Hapus Semua
                </button>
            </form>
            @endif
        </div>
    </div>

    <!-- Notifications List -->
    <div class="card">
        <div class="card-body p-0">
            @forelse($groupedNotifications as $date => $dateNotifications)
            <div class="notification-date-group">
                <div class="notification-date-header">
                    <h6 class="mb-0">
                        @if($date == now()->format('Y-m-d'))
                            Hari Ini
                        @elseif($date == now()->subDay()->format('Y-m-d'))
                            Kemarin
                        @else
                            {{ \Carbon\Carbon::parse($date)->format('d M Y') }}
                        @endif
                    </h6>
                </div>
                
                <div class="notification-list">
                    @foreach($dateNotifications as $notification)
                    <div class="notification-item {{ !$notification->read_at ? 'unread' : '' }}" 
                         data-notification-id="{{ $notification->id }}">
                        <div class="notification-icon">
                            @php
                                $icon = '';
                                $color = '';
                                
                                switch($notification->type) {
                                    case 'App\Notifications\ProjectStatusChanged':
                                        $icon = 'bi-building';
                                        $color = 'primary';
                                        break;
                                    case 'App\Notifications\SurveyAssigned':
                                        $icon = 'bi-clipboard-check';
                                        $color = 'success';
                                        break;
                                    case 'App\Notifications\DocumentUploaded':
                                        $icon = 'bi-file-earmark';
                                        $color = 'info';
                                        break;
                                    case 'App\Notifications\NewClientAssigned':
                                        $icon = 'bi-person-plus';
                                        $color = 'warning';
                                        break;
                                    default:
                                        $icon = 'bi-bell';
                                        $color = 'secondary';
                                }
                            @endphp
                            <div class="icon-circle bg-{{ $color }}">
                                <i class="{{ $icon }} text-white"></i>
                            </div>
                        </div>
                        
                        <div class="notification-content">
                            <a href="{{ route('notifications.show', $notification->id) }}" 
                               class="notification-link">
                                <h6 class="mb-1">{{ $notification->data['message'] ?? 'New notification' }}</h6>
                                <p class="mb-0 text-muted small">
                                    @if(isset($notification->data['changed_by']))
                                        Oleh {{ $notification->data['changed_by'] }}
                                    @elseif(isset($notification->data['assigned_by']))
                                        Oleh {{ $notification->data['assigned_by'] }}
                                    @endif
                                </p>
                            </a>
                        </div>
                        
                        <div class="notification-meta">
                            <small class="text-muted">{{ $notification->created_at->format('H:i') }}</small>
                            <div class="notification-actions">
                                @if(!$notification->read_at)
                                <button class="btn btn-sm btn-link mark-as-read" 
                                        data-notification-id="{{ $notification->id }}"
                                        title="Tandai sebagai dibaca">
                                    <i class="bi bi-check"></i>
                                </button>
                                @endif
                                <button class="btn btn-sm btn-link delete-notification" 
                                        data-notification-id="{{ $notification->id }}"
                                        title="Hapus">
                                    <i class="bi bi-x"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    @endforeach
                </div>
            </div>
            @empty
            <div class="text-center py-5">
                <i class="bi bi-bell-slash fs-1 text-muted d-block mb-3"></i>
                <h5>Tidak Ada Notifikasi</h5>
                <p class="text-muted">Semua notifikasi akan muncul di sini</p>
            </div>
            @endforelse
        </div>
    </div>

    <!-- Pagination -->
    @if($notifications->hasPages())
        <div class="mt-4">
            {{ $notifications->links() }}
        </div>
    @endif
</div>
@endsection

@push('styles')
<style>
.notification-date-header {
    padding: 0.75rem 1.25rem;
    background-color: #f8f9fa;
    border-bottom: 1px solid #dee2e6;
    position: sticky;
    top: 0;
    z-index: 10;
}

.notification-item {
    display: flex;
    align-items: start;
    padding: 1rem 1.25rem;
    border-bottom: 1px solid #eee;
    transition: all 0.3s ease;
    position: relative;
}

.notification-item:hover {
    background-color: #f8f9fa;
}

.notification-item.unread {
    background-color: #e8f4fd;
    border-left: 4px solid var(--primary-color);
}

.notification-icon {
    margin-right: 1rem;
}

.icon-circle {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.notification-content {
    flex: 1;
    min-width: 0;
}

.notification-link {
    text-decoration: none;
    color: inherit;
}

.notification-link:hover h6 {
    color: var(--primary-color);
}

.notification-meta {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    margin-left: 1rem;
}

.notification-actions {
    display: flex;
    gap: 0.25rem;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.notification-item:hover .notification-actions {
    opacity: 1;
}

.notification-actions .btn-link {
    padding: 0.25rem;
    color: #6c757d;
}

.notification-actions .btn-link:hover {
    color: var(--primary-color);
}

@media (max-width: 768px) {
    .notification-item {
        padding: 0.75rem;
    }
    
    .notification-actions {
        opacity: 1;
    }
}
</style>
@endpush

@push('scripts')
<script>
// Mark as read
document.querySelectorAll('.mark-as-read').forEach(button => {
    button.addEventListener('click', function(e) {
        e.preventDefault();
        const notificationId = this.dataset.notificationId;
        
        fetch('{{ route("notifications.mark-as-read") }}', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': '{{ csrf_token() }}'
            },
            body: JSON.stringify({
                notification_id: notificationId
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const item = document.querySelector(`.notification-item[data-notification-id="${notificationId}"]`);
                item.classList.remove('unread');
                this.remove();
                updateNotificationBadge();
            }
        });
    });
});

// Delete notification
document.querySelectorAll('.delete-notification').forEach(button => {
    button.addEventListener('click', function(e) {
        e.preventDefault();
        const notificationId = this.dataset.notificationId;
        
        if (confirm('Hapus notifikasi ini?')) {
            fetch(`{{ route("notifications.index") }}/${notificationId}`, {
                method: 'DELETE',
                headers: {
                    'X-CSRF-TOKEN': '{{ csrf_token() }}'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const item = document.querySelector(`.notification-item[data-notification-id="${notificationId}"]`);
                    item.remove();
                    updateNotificationBadge();
                }
            });
        }
    });
});

function updateNotificationBadge() {
    // Update the notification badge in the navbar
    fetch('{{ route("notifications.unread") }}')
        .then(response => response.json())
        .then(data => {
            const badge = document.querySelector('.notification-badge');
            if (badge) {
                if (data.unread_count > 0) {
                    badge.textContent = data.unread_count;
                    badge.style.display = 'inline-block';
                } else {
                    badge.style.display = 'none';
                }
            }
        });
}
</script>
@endpush

resources\views\notifications\show.blade.php:
@extends('layouts.app')

@section('content')
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card shadow-lg">
                    <div class="card-header bg-primary text-white">
                        <h4 class="mb-0">Notification Details</h4>
                    </div>
                    <div class="card-body">
                        <div class="notification-details">
                            <h5 class="font-weight-bold mb-3">
                                {{ $notification->data['title'] ?? 'No Title' }}
                            </h5>
                            <p class="mb-3">
                                {{ $notification->data['message'] ?? 'No message available' }}
                            </p>
                            <p class="text-muted">
                                <strong>Created at:</strong> {{ $notification->created_at->toFormattedDateString() }}
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
@endsection

resources\views\pipeline\analytics.blade.php:
@extends('layouts.app')

@section('title', 'Pipeline Analytics')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">Pipeline Analytics</h4>
            <p class="text-muted mb-0">Insights dan analisis performa pipeline</p>
        </div>
        <div>
            <button class="btn btn-primary btn-sm" onclick="window.print()">
                <i class="bi bi-printer me-2"></i>Print Report
            </button>
        </div>
    </div>

    <!-- Analytics Cards -->
    <div class="row g-3 mb-4">
        <!-- Pipeline Velocity -->
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-header">
                    <h6 class="mb-0">Pipeline Velocity</h6>
                    <small class="text-muted">Average days in each stage</small>
                </div>
                <div class="card-body">
                    <canvas id="velocityChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Win/Loss Analysis -->
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-header">
                    <h6 class="mb-0">Win/Loss Analysis</h6>
                    <small class="text-muted">Project outcomes</small>
                </div>
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-6">
                            <canvas id="winLossChart"></canvas>
                        </div>
                        <div class="col-6">
                            <div class="mb-3">
                                <div class="d-flex justify-content-between mb-1">
                                    <span>Won</span>
                                    <strong class="text-success">{{ $winLossData['won'] }}</strong>
                                </div>
                                <div class="d-flex justify-content-between mb-1">
                                    <span>Lost</span>
                                    <strong class="text-danger">{{ $winLossData['lost'] }}</strong>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <span>In Progress</span>
                                    <strong class="text-warning">{{ $winLossData['in_progress'] }}</strong>
                                </div>
                            </div>
                            <hr>
                            <div class="text-center">
                                <h5 class="mb-0">
                                    @php
                                        $total = array_sum($winLossData);
                                        $winRate = $total > 0 ? round(($winLossData['won'] / $total) * 100, 1) : 0;
                                    @endphp
                                    {{ $winRate }}%
                                </h5>
                                <small class="text-muted">Win Rate</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Monthly Trend -->
    <div class="card mb-4">
        <div class="card-header">
            <h6 class="mb-0">Monthly Pipeline Value Trend</h6>
        </div>
        <div class="card-body">
            <canvas id="monthlyTrendChart" height="100"></canvas>
        </div>
    </div>

    <!-- Top Performers -->
    <div class="card">
        <div class="card-header">
            <h6 class="mb-0">Top Performers</h6>
            <small class="text-muted">By deal value</small>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Rank</th>
                            <th>PIC</th>
                            <th>Total Projects</th>
                            <th>Deal Value</th>
                            <th>Performance</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach($topPerformers as $index => $performer)
                        <tr>
                            <td>
                                <span class="badge bg-primary">{{ $index + 1 }}</span>
                            </td>
                            <td>
                                <div class="d-flex align-items-center">
                                    <img src="https://ui-avatars.com/api/?name={{ urlencode($performer->pic->name) }}" 
                                         alt="{{ $performer->pic->name }}"
                                         class="rounded-circle me-2"
                                         width="32" height="32">
                                    {{ $performer->pic->name }}
                                </div>
                            </td>
                            <td>{{ $performer->total_projects }}</td>
                            <td>
                                <strong>Rp {{ number_format($performer->total_value/1000000, 0) }}M</strong>
                            </td>
                            <td>
                                @php
                                    $maxValue = $topPerformers->first()->total_value;
                                    $percentage = $maxValue > 0 ? ($performer->total_value / $maxValue) * 100 : 0;
                                @endphp
                                <div class="progress" style="height: 10px;">
                                    <div class="progress-bar bg-success" style="width: {{ $percentage }}%"></div>
                                </div>
                            </td>
                        </tr>
                        @endforeach
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
// Pipeline Velocity Chart
const velocityCtx = document.getElementById('velocityChart').getContext('2d');
new Chart(velocityCtx, {
    type: 'bar',
    data: {
        labels: {!! json_encode($velocityData->pluck('from_status')) !!},
        datasets: [{
            label: 'Average Days',
            data: {!! json_encode($velocityData->pluck('avg_days')) !!},
            backgroundColor: '#1a73e8',
            borderRadius: 6
        }]
    },
    options: {
        responsive: true,
        plugins: {
            legend: {
                display: false
            }
        },
        scales: {
            y: {
                beginAtZero: true,
                title: {
                    display: true,
                    text: 'Days'
                }
            }
        }
    }
});

// Win/Loss Chart
const winLossCtx = document.getElementById('winLossChart').getContext('2d');
new Chart(winLossCtx, {
    type: 'doughnut',
    data: {
        labels: ['Won', 'Lost', 'In Progress'],
        datasets: [{
            data: [
                {{ $winLossData['won'] }},
                {{ $winLossData['lost'] }},
                {{ $winLossData['in_progress'] }}
            ],
            backgroundColor: ['#28a745', '#dc3545', '#ffc107'],
            borderWidth: 0
        }]
    },
    options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
            legend: {
                display: false
            }
        }
    }
});

// Monthly Trend Chart
const monthlyTrendCtx = document.getElementById('monthlyTrendChart').getContext('2d');
new Chart(monthlyTrendCtx, {
    type: 'line',
    data: {
        labels: {!! json_encode($monthlyTrend->map(function($item) { 
            return date('M', mktime(0, 0, 0, $item->month, 1));
        })) !!},
        datasets: [{
            label: 'Pipeline Value',
            data: {!! json_encode($monthlyTrend->pluck('total_value')) !!},
            borderColor: '#1a73e8',
            backgroundColor: 'rgba(26, 115, 232, 0.1)',
            borderWidth: 3,
            tension: 0.4,
            fill: true
        }]
    },
    options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
            legend: {
                display: false
            },
            tooltip: {
                callbacks: {
                    label: function(context) {
                        return 'Rp ' + (context.parsed.y / 1000000).toFixed(0) + 'M';
                    }
                }
            }
        },
        scales: {
            y: {
                beginAtZero: true,
                ticks: {
                    callback: function(value) {
                        return 'Rp ' + (value / 1000000).toFixed(0) + 'M';
                    }
                }
            }
        }
    }
});
</script>
@endpush

resources\views\pipeline\funnel.blade.php:
@extends('layouts.app')

@section('title', 'Sales Funnel')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">Sales Funnel</h4>
            <p class="text-muted mb-0">Visualisasi conversion rate di setiap tahapan</p>
        </div>
        <div>
            <a href="{{ route('pipeline.index') }}" class="btn btn-outline-primary btn-sm">
                <i class="bi bi-arrow-left me-2"></i>Back to Pipeline
            </a>
        </div>
    </div>

    <!-- Date Filter -->
    <div class="card mb-4">
        <div class="card-body">
            <form method="GET" action="{{ route('pipeline.funnel') }}" class="row g-3 align-items-end">
                <div class="col-md-4">
                    <label class="form-label">From Date</label>
                    <input type="date" name="date_from" class="form-control" value="{{ $dateFrom }}">
                </div>
                <div class="col-md-4">
                    <label class="form-label">To Date</label>
                    <input type="date" name="date_to" class="form-control" value="{{ $dateTo }}">
                </div>
                <div class="col-md-4">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-funnel me-2"></i>Update Funnel
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Funnel Visualization -->
    <div class="card">
        <div class="card-body">
            <div class="funnel-container">
                @foreach($funnelData as $index => $data)
                <div class="funnel-stage" style="width: {{ 100 - ($index * 10) }}%;">
                    <div class="funnel-block" style="background-color: {{ $data['stage']->color }}">
                        <div class="funnel-content">
                            <h5 class="text-white mb-1">{{ $data['stage']->name }}</h5>
                            <h3 class="text-white mb-0">{{ $data['count'] }}</h3>
                            <small class="text-white-50">projects</small>
                        </div>
                    </div>
                    @if($index < count($funnelData) - 1)
                    <div class="conversion-rate">
                        <i class="bi bi-arrow-down"></i>
                        <span>{{ $data['conversion_rate'] }}%</span>
                    </div>
                    @endif
                </div>
                @endforeach
            </div>
        </div>
    </div>

    <!-- Funnel Stats -->
    <div class="row g-3 mt-4">
        <div class="col-md-4">
            <div class="card">
                <div class="card-body text-center">
                    <h6 class="text-muted mb-2">Total Leads</h6>
                    <h3 class="mb-0">{{ $funnelData[0]['count'] ?? 0 }}</h3>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-body text-center">
                    <h6 class="text-muted mb-2">Total Conversions</h6>
                    <h3 class="mb-0">{{ end($funnelData)['count'] ?? 0 }}</h3>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-body text-center">
                    <h6 class="text-muted mb-2">Overall Conversion Rate</h6>
                    <h3 class="mb-0">
                        @php
                            $first = $funnelData[0]['count'] ?? 0;
                            $last = end($funnelData)['count'] ?? 0;
                            $rate = $first > 0 ? round(($last / $first) * 100, 1) : 0;
                        @endphp
                        {{ $rate }}%
                    </h3>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

@push('styles')
<style>
.funnel-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 2rem 0;
}

.funnel-stage {
    margin-bottom: 1rem;
    position: relative;
    transition: all 0.3s ease;
}

.funnel-block {
    padding: 2rem;
    text-align: center;
    clip-path: polygon(10% 0%, 90% 0%, 100% 100%, 0% 100%);
    position: relative;
}

.funnel-stage:first-child .funnel-block {
    clip-path: none;
    border-radius: 8px 8px 0 0;
}

.funnel-stage:last-child .funnel-block {
    clip-path: polygon(0 0, 100% 0, 90% 100%, 10% 100%);
    border-radius: 0 0 8px 8px;
}

.conversion-rate {
    position: absolute;
    right: -60px;
    top: 50%;
    transform: translateY(-50%);
    text-align: center;
    font-weight: 600;
    color: #666;
}

.conversion-rate i {
    display: block;
    font-size: 24px;
    color: #999;
}

@media (max-width: 768px) {
    .funnel-stage {
        width: 100% !important;
    }
    
    .conversion-rate {
        position: static;
        transform: none;
        margin: 0.5rem 0;
    }
}
</style>
@endpush

resources\views\pipeline\index.blade.php:
@extends('layouts.app')

@section('title', 'Pipeline')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">Sales Pipeline</h4>
            <p class="text-muted mb-0">Track dan kelola progress project dari lead hingga selesai</p>
        </div>
        <div>
            <div class="btn-group me-2">
                <a href="{{ route('pipeline.index', ['view' => 'kanban']) }}" 
                   class="btn btn-sm {{ $viewType == 'kanban' ? 'btn-primary' : 'btn-outline-primary' }}">
                    <i class="bi bi-kanban"></i> Kanban
                </a>
                <a href="{{ route('pipeline.index', ['view' => 'list']) }}" 
                   class="btn btn-sm {{ $viewType == 'list' ? 'btn-primary' : 'btn-outline-primary' }}">
                    <i class="bi bi-list-ul"></i> List
                </a>
                <a href="{{ route('pipeline.funnel') }}" 
                   class="btn btn-sm btn-outline-primary">
                    <i class="bi bi-funnel"></i> Funnel
                </a>
            </div>
            <button class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-bs-target="#filterModal">
                <i class="bi bi-funnel me-2"></i>Filter
            </button>
        </div>
    </div>

    <!-- Metrics Cards -->
    <div class="row g-3 mb-4">
        <div class="col-md-2 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <h5 class="mb-1">{{ $metrics['total_projects'] }}</h5>
                    <small class="text-muted">Total Projects</small>
                </div>
            </div>
        </div>
        <div class="col-md-2 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <h5 class="mb-1">Rp {{ number_format($metrics['total_value']/1000000, 0) }}M</h5>
                    <small class="text-muted">Pipeline Value</small>
                </div>
            </div>
        </div>
        <div class="col-md-2 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <h5 class="mb-1">{{ $metrics['conversion_rate'] }}%</h5>
                    <small class="text-muted">Conversion Rate</small>
                </div>
            </div>
        </div>
        <div class="col-md-2 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <h5 class="mb-1">Rp {{ number_format($metrics['average_deal_size']/1000000, 0) }}M</h5>
                    <small class="text-muted">Avg Deal Size</small>
                </div>
            </div>
        </div>
        <div class="col-md-2 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <h5 class="mb-1">{{ $metrics['win_rate'] }}%</h5>
                    <small class="text-muted">Win Rate</small>
                </div>
            </div>
        </div>
        <div class="col-md-2 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <h5 class="mb-1">Rp {{ number_format($metrics['deal_value']/1000000, 0) }}M</h5>
                    <small class="text-muted">Deal Value</small>
                </div>
            </div>
        </div>
    </div>

    <!-- Pipeline View -->
    @if($viewType == 'kanban')
    <!-- Kanban Board -->
    <div class="kanban-board">
        @foreach($pipeline as $column)
        <div class="kanban-column" data-status="{{ $column['stage']->slug }}">
            <div class="kanban-column-header">
                <div>
                    <h6 class="mb-1">{{ $column['stage']->name }}</h6>
                    <small class="text-muted">
                        {{ $column['count'] }} projects • Rp {{ number_format($column['value']/1000000, 0) }}M
                    </small>
                </div>
                <span class="badge rounded-pill" style="background-color: {{ $column['stage']->color }}">
                    {{ $column['count'] }}
                </span>
            </div>
            
            <div class="kanban-column-body" data-status="{{ $column['stage']->slug }}">
                @foreach($column['projects'] as $project)
                <div class="kanban-card" 
                     data-project-id="{{ $project->id }}"
                     data-project-status="{{ $project->status }}">
                    <div class="d-flex justify-content-between align-items-start mb-2">
                        <h6 class="mb-0 text-truncate">{{ $project->name }}</h6>
                        <div class="dropdown">
                            <button class="btn btn-sm btn-link p-0" data-bs-toggle="dropdown">
                                <i class="bi bi-three-dots-vertical"></i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li>
                                    <a class="dropdown-item" href="{{ route('projects.show', $project) }}">
                                        <i class="bi bi-eye me-2"></i>View Details
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item" href="{{ route('projects.edit', $project) }}">
                                        <i class="bi bi-pencil me-2"></i>Edit
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    
                    <p class="text-muted small mb-2">{{ $project->client->name }}</p>
                    <div class="d-flex justify-content-between align-items-center">
                        <span class="badge bg-secondary">{{ $project->code }}</span>
                        <strong class="text-primary">
                            Rp {{ number_format(($project->deal_value ?? $project->project_value)/1000000, 0) }}M
                        </strong>
                    </div>
                    
                    <div class="mt-2 pt-2 border-top">
                        <div class="d-flex justify-content-between align-items-center">
                            <small class="text-muted">
                                <i class="bi bi-person me-1"></i>{{ $project->pic->name }}
                            </small>
                            <small class="text-muted">
                                {{ $project->created_at->diffForHumans() }}
                            </small>
                        </div>
                    </div>
                </div>
                @endforeach
            </div>
        </div>
        @endforeach
    </div>
    @else
    <!-- List View -->
    <div class="card">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th>Project</th>
                            <th>Client</th>
                            <th>Status</th>
                            <th>Value</th>
                            <th>PIC</th>
                            <th>Created</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach($pipeline as $column)
                            @foreach($column['projects'] as $project)
                            <tr>
                                <td>
                                    <div class="fw-semibold">{{ $project->name }}</div>
                                    <small class="text-muted">{{ $project->code }}</small>
                                </td>
                                <td>{{ $project->client->name }}</td>
                                <td>
                                    <span class="badge" style="background-color: {{ $column['stage']->color }}">
                                        {{ $column['stage']->name }}
                                    </span>
                                </td>
                                <td>
                                    <strong>Rp {{ number_format(($project->deal_value ?? $project->project_value)/1000000, 0) }}M</strong>
                                </td>
                                <td>{{ $project->pic->name }}</td>
                                <td>{{ $project->created_at->format('d M Y') }}</td>
                                <td>
                                    <a href="{{ route('projects.show', $project) }}" class="btn btn-sm btn-outline-primary">
                                        <i class="bi bi-eye"></i>
                                    </a>
                                </td>
                            </tr>
                            @endforeach
                        @endforeach
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    @endif
</div>

<!-- Filter Modal -->
<div class="modal fade" id="filterModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Filter Pipeline</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form method="GET" action="{{ route('pipeline.index') }}">
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Search</label>
                        <input type="text" name="search" class="form-control" 
                               placeholder="Nama project atau client..."
                               value="{{ request('search') }}">
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Date From</label>
                                <input type="date" name="date_from" class="form-control" 
                                       value="{{ request('date_from') }}">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Date To</label>
                                <input type="date" name="date_to" class="form-control" 
                                       value="{{ request('date_to') }}">
                            </div>
                        </div>
                    </div>
                    
                    <input type="hidden" name="view" value="{{ $viewType }}">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Apply Filter</button>
                </div>
            </form>
        </div>
    </div>
</div>
@endsection

@push('styles')
<style>
.kanban-board {
    display: flex;
    gap: 1rem;
    overflow-x: auto;
    padding-bottom: 1rem;
    min-height: 600px;
}

.kanban-column {
    min-width: 320px;
    max-width: 320px;
    background-color: #f8f9fa;
    border-radius: 8px;
    display: flex;
    flex-direction: column;
    max-height: calc(100vh - 300px);
}

.kanban-column-header {
    padding: 1rem;
    background-color: #fff;
    border-radius: 8px 8px 0 0;
    border-bottom: 2px solid #e0e0e0;
    display: flex;
    justify-content: space-between;
    align-items: start;
}

.kanban-column-body {
    padding: 0.5rem;
    overflow-y: auto;
    flex: 1;
}

.kanban-card {
    background-color: #fff;
    border-radius: 6px;
    padding: 1rem;
    margin-bottom: 0.5rem;
    cursor: move;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    transition: all 0.3s ease;
}

.kanban-card:hover {
    box-shadow: 0 4px 6px rgba(0,0,0,0.15);
    transform: translateY(-2px);
}

.kanban-card.dragging {
    opacity: 0.5;
    transform: rotate(3deg);
}

.kanban-column.drag-over {
    background-color: #e3f2fd;
}

/* Custom scrollbar for kanban columns */
.kanban-column-body::-webkit-scrollbar {
    width: 6px;
}

.kanban-column-body::-webkit-scrollbar-track {
    background: transparent;
}

.kanban-column-body::-webkit-scrollbar-thumb {
    background: #ccc;
    border-radius: 3px;
}

.kanban-column-body::-webkit-scrollbar-thumb:hover {
    background: #999;
}
</style>
@endpush

@push('scripts')
<script src="https://cdn.jsdelivr.net/npm/sortablejs@latest/Sortable.min.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Initialize Sortable for each kanban column
    const columns = document.querySelectorAll('.kanban-column-body');
    
    columns.forEach(column => {
        new Sortable(column, {
            group: 'shared',
            animation: 150,
            ghostClass: 'dragging',
            dragClass: 'dragging',
            onStart: function(evt) {
                evt.item.classList.add('dragging');
            },
            onEnd: function(evt) {
                evt.item.classList.remove('dragging');
                
                // Get project ID and new status
                const projectId = evt.item.dataset.projectId;
                const newStatus = evt.to.dataset.status;
                const oldStatus = evt.from.dataset.status;
                
                // If status changed, update in backend
                if (newStatus !== oldStatus) {
                    updateProjectStatus(projectId, newStatus);
                }
            }
        });
    });
});

function updateProjectStatus(projectId, newStatus) {
    // Show loading
    Swal.fire({
        title: 'Updating...',
        allowOutsideClick: false,
        showConfirmButton: false,
        willOpen: () => {
            Swal.showLoading();
        }
    });
    
    // Map stage slug to project status
    const statusMapping = {
        'lead': 'lead',
        'survey': 'survey',
        'quotation': 'penawaran',
        'negotiation': 'negosiasi',
        'deal': 'deal',
        'execution': 'eksekusi',
        'completed': 'selesai',
        'cancelled': 'batal'
    };
    
    fetch('{{ route("pipeline.update-stage") }}', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-CSRF-TOKEN': '{{ csrf_token() }}'
        },
        body: JSON.stringify({
            project_id: projectId,
            new_status: statusMapping[newStatus] || newStatus
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: data.message,
                timer: 1500,
                showConfirmButton: false
            });
        } else {
            throw new Error(data.error || 'Update failed');
        }
    })
    .catch(error => {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message
        });
        // Reload to revert changes
        setTimeout(() => window.location.reload(), 1500);
    });
}
</script>
@endpush

resources\views\profile\partials\delete-user-form.blade.php:
<section class="space-y-6">
    <header>
        <h2 class="text-lg font-medium text-gray-900">
            {{ __('Delete Account') }}
        </h2>

        <p class="mt-1 text-sm text-gray-600">
            {{ __('Once your account is deleted, all of its resources and data will be permanently deleted. Before deleting your account, please download any data or information that you wish to retain.') }}
        </p>
    </header>

    <x-danger-button
        x-data=""
        x-on:click.prevent="$dispatch('open-modal', 'confirm-user-deletion')"
    >{{ __('Delete Account') }}</x-danger-button>

    <x-modal name="confirm-user-deletion" :show="$errors->userDeletion->isNotEmpty()" focusable>
        <form method="post" action="{{ route('profile.destroy') }}" class="p-6">
            @csrf
            @method('delete')

            <h2 class="text-lg font-medium text-gray-900">
                {{ __('Are you sure you want to delete your account?') }}
            </h2>

            <p class="mt-1 text-sm text-gray-600">
                {{ __('Once your account is deleted, all of its resources and data will be permanently deleted. Please enter your password to confirm you would like to permanently delete your account.') }}
            </p>

            <div class="mt-6">
                <x-input-label for="password" value="{{ __('Password') }}" class="sr-only" />

                <x-text-input
                    id="password"
                    name="password"
                    type="password"
                    class="mt-1 block w-3/4"
                    placeholder="{{ __('Password') }}"
                />

                <x-input-error :messages="$errors->userDeletion->get('password')" class="mt-2" />
            </div>

            <div class="mt-6 flex justify-end">
                <x-secondary-button x-on:click="$dispatch('close')">
                    {{ __('Cancel') }}
                </x-secondary-button>

                <x-danger-button class="ms-3">
                    {{ __('Delete Account') }}
                </x-danger-button>
            </div>
        </form>
    </x-modal>
</section>

resources\views\profile\partials\update-password-form.blade.php:
<section>
    <header>
        <h2 class="text-lg font-medium text-gray-900">
            {{ __('Update Password') }}
        </h2>

        <p class="mt-1 text-sm text-gray-600">
            {{ __('Ensure your account is using a long, random password to stay secure.') }}
        </p>
    </header>

    <form method="post" action="{{ route('password.update') }}" class="mt-6 space-y-6">
        @csrf
        @method('put')

        <div>
            <x-input-label for="update_password_current_password" :value="__('Current Password')" />
            <x-text-input id="update_password_current_password" name="current_password" type="password" class="mt-1 block w-full" autocomplete="current-password" />
            <x-input-error :messages="$errors->updatePassword->get('current_password')" class="mt-2" />
        </div>

        <div>
            <x-input-label for="update_password_password" :value="__('New Password')" />
            <x-text-input id="update_password_password" name="password" type="password" class="mt-1 block w-full" autocomplete="new-password" />
            <x-input-error :messages="$errors->updatePassword->get('password')" class="mt-2" />
        </div>

        <div>
            <x-input-label for="update_password_password_confirmation" :value="__('Confirm Password')" />
            <x-text-input id="update_password_password_confirmation" name="password_confirmation" type="password" class="mt-1 block w-full" autocomplete="new-password" />
            <x-input-error :messages="$errors->updatePassword->get('password_confirmation')" class="mt-2" />
        </div>

        <div class="flex items-center gap-4">
            <x-primary-button>{{ __('Save') }}</x-primary-button>

            @if (session('status') === 'password-updated')
                <p
                    x-data="{ show: true }"
                    x-show="show"
                    x-transition
                    x-init="setTimeout(() => show = false, 2000)"
                    class="text-sm text-gray-600"
                >{{ __('Saved.') }}</p>
            @endif
        </div>
    </form>
</section>

resources\views\profile\partials\update-profile-information-form.blade.php:
<section>
    <header>
        <h2 class="text-lg font-medium text-gray-900">
            {{ __('Profile Information') }}
        </h2>

        <p class="mt-1 text-sm text-gray-600">
            {{ __("Update your account's profile information and email address.") }}
        </p>
    </header>

    <form id="send-verification" method="post" action="{{ route('verification.send') }}">
        @csrf
    </form>

    <form method="post" action="{{ route('profile.update') }}" class="mt-6 space-y-6">
        @csrf
        @method('patch')

        <div>
            <x-input-label for="name" :value="__('Name')" />
            <x-text-input id="name" name="name" type="text" class="mt-1 block w-full" :value="old('name', $user->name)" required autofocus autocomplete="name" />
            <x-input-error class="mt-2" :messages="$errors->get('name')" />
        </div>

        <div>
            <x-input-label for="email" :value="__('Email')" />
            <x-text-input id="email" name="email" type="email" class="mt-1 block w-full" :value="old('email', $user->email)" required autocomplete="username" />
            <x-input-error class="mt-2" :messages="$errors->get('email')" />

            @if ($user instanceof \Illuminate\Contracts\Auth\MustVerifyEmail && ! $user->hasVerifiedEmail())
                <div>
                    <p class="text-sm mt-2 text-gray-800">
                        {{ __('Your email address is unverified.') }}

                        <button form="send-verification" class="underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                            {{ __('Click here to re-send the verification email.') }}
                        </button>
                    </p>

                    @if (session('status') === 'verification-link-sent')
                        <p class="mt-2 font-medium text-sm text-green-600">
                            {{ __('A new verification link has been sent to your email address.') }}
                        </p>
                    @endif
                </div>
            @endif
        </div>

        <div class="flex items-center gap-4">
            <x-primary-button>{{ __('Save') }}</x-primary-button>

            @if (session('status') === 'profile-updated')
                <p
                    x-data="{ show: true }"
                    x-show="show"
                    x-transition
                    x-init="setTimeout(() => show = false, 2000)"
                    class="text-sm text-gray-600"
                >{{ __('Saved.') }}</p>
            @endif
        </div>
    </form>
</section>


resources\views\profile\edit.blade.php:
@extends('layouts.app')

@section('title', 'Edit Profile')

@section('content')
<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <!-- Profile Information -->
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Profile Information</h5>
                </div>
                <div class="card-body">
                    @if(session('status') === 'profile-updated')
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        Profile updated successfully.
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                    @endif

                    <form method="POST" action="{{ route('profile.update') }}">
                        @csrf
                        @method('PATCH')

                        <div class="mb-3">
                            <label for="name" class="form-label">Name</label>
                            <input type="text" class="form-control @error('name') is-invalid @enderror"
                                   id="name" name="name" value="{{ old('name', $user->name) }}" required>
                            @error('name')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>

                        <div class="mb-3">
                            <label for="email" class="form-label">Email Address</label>
                            <input type="email" class="form-control @error('email') is-invalid @enderror"
                                   id="email" name="email" value="{{ old('email', $user->email) }}" required>
                            @error('email')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">Save</button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Password Update -->
            <div class="card mt-4">
                <div class="card-header">
                    <h5 class="mb-0">Update Password</h5>
                </div>
                <div class="card-body">
                    <form method="POST" action="{{ route('password.update') }}">
                        @csrf
                        @method('PUT')

                        <div class="mb-3">
                            <label for="current_password" class="form-label">Current Password</label>
                            <input type="password" class="form-control @error('current_password') is-invalid @enderror"
                                   id="current_password" name="current_password" required>
                            @error('current_password')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>

                        <div class="mb-3">
                            <label for="password" class="form-label">New Password</label>
                            <input type="password" class="form-control @error('password') is-invalid @enderror"
                                   id="password" name="password" required>
                            @error('password')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>

                        <div class="mb-3">
                            <label for="password_confirmation" class="form-label">Confirm Password</label>
                            <input type="password" class="form-control"
                                   id="password_confirmation" name="password_confirmation" required>
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">Update Password</button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Delete Account -->
            <div class="card mt-4">
                <div class="card-header">
                    <h5 class="mb-0">Delete Account</h5>
                </div>
                <div class="card-body">
                    <p class="mb-3">Once your account is deleted, all of its resources and data will be permanently deleted.</p>

                    <form method="POST" action="{{ route('profile.destroy') }}">
                        @csrf
                        @method('DELETE')

                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <input type="password" class="form-control @error('password', 'userDeletion') is-invalid @enderror"
                                   id="password" name="password" required>
                            @error('password', 'userDeletion')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-danger"
                                    onclick="return confirm('Are you sure you want to delete your account? This action cannot be undone.')">
                                Delete Account
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection


resources\views\projects\create.blade.php:
@extends('layouts.app')

@section('title', 'Tambah Project')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="mb-4">
        <h4 class="mb-0">Tambah Project Baru</h4>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item"><a href="{{ route('dashboard') }}">Dashboard</a></li>
                <li class="breadcrumb-item"><a href="{{ route('projects.index') }}">Project</a></li>
                <li class="breadcrumb-item active">Tambah Baru</li>
            </ol>
        </nav>
    </div>

    @if(session('error'))
    <div class="alert alert-danger">
        {{ session('error') }}
    </div>
    @endif

    @if($errors->any())
    <div class="alert alert-danger">
        <ul class="mb-0">
        @foreach ($errors->all() as $error)
            <li>{{ $error }}</li>
        @endforeach
        </ul>
    </div>
    @endif


    <form action="{{ route('projects.store') }}" method="POST" id="projectForm">
        @csrf
        <input type="hidden" name="client_id" value="{{ $selectedClient->id ?? '' }}">
        <div class="row">
            <div class="col-md-8">
                <!-- Basic Information -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h6 class="mb-0">Informasi Project</h6>
                    </div>
                    <div class="card-body">
                        <div class="row g-3">
                            <div class="col-md-12">
                                <label class="form-label required">Nama Project</label>
                                <input type="text" 
                                       name="name" 
                                       class="form-control @error('name') is-invalid @enderror" 
                                       value="{{ old('name') }}"
                                       placeholder="Contoh: Renovasi Kantor Lantai 2"
                                       required>
                                @error('name')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label required">Jenis Project</label>
                                <select name="type" 
                                        class="form-select @error('type') is-invalid @enderror" 
                                        required>
                                    <option value="">-- Pilih Jenis --</option>
                                    <option value="kantor" {{ old('type') == 'kantor' ? 'selected' : '' }}>Kantor</option>
                                    <option value="showroom" {{ old('type') == 'showroom' ? 'selected' : '' }}>Showroom</option>
                                    <option value="kafe" {{ old('type') == 'kafe' ? 'selected' : '' }}>Kafe</option>
                                    <option value="restoran" {{ old('type') == 'restoran' ? 'selected' : '' }}>Restoran</option>
                                    <option value="outlet" {{ old('type') == 'outlet' ? 'selected' : '' }}>Outlet</option>
                                    <option value="other" {{ old('type') == 'other' ? 'selected' : '' }}>Lainnya</option>
                                </select>
                                @error('type')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label required">Klien</label>
                                <select name="client_id" 
                                        class="form-select @error('client_id') is-invalid @enderror" 
                                        id="clientSelect"
                                        required>
                                    <option value="">-- Pilih Klien --</option>
                                    @foreach($clients as $client)
                                    <option value="{{ $client->id }}" 
                                            {{ old('client_id', $selectedClient?->id) == $client->id ? 'selected' : '' }}>
                                        {{ $client->name }}
                                    </option>
                                    @endforeach
                                </select>
                                @error('client_id')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                                <small class="text-muted">
                                    Belum ada klien? <a href="{{ route('clients.create') }}" target="_blank">Tambah klien baru</a>
                                </small>
                            </div>

                            <div class="col-md-12">
                                <label class="form-label required">Lokasi Project</label>
                                <textarea name="location" 
                                          class="form-control @error('location') is-invalid @enderror" 
                                          rows="2"
                                          placeholder="Alamat lengkap lokasi project"
                                          required>{{ old('location') }}</textarea>
                                @error('location')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label required">Person in Charge (PIC)</label>
                                <select name="pic_id" 
                                        class="form-select @error('pic_id') is-invalid @enderror" 
                                        required>
                                    <option value="">-- Pilih PIC --</option>
                                    @foreach($pics as $pic)
                                    <option value="{{ $pic->id }}" 
                                            {{ old('pic_id', Auth::id()) == $pic->id ? 'selected' : '' }}>
                                        {{ $pic->name }}
                                    </option>
                                    @endforeach
                                </select>
                                @error('pic_id')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label">Estimasi Nilai Project</label>
                                <div class="input-group">
                                    <span class="input-group-text">Rp</span>
                                    <input type="number" 
                                           name="project_value" 
                                           class="form-control @error('project_value') is-invalid @enderror" 
                                           value="{{ old('project_value') }}"
                                           placeholder="0"
                                           min="0">
                                </div>
                                @error('project_value')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label">Tanggal Mulai (Rencana)</label>
                                <input type="date" 
                                       name="start_date" 
                                       class="form-control @error('start_date') is-invalid @enderror" 
                                       value="{{ old('start_date') }}">
                                @error('start_date')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label">Target Selesai</label>
                                <input type="date" 
                                       name="target_date" 
                                       class="form-control @error('target_date') is-invalid @enderror" 
                                       value="{{ old('target_date') }}">
                                @error('target_date')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-12">
                                <label class="form-label">Deskripsi Project</label>
                                <textarea name="description" 
                                          class="form-control @error('description') is-invalid @enderror" 
                                          rows="4"
                                          placeholder="Deskripsi detail tentang project...">{{ old('description') }}</textarea>
                                @error('description')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <!-- Quick Info -->
                <div class="card mb-4 border-info">
                    <div class="card-body">
                        <h6 class="text-info mb-3">
                            <i class="bi bi-info-circle me-2"></i>Informasi
                        </h6>
                        <ul class="small mb-0">
                            <li>Kode project akan di-generate otomatis</li>
                            <li>Status awal project adalah "Lead"</li>
                            <li>Anda dapat menambahkan survey setelah project dibuat</li>
                            <li>Pastikan data klien sudah lengkap</li>
                        </ul>
                    </div>
                </div>

                <!-- Selected Client Info -->
                <div class="card mb-4" id="clientInfo" style="display: none;">
                    <div class="card-header">
                        <h6 class="mb-0">Info Klien</h6>
                    </div>
                    <div class="card-body" id="clientDetails">
                        <!-- Will be filled by JavaScript -->
                    </div>
                </div>

                <!-- Actions -->
                <div class="card">
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-save me-2"></i>Simpan Project
                            </button>
                            <button type="submit" name="save_and_survey" value="1" class="btn btn-success">
                                <i class="bi bi-clipboard-check me-2"></i>Simpan & Buat Survey
                            </button>
                            <a href="{{ route('projects.index') }}" class="btn btn-outline-secondary">
                                <i class="bi bi-x-circle me-2"></i>Batal
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
@endsection

@push('styles')
<style>
.form-label.required::after {
    content: " *";
    color: #dc3545;
}
</style>
@endpush

@push('scripts')
<script>
$(document).ready(function() {
    // Initialize Select2
    $('#clientSelect').select2({
        theme: 'bootstrap-5',
        placeholder: '-- Pilih Klien --',
        allowClear: true
    });

    // Load client info when selected
    $('#clientSelect').on('change', function() {
        const clientId = $(this).val();
        if (clientId) {
            // Show loading
            $('#clientInfo').show();
            $('#clientDetails').html('<div class="text-center"><div class="spinner-border spinner-border-sm"></div> Loading...</div>');
            
            // Simulate loading client info (in real app, make AJAX call)
            setTimeout(() => {
                $('#clientDetails').html(`
                    <dl class="row mb-0 small">
                        <dt class="col-5">Kontak:</dt>
                        <dd class="col-7">021-123456</dd>
                        <dt class="col-5">Email:</dt>
                        <dd class="col-7">client@email.com</dd>
                        <dt class="col-5">PIC:</dt>
                        <dd class="col-7">Marketing Name</dd>
                    </dl>
                `);
            }, 500);
        } else {
            $('#clientInfo').hide();
        }
    });

    // Date validation
    $('input[name="start_date"]').on('change', function() {
        const startDate = $(this).val();
        $('input[name="target_date"]').attr('min', startDate);
    });

    // Format currency input
    $('input[name="project_value"]').on('input', function() {
        let value = $(this).val();
        value = value.replace(/\D/g, '');
        $(this).val(value);
    });
});
</script>
@endpush

resources\views\projects\edit.blade.php:
@extends('layouts.app')

@section('title', 'Edit Project')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="mb-4">
        <h4 class="mb-0">Edit Project</h4>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item"><a href="{{ route('dashboard') }}">Dashboard</a></li>
                <li class="breadcrumb-item"><a href="{{ route('projects.index') }}">Project</a></li>
                <li class="breadcrumb-item active">Edit</li>
            </ol>
        </nav>
    </div>

    <form action="{{ route('projects.update', $project) }}" method="POST">
        @csrf
        @method('PUT')
        
        <div class="row">
            <div class="col-md-8">
                <!-- Basic Information -->
                <div class="card mb-4">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h6 class="mb-0">Informasi Project</h6>
                        <span class="badge bg-secondary">{{ $project->code }}</span>
                    </div>
                    <div class="card-body">
                        <div class="row g-3">
                            <div class="col-md-12">
                                <label class="form-label required">Nama Project</label>
                                <input type="text" 
                                       name="name" 
                                       class="form-control @error('name') is-invalid @enderror" 
                                       value="{{ old('name', $project->name) }}"
                                       required>
                                @error('name')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label required">Jenis Project</label>
                                <select name="type" 
                                        class="form-select @error('type') is-invalid @enderror" 
                                        required>
                                    <option value="kantor" {{ old('type', $project->type) == 'kantor' ? 'selected' : '' }}>Kantor</option>
                                    <option value="showroom" {{ old('type', $project->type) == 'showroom' ? 'selected' : '' }}>Showroom</option>
                                    <option value="kafe" {{ old('type', $project->type) == 'kafe' ? 'selected' : '' }}>Kafe</option>
                                    <option value="restoran" {{ old('type', $project->type) == 'restoran' ? 'selected' : '' }}>Restoran</option>
                                    <option value="outlet" {{ old('type', $project->type) == 'outlet' ? 'selected' : '' }}>Outlet</option>
                                    <option value="other" {{ old('type', $project->type) == 'other' ? 'selected' : '' }}>Lainnya</option>
                                </select>
                                @error('type')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label required">Status</label>
                                <select name="status" 
                                        class="form-select @error('status') is-invalid @enderror" 
                                        required>
                                    <option value="lead" {{ old('status', $project->status) == 'lead' ? 'selected' : '' }}>Lead</option>
                                    <option value="survey" {{ old('status', $project->status) == 'survey' ? 'selected' : '' }}>Survey</option>
                                    <option value="penawaran" {{ old('status', $project->status) == 'penawaran' ? 'selected' : '' }}>Penawaran</option>
                                    <option value="negosiasi" {{ old('status', $project->status) == 'negosiasi' ? 'selected' : '' }}>Negosiasi</option>
                                    <option value="deal" {{ old('status', $project->status) == 'deal' ? 'selected' : '' }}>Deal</option>
                                    <option value="eksekusi" {{ old('status', $project->status) == 'eksekusi' ? 'selected' : '' }}>Eksekusi</option>
                                    <option value="selesai" {{ old('status', $project->status) == 'selesai' ? 'selected' : '' }}>Selesai</option>
                                    <option value="batal" {{ old('status', $project->status) == 'batal' ? 'selected' : '' }}>Batal</option>
                                </select>
                                @error('status')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label required">Klien</label>
                                <select name="client_id" 
                                        class="form-select @error('client_id') is-invalid @enderror" 
                                        required>
                                    @foreach($clients as $client)
                                    <option value="{{ $client->id }}" 
                                            {{ old('client_id', $project->client_id) == $client->id ? 'selected' : '' }}>
                                        {{ $client->name }}
                                    </option>
                                    @endforeach
                                </select>
                                @error('client_id')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label required">Person in Charge (PIC)</label>
                                <select name="pic_id" 
                                        class="form-select @error('pic_id') is-invalid @enderror" 
                                        required
                                        {{ Auth::user()->hasRole('marketing') && !Auth::user()->hasRole('admin') ? 'disabled' : '' }}>
                                    @foreach($pics as $pic)
                                    <option value="{{ $pic->id }}" 
                                            {{ old('pic_id', $project->pic_id) == $pic->id ? 'selected' : '' }}>
                                        {{ $pic->name }}
                                    </option>
                                    @endforeach
                                </select>
                                @if(Auth::user()->hasRole('marketing') && !Auth::user()->hasRole('admin'))
                                <input type="hidden" name="pic_id" value="{{ $project->pic_id }}">
                                <small class="text-muted">PIC tidak dapat diubah oleh Marketing</small>
                                @endif
                                @error('pic_id')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-12">
                                <label class="form-label required">Lokasi Project</label>
                                <textarea name="location" 
                                          class="form-control @error('location') is-invalid @enderror" 
                                          rows="2"
                                          required>{{ old('location', $project->location) }}</textarea>
                                @error('location')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label">Estimasi Nilai Project</label>
                                <div class="input-group">
                                    <span class="input-group-text">Rp</span>
                                    <input type="number" 
                                           name="project_value" 
                                           class="form-control @error('project_value') is-invalid @enderror" 
                                           value="{{ old('project_value', $project->project_value) }}"
                                           min="0">
                                </div>
                                @error('project_value')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label">Nilai Deal</label>
                                <div class="input-group">
                                    <span class="input-group-text">Rp</span>
                                    <input type="number" 
                                           name="deal_value" 
                                           class="form-control @error('deal_value') is-invalid @enderror" 
                                           value="{{ old('deal_value', $project->deal_value) }}"
                                           min="0"
                                           {{ !in_array($project->status, ['deal', 'eksekusi', 'selesai']) ? 'readonly' : '' }}>
                                </div>
                                @error('deal_value')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                                <small class="text-muted">Nilai deal dapat diisi setelah status Deal</small>
                            </div>

                            <div class="col-md-6">
                                <label class="form-label">Tanggal Mulai</label>
                                <input type="date" 
                                       name="start_date" 
                                       class="form-control @error('start_date') is-invalid @enderror" 
                                       value="{{ old('start_date', $project->start_date?->format('Y-m-d')) }}">
                                @error('start_date')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label">Target Selesai</label>
                                <input type="date" 
                                       name="target_date" 
                                       class="form-control @error('target_date') is-invalid @enderror" 
                                       value="{{ old('target_date', $project->target_date?->format('Y-m-d')) }}">
                                @error('target_date')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-12">
                                <label class="form-label">Deskripsi Project</label>
                                <textarea name="description" 
                                          class="form-control @error('description') is-invalid @enderror" 
                                          rows="4">{{ old('description', $project->description) }}</textarea>
                                @error('description')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <!-- Project Info -->
                <div class="card mb-4 border-primary">
                    <div class="card-body">
                        <h6 class="text-primary mb-3">Informasi Project</h6>
                        <dl class="row mb-0">
                            <dt class="col-sm-5">Kode:</dt>
                            <dd class="col-sm-7">{{ $project->code }}</dd>
                            
                            <dt class="col-sm-5">Dibuat:</dt>
                            <dd class="col-sm-7">{{ $project->created_at->format('d M Y') }}</dd>
                            
                            <dt class="col-sm-5">Update:</dt>
                            <dd class="col-sm-7">{{ $project->updated_at->format('d M Y H:i') }}</dd>
                            
                            <dt class="col-sm-5">Surveys:</dt>
                            <dd class="col-sm-7">
                                <span class="badge bg-info">{{ $project->surveys_count ?? 0 }}</span>
                            </dd>
                            
                            <dt class="col-sm-5">Progress:</dt>
                            <dd class="col-sm-7">
                                <div class="progress" style="height: 10px;">
                                    <div class="progress-bar" style="width: {{ $project->progress_percentage }}%"></div>
                                </div>
                                <small>{{ $project->progress_percentage }}%</small>
                            </dd>
                        </dl>
                    </div>
                </div>

                <!-- Status History -->
                @if($project->status != 'lead')
                <div class="card mb-4">
                    <div class="card-header">
                        <h6 class="mb-0">History Status</h6>
                    </div>
                    <div class="card-body">
                        <div class="timeline-simple">
                            <div class="timeline-item">
                                <div class="timeline-marker bg-success"></div>
                                <div class="timeline-content">
                                    <strong>{{ ucfirst($project->status) }}</strong>
                                    <br><small>Sekarang</small>
                                </div>
                            </div>
                            @if($project->status != 'lead')
                            <div class="timeline-item">
                                <div class="timeline-marker bg-secondary"></div>
                                <div class="timeline-content">
                                    <strong>Lead</strong>
                                    <br><small>{{ $project->created_at->format('d M Y') }}</small>
                                </div>
                            </div>
                            @endif
                        </div>
                    </div>
                </div>
                @endif

                <!-- Actions -->
                <div class="card">
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-save me-2"></i>Update Project
                            </button>
                            <a href="{{ route('projects.show', $project) }}" class="btn btn-outline-secondary">
                                <i class="bi bi-x-circle me-2"></i>Batal
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
@endsection

@push('styles')
<style>
.form-label.required::after {
    content: " *";
    color: #dc3545;
}

.timeline-simple {
    position: relative;
    padding-left: 30px;
}

.timeline-simple::before {
    content: '';
    position: absolute;
    left: 9px;
    top: 0;
    bottom: 0;
    width: 2px;
    background: #e0e0e0;
}

.timeline-item {
    position: relative;
    padding-bottom: 1rem;
}

.timeline-item:last-child {
    padding-bottom: 0;
}

.timeline-marker {
    position: absolute;
    left: -21px;
    top: 4px;
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: 2px solid #fff;
    box-shadow: 0 0 0 2px rgba(0,0,0,0.1);
}
</style>
@endpush

@push('scripts')
<script>
$(document).ready(function() {
    // Enable/disable deal value based on status
    $('select[name="status"]').on('change', function() {
        const status = $(this).val();
        const dealValueInput = $('input[name="deal_value"]');
        
        if (['deal', 'eksekusi', 'selesai'].includes(status)) {
            dealValueInput.prop('readonly', false);
        } else {
            dealValueInput.prop('readonly', true);
        }
    });

    // Date validation
    $('input[name="start_date"]').on('change', function() {
        const startDate = $(this).val();
        $('input[name="target_date"]').attr('min', startDate);
    });
});
</script>
@endpush

resources\views\projects\index.blade.php:
@extends('layouts.app')

@section('title', 'Data Project')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">Data Project</h4>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item"><a href="{{ route('dashboard') }}">Dashboard</a></li>
                    <li class="breadcrumb-item active">Project</li>
                </ol>
            </nav>
        </div>
        <div>
            <button class="btn btn-outline-primary me-2" onclick="exportProjects()">
                <i class="bi bi-download me-2"></i>Export
            </button>
            @can('create-projects')
            <a href="{{ route('projects.create') }}" class="btn btn-primary">
                <i class="bi bi-plus-circle me-2"></i>Tambah Project
            </a>
            @endcan
        </div>
    </div>

    <!-- Stats Cards -->
    <div class="row g-3 mb-4">
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <p class="text-muted mb-1 small">Total Projects</p>
                            <h5 class="mb-0">{{ $projects->total() }}</h5>
                        </div>
                        <div class="icon-box bg-primary bg-opacity-10">
                            <i class="bi bi-building text-primary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <p class="text-muted mb-1 small">Active</p>
                            <h5 class="mb-0">{{ $projects->where('status', 'eksekusi')->count() }}</h5>
                        </div>
                        <div class="icon-box bg-success bg-opacity-10">
                            <i class="bi bi-play-circle text-success"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <p class="text-muted mb-1 small">Pending Survey</p>
                            <h5 class="mb-0">{{ $projects->where('status', 'survey')->count() }}</h5>
                        </div>
                        <div class="icon-box bg-warning bg-opacity-10">
                            <i class="bi bi-clock text-warning"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <p class="text-muted mb-1 small">Total Value</p>
                            <h5 class="mb-0">{{ number_format($projects->sum('project_value')/1000000, 0) }}M</h5>
                        </div>
                        <div class="icon-box bg-info bg-opacity-10">
                            <i class="bi bi-currency-dollar text-info"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters -->
    <div class="card mb-3">
        <div class="card-body">
            <form method="GET" action="{{ route('projects.index') }}" class="row g-3">
                <div class="col-md-3">
                    <input type="text" 
                           name="search" 
                           class="form-control" 
                           placeholder="Cari kode, nama, atau klien..."
                           value="{{ request('search') }}">
                </div>
                <div class="col-md-2">
                    <select name="status" class="form-select">
                        <option value="">Semua Status</option>
                        <option value="lead" {{ request('status') == 'lead' ? 'selected' : '' }}>Lead</option>
                        <option value="survey" {{ request('status') == 'survey' ? 'selected' : '' }}>Survey</option>
                        <option value="penawaran" {{ request('status') == 'penawaran' ? 'selected' : '' }}>Penawaran</option>
                        <option value="negosiasi" {{ request('status') == 'negosiasi' ? 'selected' : '' }}>Negosiasi</option>
                        <option value="deal" {{ request('status') == 'deal' ? 'selected' : '' }}>Deal</option>
                        <option value="eksekusi" {{ request('status') == 'eksekusi' ? 'selected' : '' }}>Eksekusi</option>
                        <option value="selesai" {{ request('status') == 'selesai' ? 'selected' : '' }}>Selesai</option>
                        <option value="batal" {{ request('status') == 'batal' ? 'selected' : '' }}>Batal</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <select name="type" class="form-select">
                        <option value="">Semua Jenis</option>
                        <option value="kantor" {{ request('type') == 'kantor' ? 'selected' : '' }}>Kantor</option>
                        <option value="showroom" {{ request('type') == 'showroom' ? 'selected' : '' }}>Showroom</option>
                        <option value="kafe" {{ request('type') == 'kafe' ? 'selected' : '' }}>Kafe</option>
                        <option value="restoran" {{ request('type') == 'restoran' ? 'selected' : '' }}>Restoran</option>
                        <option value="outlet" {{ request('type') == 'outlet' ? 'selected' : '' }}>Outlet</option>
                        <option value="other" {{ request('type') == 'other' ? 'selected' : '' }}>Lainnya</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-outline-primary w-100">
                        <i class="bi bi-search me-2"></i>Filter
                    </button>
                </div>
                @if(request('search') || request('status') || request('type'))
                <div class="col-md-2">
                    <a href="{{ route('projects.index') }}" class="btn btn-outline-secondary w-100">
                        <i class="bi bi-x-circle me-2"></i>Reset
                    </a>
                </div>
                @endif
            </form>
        </div>
    </div>

    <!-- Projects Table -->
    <div class="card">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th width="10%">Kode</th>
                            <th>Project</th>
                            <th>Klien</th>
                            <th>Jenis</th>
                            <th>Status</th>
                            <th>Progress</th>
                            <th>Nilai</th>
                            <th>PIC</th>
                            <th width="10%">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @forelse($projects as $project)
                        <tr>
                            <td>
                                <span class="badge bg-secondary">{{ $project->code }}</span>
                            </td>
                            <td>
                                <div class="fw-semibold">{{ $project->name }}</div>
                                <small class="text-muted">
                                    <i class="bi bi-geo-alt"></i> {{ Str::limit($project->location, 30) }}
                                </small>
                            </td>
                            <td>{{ $project->client->name }}</td>
                            <td>
                                <span class="text-capitalize">{{ $project->type }}</span>
                            </td>
                            <td>
                                <span class="badge bg-{{ $project->status_badge }}">
                                    {{ ucfirst($project->status) }}
                                </span>
                            </td>
                            <td>
                                <div class="progress" style="height: 8px;">
                                    <div class="progress-bar" 
                                         role="progressbar" 
                                         style="width: {{ $project->progress_percentage }}%">
                                    </div>
                                </div>
                                <small class="text-muted">{{ $project->progress_percentage }}%</small>
                            </td>
                            <td>
                                @if($project->deal_value)
                                <div class="fw-semibold">Rp {{ number_format($project->deal_value/1000000, 0) }}M</div>
                                <small class="text-muted">Deal</small>
                                @elseif($project->project_value)
                                <div>Rp {{ number_format($project->project_value/1000000, 0) }}M</div>
                                <small class="text-muted">Estimasi</small>
                                @else
                                <span class="text-muted">TBD</span>
                                @endif
                            </td>
                            <td>{{ $project->pic->name }}</td>
                            <td>
                                <div class="btn-group" role="group">
                                    <a href="{{ route('projects.show', $project) }}" 
                                       class="btn btn-sm btn-outline-primary"
                                       data-bs-toggle="tooltip"
                                       title="View">
                                        <i class="bi bi-eye"></i>
                                    </a>
                                    @can('edit-projects')
                                    <a href="{{ route('projects.edit', $project) }}" 
                                       class="btn btn-sm btn-outline-warning"
                                       data-bs-toggle="tooltip"
                                       title="Edit">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                    @endcan
                                </div>
                            </td>
                        </tr>
                        @empty
                        <tr>
                            <td colspan="9" class="text-center py-4 text-muted">
                                <i class="bi bi-inbox fs-1 d-block mb-2"></i>
                                Belum ada data project
                            </td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
        </div>
        
        @if($projects->hasPages())
        <div class="card-footer">
            {{ $projects->links() }}
        </div>
        @endif
    </div>
</div>
@endsection

@push('styles')
<style>
.icon-box {
    width: 40px;
    height: 40px;
    border-radius: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
}
</style>
@endpush

@push('scripts')
<script>
// Initialize tooltips
var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
    return new bootstrap.Tooltip(tooltipTriggerEl)
});

function exportProjects() {
    window.location.href = '{{ route("projects.index") }}?export=excel';
}
</script>
@endpush

resources\views\projects\show.blade.php:
@extends('layouts.app')

@section('title', 'Detail Project')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">{{ $project->name }}</h4>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item"><a href="{{ route('dashboard') }}">Dashboard</a></li>
                    <li class="breadcrumb-item"><a href="{{ route('projects.index') }}">Project</a></li>
                    <li class="breadcrumb-item active">{{ $project->code }}</li>
                </ol>
            </nav>
        </div>
        <div>
            @can('edit-projects')
            <a href="{{ route('projects.edit', $project) }}" class="btn btn-warning">
                <i class="bi bi-pencil me-2"></i>Edit
            </a>
            @endcan
            <div class="btn-group">
                <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown">
                    <i class="bi bi-plus-circle me-2"></i>Tambah
                </button>
                <ul class="dropdown-menu">
                    <li>
                        <a class="dropdown-item" href="{{ route('surveys.create', ['project_id' => $project->id]) }}">
                            <i class="bi bi-clipboard-check me-2"></i>Survey
                        </a>
                    </li>
                    <li>
                        <a class="dropdown-item" href="#">
                            <i class="bi bi-file-earmark-text me-2"></i>Dokumen
                        </a>
                    </li>
                    <li>
                        <a class="dropdown-item" href="#">
                            <i class="bi bi-cash me-2"></i>Invoice
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </div>

    <!-- Status Progress -->
    <div class="card mb-4">
        <div class="card-body">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h6 class="mb-2">Progress Project</h6>
                    <div class="progress mb-2" style="height: 25px;">
                        <div class="progress-bar bg-{{ $project->status_badge }}" 
                             role="progressbar" 
                             style="width: {{ $project->progress_percentage }}%">
                            {{ $project->progress_percentage }}%
                        </div>
                    </div>
                    <div class="d-flex justify-content-between small text-muted">
                        <span>Lead</span>
                        <span>Survey</span>
                        <span>Penawaran</span>
                        <span>Negosiasi</span>
                        <span>Deal</span>
                        <span>Eksekusi</span>
                        <span>Selesai</span>
                    </div>
                </div>
                <div class="col-md-4 text-center">
                    <h6 class="text-muted mb-1">Status Saat Ini</h6>
                    <h4>
                        <span class="badge bg-{{ $project->status_badge }}">
                            {{ ucfirst($project->status) }}
                        </span>
                    </h4>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Left Column -->
        <div class="col-md-8">
            <!-- Project Details -->
            <div class="card mb-4">
                <div class="card-header">
                    <h6 class="mb-0">Informasi Project</h6>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <dl class="row">
                                <dt class="col-sm-4">Kode Project:</dt>
                                <dd class="col-sm-8">
                                    <span class="badge bg-secondary">{{ $project->code }}</span>
                                </dd>
                                
                                <dt class="col-sm-4">Jenis:</dt>
                                <dd class="col-sm-8">{{ ucfirst($project->type) }}</dd>
                                
                                <dt class="col-sm-4">Klien:</dt>
                                <dd class="col-sm-8">
                                    <a href="{{ route('clients.show', $project->client) }}">
                                        {{ $project->client->name }}
                                    </a>
                                </dd>
                                
                                <dt class="col-sm-4">PIC:</dt>
                                <dd class="col-sm-8">{{ $project->pic->name }}</dd>
                            </dl>
                        </div>
                        <div class="col-md-6">
                            <dl class="row">
                                <dt class="col-sm-4">Lokasi:</dt>
                                <dd class="col-sm-8">{{ $project->location }}</dd>
                                
                                <dt class="col-sm-4">Mulai:</dt>
                                <dd class="col-sm-8">
                                    {{ $project->start_date ? $project->start_date->format('d M Y') : '-' }}
                                </dd>
                                
                                <dt class="col-sm-4">Target:</dt>
                                <dd class="col-sm-8">
                                    {{ $project->target_date ? $project->target_date->format('d M Y') : '-' }}
                                </dd>
                                
                                <dt class="col-sm-4">Nilai Project:</dt>
                                <dd class="col-sm-8">
                                    @if($project->deal_value)
                                    <strong class="text-success">Rp {{ number_format($project->deal_value, 0, ',', '.') }}</strong>
                                    <br><small class="text-muted">Deal</small>
                                    @elseif($project->project_value)
                                    Rp {{ number_format($project->project_value, 0, ',', '.') }}
                                    <br><small class="text-muted">Estimasi</small>
                                    @else
                                    <span class="text-muted">TBD</span>
                                    @endif
                                </dd>
                            </dl>
                        </div>
                    </div>
                    
                    @if($project->description)
                    <hr>
                    <h6>Deskripsi:</h6>
                    <p class="mb-0">{{ $project->description }}</p>
                    @endif
                </div>
            </div>

            <!-- Tabs -->
            <div class="card">
                <div class="card-header">
                    <ul class="nav nav-tabs card-header-tabs" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" data-bs-toggle="tab" href="#surveys">
                                <i class="bi bi-clipboard-check me-2"></i>
                                Surveys ({{ $project->surveys->count() }})
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-bs-toggle="tab" href="#documents">
                                <i class="bi bi-folder me-2"></i>
                                Dokumen (0)
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-bs-toggle="tab" href="#timeline">
                                <i class="bi bi-clock-history me-2"></i>
                                Timeline
                            </a>
                        </li>
                    </ul>
                </div>
                <div class="card-body">
                    <div class="tab-content">
                        <!-- Surveys Tab -->
                        <div class="tab-pane fade show active" id="surveys">
                            @if($project->surveys->count() > 0)
                            <div class="table-responsive">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>Tanggal</th>
                                            <th>Surveyor</th>
                                            <th>Status</th>
                                            <th>Foto</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach($project->surveys as $survey)
                                        <tr>
                                            <td>
                                                <div>{{ $survey->scheduled_date->format('d M Y') }}</div>
                                                <small class="text-muted">{{ $survey->scheduled_date->format('H:i') }}</small>
                                            </td>
                                            <td>{{ $survey->surveyor->name }}</td>
                                            <td>
                                                <span class="badge bg-{{ $survey->status_badge }}">
                                                    {{ ucfirst($survey->status) }}
                                                </span>
                                            </td>
                                            <td>
                                                <span class="badge bg-secondary">
                                                    {{ $survey->photos->count() }} foto
                                                </span>
                                            </td>
                                            <td>
                                                <a href="{{ route('surveys.show', $survey) }}" 
                                                   class="btn btn-sm btn-outline-primary">
                                                    <i class="bi bi-eye"></i>
                                                </a>
                                            </td>
                                        </tr>
                                        @endforeach
                                    </tbody>
                                </table>
                            </div>
                            @else
                            <div class="text-center py-4">
                                <i class="bi bi-clipboard-x fs-1 text-muted d-block mb-2"></i>
                                <p class="text-muted">Belum ada survey untuk project ini</p>
                                <a href="{{ route('surveys.create', ['project_id' => $project->id]) }}" 
                                   class="btn btn-primary btn-sm">
                                    <i class="bi bi-plus-circle me-2"></i>Jadwalkan Survey
                                </a>
                            </div>
                            @endif
                        </div>

                        <!-- Documents Tab -->
                        <div class="tab-pane fade" id="documents">
                            <div class="text-center py-4">
                                <i class="bi bi-file-earmark fs-1 text-muted d-block mb-2"></i>
                                <p class="text-muted">Belum ada dokumen</p>
                                <button class="btn btn-primary btn-sm">
                                    <i class="bi bi-upload me-2"></i>Upload Dokumen
                                </button>
                            </div>
                        </div>

                        <!-- Timeline Tab -->
                        <div class="tab-pane fade" id="timeline">
                            <div class="activity-timeline">
                                @if($project->status != 'lead')
                                <div class="activity-item">
                                    <div class="activity-icon bg-{{ $project->status_badge }}">
                                        <i class="bi bi-flag text-white"></i>
                                    </div>
                                    <div class="activity-content">
                                        <div class="fw-semibold">Status diubah ke {{ ucfirst($project->status) }}</div>
                                        <small class="text-muted">{{ $project->updated_at->diffForHumans() }}</small>
                                    </div>
                                </div>
                                @endif

                                @foreach($project->surveys->sortByDesc('created_at') as $survey)
                                <div class="activity-item">
                                    <div class="activity-icon bg-info">
                                        <i class="bi bi-clipboard-check text-white"></i>
                                    </div>
                                    <div class="activity-content">
                                        <div class="fw-semibold">Survey dijadwalkan</div>
                                        <p class="text-muted mb-1">
                                            Surveyor: {{ $survey->surveyor->name }}<br>
                                            Tanggal: {{ $survey->scheduled_date->format('d M Y H:i') }}
                                        </p>
                                        <small class="text-muted">{{ $survey->created_at->diffForHumans() }}</small>
                                    </div>
                                </div>
                                @endforeach

                                <div class="activity-item">
                                    <div class="activity-icon bg-success">
                                        <i class="bi bi-plus-circle text-white"></i>
                                    </div>
                                    <div class="activity-content">
                                        <div class="fw-semibold">Project dibuat</div>
                                        <p class="text-muted mb-1">Oleh: {{ $project->pic->name }}</p>
                                        <small class="text-muted">{{ $project->created_at->format('d M Y H:i') }}</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Right Column -->
        <div class="col-md-4">
            <!-- Quick Actions -->
            <div class="card mb-4">
                <div class="card-header">
                    <h6 class="mb-0">Quick Actions</h6>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        @if($project->status == 'lead')
                        <a href="{{ route('surveys.create', ['project_id' => $project->id]) }}" 
                           class="btn btn-outline-primary">
                            <i class="bi bi-clipboard-check me-2"></i>Jadwalkan Survey
                        </a>
                        @endif
                        
                        @if(in_array($project->status, ['survey', 'penawaran']))
                        <button class="btn btn-outline-success">
                            <i class="bi bi-file-earmark-text me-2"></i>Buat Penawaran
                        </button>
                        @endif
                        
                        @if($project->status == 'deal')
                        <button class="btn btn-outline-info">
                            <i class="bi bi-file-earmark-check me-2"></i>Generate Kontrak
                        </button>
                        @endif
                        
                        <button class="btn btn-outline-secondary">
                            <i class="bi bi-printer me-2"></i>Print Detail
                        </button>
                    </div>
                </div>
            </div>

            <!-- Contact Info -->
            <div class="card mb-4">
                <div class="card-header">
                    <h6 class="mb-0">Kontak Klien</h6>
                </div>
                <div class="card-body">
                    <h6 class="mb-3">{{ $project->client->name }}</h6>
                    <dl class="row mb-0">
                        <dt class="col-5">Telepon:</dt>
                        <dd class="col-7">
                            <a href="tel:{{ $project->client->phone }}">{{ $project->client->phone }}</a>
                        </dd>
                        
                        @if($project->client->whatsapp)
                        <dt class="col-5">WhatsApp:</dt>
                        <dd class="col-7">
                            <a href="https://wa.me/{{ preg_replace('/[^0-9]/', '', $project->client->whatsapp) }}" 
                               target="_blank" 
                               class="text-success">
                                <i class="bi bi-whatsapp"></i> Chat
                            </a>
                        </dd>
                        @endif
                        
                        @if($project->client->email)
                        <dt class="col-5">Email:</dt>
                        <dd class="col-7">
                            <a href="mailto:{{ $project->client->email }}">{{ $project->client->email }}</a>
                        </dd>
                        @endif
                    </dl>
                </div>
            </div>

            <!-- Statistics -->
            <div class="card">
                <div class="card-header">
                    <h6 class="mb-0">Statistik</h6>
                </div>
                <div class="card-body">
                    <div class="row text-center g-3">
                        <div class="col-6 border-end">
                            <h4 class="mb-0">{{ $project->surveys->count() }}</h4>
                            <small class="text-muted">Total Survey</small>
                        </div>
                        <div class="col-6">
                            <h4 class="mb-0">0</h4>
                            <small class="text-muted">Dokumen</small>
                        </div>
                    </div>
                    <hr>
                    <div class="text-center">
                        <p class="text-muted mb-1">Durasi Project</p>
                        <h5 class="mb-0">
                            @if($project->start_date)
                            {{ $project->start_date->diffInDays($project->target_date ?? now()) }} hari
                            @else
                            -
                            @endif
                        </h5>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

@push('styles')
<style>
.activity-timeline {
    position: relative;
    padding-left: 40px;
}

.activity-timeline::before {
    content: '';
    position: absolute;
    left: 15px;
    top: 0;
    bottom: 0;
    width: 2px;
    background: #e0e0e0;
}

.activity-item {
    position: relative;
    margin-bottom: 2rem;
}

.activity-item:last-child {
    margin-bottom: 0;
}

.activity-icon {
    position: absolute;
    left: -25px;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 14px;
}
</style>
@endpush

@push('scripts')
<script>
// Initialize tooltips
var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
    return new bootstrap.Tooltip(tooltipTriggerEl)
});
</script>
@endpush

resources\views\projects\timeline.blade.php:
@extends('layouts.app')

@section('title', 'Timeline Project')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">Timeline: {{ $project->name }}</h4>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item"><a href="{{ route('dashboard') }}">Dashboard</a></li>
                    <li class="breadcrumb-item"><a href="{{ route('projects.index') }}">Project</a></li>
                    <li class="breadcrumb-item"><a href="{{ route('projects.show', $project) }}">{{ $project->code }}</a></li>
                    <li class="breadcrumb-item active">Timeline</li>
                </ol>
            </nav>
        </div>
        <div>
            <a href="{{ route('projects.show', $project) }}" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left me-2"></i>Kembali
            </a>
        </div>
    </div>

    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="card">
                <div class="card-body">
                    <div class="timeline-detailed">
                        @foreach($timeline as $event)
                        <div class="timeline-block">
                            <div class="timeline-dot bg-{{ $event['color'] }}">
                                <i class="bi {{ $event['icon'] }} text-white"></i>
                            </div>
                            <div class="timeline-content">
                                <h6 class="mb-1">{{ $event['title'] }}</h6>
                                <p class="mb-2">{{ $event['description'] }}</p>
                                <small class="text-muted">
                                    <i class="bi bi-clock me-1"></i>
                                    {{ $event['date']->format('d M Y H:i') }} 
                                    ({{ $event['date']->diffForHumans() }})
                                </small>
                            </div>
                        </div>
                        @endforeach
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

@push('styles')
<style>
.timeline-detailed {
    position: relative;
    padding: 20px 0;
}

.timeline-detailed::before {
    content: '';
    position: absolute;
    left: 25px;
    top: 0;
    bottom: 0;
    width: 2px;
    background: #e0e0e0;
}

.timeline-block {
    position: relative;
    margin-bottom: 30px;
    padding-left: 70px;
}

.timeline-dot {
    position: absolute;
    left: 10px;
    top: 0;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.timeline-content {
    background: #f8f9fa;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}
</style>
@endpush

resources\views\reports\types\client_acquisition_pdf.blade.php:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ $title }}</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            font-size: 12px;
            line-height: 1.5;
            color: #333;
        }
        .header {
            text-align: center;
            margin-bottom: 20px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }
        .logo {
            max-width: 150px;
            height: auto;
        }
        h1 {
            font-size: 20px;
            margin: 5px 0;
            color: #1a73e8;
        }
        .period {
            font-size: 14px;
            margin-top: 5px;
            color: #666;
        }
        .summary-box {
            background-color: #f8f9fa;
            border-radius: 5px;
            padding: 10px;
            margin-bottom: 20px;
        }
        .summary-item {
            display: inline-block;
            width: 24%;
            text-align: center;
        }
        .summary-value {
            font-size: 18px;
            font-weight: bold;
            margin: 5px 0;
        }
        .summary-label {
            font-size: 12px;
            color: #666;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
            font-weight: bold;
        }
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        .section-title {
            font-size: 16px;
            font-weight: bold;
            margin: 20px 0 10px 0;
            padding-bottom: 5px;
            border-bottom: 1px solid #eee;
        }
        .footer {
            text-align: center;
            margin-top: 20px;
            font-size: 10px;
            color: #999;
            border-top: 1px solid #ddd;
            padding-top: 10px;
        }
    </style>
</head>
<body>
    <div class="header">
        <img src="{{ public_path('images/logo.png') }}" alt="Company Logo" class="logo">
        <h1>{{ $title }}</h1>
        <div class="period">Period: {{ $dateFrom->format('d M Y') }} to {{ $dateTo->format('d M Y') }}</div>
    </div>

    <div class="summary-box">
        <div class="summary-item">
            <div class="summary-value">{{ $data['total_clients'] }}</div>
            <div class="summary-label">New Clients</div>
        </div>
        <div class="summary-item">
            <div class="summary-value">{{ $data['total_projects'] }}</div>
            <div class="summary-label">Projects</div>
        </div>
        <div class="summary-item">
            <div class="summary-value">Rp {{ number_format($data['total_project_value']/1000000, 1) }}M</div>
            <div class="summary-label">Project Value</div>
        </div>
        <div class="summary-item">
            @php
                $avgValue = $data['total_clients'] > 0 
                    ? $data['total_project_value'] / $data['total_clients'] 
                    : 0;
            @endphp
            <div class="summary-value">Rp {{ number_format($avgValue/1000000, 1) }}M</div>
            <div class="summary-label">Avg Value/Client</div>
        </div>
    </div>

    <div class="section-title">Client Source Distribution</div>
    <table>
        <thead>
            <tr>
                <th>Source</th>
                <th>Client Count</th>
                <th>Project Count</th>
                <th>Project Value</th>
                <th>Percentage</th>
            </tr>
        </thead>
        <tbody>
            @foreach($data['by_source'] as $source => $sourceData)
            <tr>
                <td>{{ ucfirst($source) }}</td>
                <td>{{ $sourceData['count'] }}</td>
                <td>{{ $sourceData['project_count'] }}</td>
                <td>Rp {{ number_format($sourceData['project_value'], 0, ',', '.') }}</td>
                <td>{{ round(($sourceData['count'] / $data['total_clients']) * 100, 1) }}%</td>
            </tr>
            @endforeach
        </tbody>
    </table>

    <div class="section-title">Monthly Acquisition Trend</div>
    <table>
        <thead>
            <tr>
                <th>Month</th>
                <th>Client Count</th>
                <th>Project Count</th>
                <th>Project Value</th>
            </tr>
        </thead>
        <tbody>
            @foreach($data['by_month'] as $month => $monthData)
            <tr>
                <td>{{ Carbon\Carbon::createFromFormat('Y-m', $month)->format('M Y') }}</td>
                <td>{{ $monthData['count'] }}</td>
                <td>{{ $monthData['project_count'] }}</td>
                <td>Rp {{ number_format($monthData['project_value'], 0, ',', '.') }}</td>
            </tr>
            @endforeach
        </tbody>
    </table>

    <div class="section-title">New Clients List</div>
    <table>
        <thead>
            <tr>
                <th>Client Name</th>
                <th>Email</th>
                <th>Phone</th>
                <th>Source</th>
                <th>Status</th>
                <th>Projects</th>
                <th>Created</th>
            </tr>
        </thead>
        <tbody>
            @foreach($data['clients'] as $client)
            <tr>
                <td>{{ $client->name }}</td>
                <td>{{ $client->email ?: '-' }}</td>
                <td>{{ $client->phone ?: '-' }}</td>
                <td>{{ ucfirst($client->source) }}</td>
                <td>{{ ucfirst($client->status) }}</td>
                <td>{{ $client->projects->count() }}</td>
                <td>{{ $client->created_at->format('d M Y') }}</td>
            </tr>
            @endforeach
        </tbody>
    </table>

    <div class="footer">
        <div>Generated on {{ now()->format('d M Y H:i') }}</div>
        <div>© {{ now()->format('Y') }} Your Company Name. All rights reserved.</div>
    </div>
</body>
</html>

resources\views\reports\types\client_acquisition.blade.php:
@extends('layouts.app')

@section('title', $title)

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">{{ $title }}</h4>
            <p class="text-muted mb-0">Period: {{ $dateFrom->format('d M Y') }} to {{ $dateTo->format('d M Y') }}</p>
        </div>
        <div>
            <a href="{{ route('reports.generate', [
                'report_type' => 'client_acquisition',
                'date_from' => $dateFrom->format('Y-m-d'),
                'date_to' => $dateTo->format('Y-m-d'),
                'format' => 'pdf',
                'parameters' => $parameters
            ]) }}" class="btn btn-outline-danger me-2">
                <i class="bi bi-file-pdf me-2"></i>Export PDF
            </a>
            <a href="{{ route('reports.generate', [
                'report_type' => 'client_acquisition',
                'date_from' => $dateFrom->format('Y-m-d'),
                'date_to' => $dateTo->format('Y-m-d'),
                'format' => 'excel',
                'parameters' => $parameters
            ]) }}" class="btn btn-outline-success">
                <i class="bi bi-file-excel me-2"></i>Export Excel
            </a>
        </div>
    </div>

    <!-- Summary Cards -->
    <div class="row g-3 mb-4">
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="mb-1">{{ $data['total_clients'] }}</h5>
                            <small class="text-muted">New Clients</small>
                        </div>
                        <div class="icon-box bg-primary bg-opacity-10">
                            <i class="bi bi-people text-primary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="mb-1">{{ $data['total_projects'] }}</h5>
                            <small class="text-muted">Projects</small>
                        </div>
                        <div class="icon-box bg-success bg-opacity-10">
                            <i class="bi bi-building text-success"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="mb-1">Rp {{ number_format($data['total_project_value']/1000000, 1) }}M</h5>
                            <small class="text-muted">Project Value</small>
                        </div>
                        <div class="icon-box bg-warning bg-opacity-10">
                            <i class="bi bi-cash-stack text-warning"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            @php
                                $avgValue = $data['total_clients'] > 0 
                                    ? $data['total_project_value'] / $data['total_clients'] 
                                    : 0;
                            @endphp
                            <h5 class="mb-1">Rp {{ number_format($avgValue/1000000, 1) }}M</h5>
                            <small class="text-muted">Avg Value/Client</small>
                        </div>
                        <div class="icon-box bg-info bg-opacity-10">
                            <i class="bi bi-graph-up text-info"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Row -->
    <div class="row g-3 mb-4">
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-header">
                    <h6 class="mb-0">Client Acquisition by Source</h6>
                </div>
                <div class="card-body">
                    <canvas id="sourceChart" height="250"></canvas>
                </div>
            </div>
        </div>
        
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-header">
                    <h6 class="mb-0">Monthly Acquisition Trend</h6>
                </div>
                <div class="card-body">
                    <canvas id="monthlyChart" height="250"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Source Distribution Table -->
    <div class="card mb-4">
        <div class="card-header">
            <h6 class="mb-0">Client Source Distribution</h6>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th>Source</th>
                            <th>Client Count</th>
                            <th>Project Count</th>
                            <th>Project Value</th>
                            <th>Percentage</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach($data['by_source'] as $source => $sourceData)
                        <tr>
                            <td>{{ ucfirst($source) }}</td>
                            <td>{{ $sourceData['count'] }}</td>
                            <td>{{ $sourceData['project_count'] }}</td>
                            <td>Rp {{ number_format($sourceData['project_value'], 0, ',', '.') }}</td>
                            <td>
                                <div class="d-flex align-items-center">
                                    <div class="progress flex-grow-1" style="height: 6px;">
                                        <div class="progress-bar bg-primary" style="width: {{ ($sourceData['count'] / $data['total_clients']) * 100 }}%;"></div>
                                    </div>
                                    <span class="ms-2">{{ round(($sourceData['count'] / $data['total_clients']) * 100, 1) }}%</span>
                                </div>
                            </td>
                        </tr>
                        @endforeach
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Clients Table -->
    <div class="card">
        <div class="card-header">
            <h6 class="mb-0">New Clients List</h6>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th>Client Name</th>
                            <th>Email</th>
                            <th>Phone</th>
                            <th>Source</th>
                            <th>Status</th>
                            <th>Projects</th>
                            <th>Created</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach($data['clients'] as $client)
                        <tr>
                            <td>
                                <a href="{{ route('clients.show', $client) }}">{{ $client->name }}</a>
                            </td>
                            <td>{{ $client->email ?: '-' }}</td>
                            <td>{{ $client->phone ?: '-' }}</td>
                            <td>
                                <span class="badge bg-secondary">{{ ucfirst($client->source) }}</span>
                            </td>
                            <td>
                                <span class="badge bg-{{ $client->status == 'aktif' ? 'success' : 'warning' }}">
                                    {{ ucfirst($client->status) }}
                                </span>
                            </td>
                            <td>{{ $client->projects->count() }}</td>
                            <td>{{ $client->created_at->format('d M Y') }}</td>
                        </tr>
                        @endforeach
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
// Source Chart
const sourceCtx = document.getElementById('sourceChart').getContext('2d');
const sourceChart = new Chart(sourceCtx, {
    type: 'pie',
    data: {
        labels: {!! json_encode($data['by_source']->keys()->map(function($source) {
            return ucfirst($source);
        })) !!},
        datasets: [{
            data: {!! json_encode($data['by_source']->pluck('count')) !!},
            backgroundColor: [
                'rgba(75, 192, 192, 0.6)',
                'rgba(54, 162, 235, 0.6)',
                'rgba(255, 206, 86, 0.6)',
                'rgba(153, 102, 255, 0.6)',
                'rgba(255, 159, 64, 0.6)'
            ],
            borderColor: [
                'rgba(75, 192, 192, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
        responsive: true,
        plugins: {
            legend: {
                position: 'right'
            },
            tooltip: {
                callbacks: {
                    label: function(context) {
                        const label = context.label || '';
                        const value = context.raw || 0;
                        const total = context.dataset.data.reduce((a, b) => a + b, 0);
                        const percentage = Math.round((value / total) * 100);
                        return `${label}: ${value} (${percentage}%)`;
                    }
                }
            }
        }
    }
});

// Monthly Chart
const monthlyCtx = document.getElementById('monthlyChart').getContext('2d');
const monthlyChart = new Chart(monthlyCtx, {
    type: 'bar',
    data: {
        labels: {!! json_encode($data['by_month']->keys()->map(function($month) {
            return Carbon\Carbon::createFromFormat('Y-m', $month)->format('M Y');
        })) !!},
        datasets: [{
            label: 'Clients',
            data: {!! json_encode($data['by_month']->pluck('count')) !!},
            backgroundColor: 'rgba(54, 162, 235, 0.6)',
            borderColor: 'rgba(54, 162, 235, 1)',
            borderWidth: 1
        }, {
            label: 'Projects',
            data: {!! json_encode($data['by_month']->pluck('project_count')) !!},
            backgroundColor: 'rgba(75, 192, 192, 0.6)',
            borderColor: 'rgba(75, 192, 192, 1)',
            borderWidth: 1
        }]
    },
    options: {
        responsive: true,
        scales: {
            y: {
                beginAtZero: true
            }
        }
    }
});
</script>
@endpush

resources\views\reports\types\project_summary_pdf.blade.php:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ $title }}</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            font-size: 12px;
            line-height: 1.5;
            color: #333;
        }
        .header {
            text-align: center;
            margin-bottom: 20px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }
        .logo {
            max-width: 150px;
            height: auto;
        }
        h1 {
            font-size: 20px;
            margin: 5px 0;
            color: #1a73e8;
        }
        .period {
            font-size: 14px;
            margin-top: 5px;
            color: #666;
        }
        .summary-box {
            background-color: #f8f9fa;
            border-radius: 5px;
            padding: 10px;
            margin-bottom: 20px;
        }
        .summary-item {
            display: inline-block;
            width: 24%;
            text-align: center;
        }
        .summary-value {
            font-size: 18px;
            font-weight: bold;
            margin: 5px 0;
        }
        .summary-label {
            font-size: 12px;
            color: #666;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
            font-weight: bold;
        }
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        .chart-container {
            width: 100%;
            margin-bottom: 20px;
        }
        .chart-title {
            font-size: 14px;
            font-weight: bold;
            margin-bottom: 10px;
        }
        .footer {
            text-align: center;
            margin-top: 20px;
            font-size: 10px;
            color: #999;
            border-top: 1px solid #ddd;
            padding-top: 10px;
        }
        .badge {
            padding: 3px 6px;
            border-radius: 3px;
            font-size: 10px;
            color: white;
        }
        .badge-primary { background-color: #007bff; }
        .badge-success { background-color: #28a745; }
        .badge-warning { background-color: #ffc107; color: #212529; }
        .badge-danger { background-color: #dc3545; }
        .badge-info { background-color: #17a2b8; }
        .badge-secondary { background-color: #6c757d; }
    </style>
</head>
<body>
    <div class="header">
        <img src="{{ public_path('images/logo.png') }}" alt="Company Logo" class="logo">
        <h1>{{ $title }}</h1>
        <div class="period">Period: {{ $dateFrom->format('d M Y') }} to {{ $dateTo->format('d M Y') }}</div>
    </div>

    <div class="summary-box">
        <div class="summary-item">
            <div class="summary-value">{{ $data['total_projects'] }}</div>
            <div class="summary-label">Total Projects</div>
        </div>
        <div class="summary-item">
            <div class="summary-value">Rp {{ number_format($data['total_value']/1000000, 1) }}M</div>
            <div class="summary-label">Total Value</div>
        </div>
        <div class="summary-item">
            <div class="summary-value">Rp {{ number_format($data['total_deal_value']/1000000, 1) }}M</div>
            <div class="summary-label">Deal Value</div>
        </div>
        <div class="summary-item">
            @php
                $avgValue = $data['total_projects'] > 0 
                    ? $data['total_value'] / $data['total_projects'] 
                    : 0;
            @endphp
            <div class="summary-value">Rp {{ number_format($avgValue/1000000, 1) }}M</div>
            <div class="summary-label">Avg Project Value</div>
        </div>
    </div>

    <div class="chart-container">
        <div class="chart-title">Projects by Status</div>
        <table>
            <thead>
                <tr>
                    <th>Status</th>
                    <th>Count</th>
                    <th>Value</th>
                    <th>Percentage</th>
                </tr>
            </thead>
            <tbody>
                @foreach($data['status_distribution'] as $status => $statusData)
                <tr>
                    <td>{{ ucfirst($status) }}</td>
                    <td>{{ $statusData['count'] }}</td>
                    <td>Rp {{ number_format($statusData['value'], 0, ',', '.') }}</td>
                    <td>{{ round(($statusData['count'] / $data['total_projects']) * 100, 1) }}%</td>
                </tr>
                @endforeach
            </tbody>
        </table>
    </div>

    <div class="chart-container">
        <div class="chart-title">Projects by Type</div>
        <table>
            <thead>
                <tr>
                    <th>Type</th>
                    <th>Count</th>
                    <th>Value</th>
                    <th>Percentage</th>
                </tr>
            </thead>
            <tbody>
                @foreach($data['type_distribution'] as $type => $typeData)
                <tr>
                    <td>{{ ucfirst($type) }}</td>
                    <td>{{ $typeData['count'] }}</td>
                    <td>Rp {{ number_format($typeData['value'], 0, ',', '.') }}</td>
                    <td>{{ round(($typeData['count'] / $data['total_projects']) * 100, 1) }}%</td>
                </tr>
                @endforeach
            </tbody>
        </table>
    </div>

    <div class="chart-title">Projects List</div>
    <table>
        <thead>
            <tr>
                <th>Code</th>
                <th>Name</th>
                <th>Client</th>
                <th>Type</th>
                <th>Status</th>
                <th>PIC</th>
                <th>Value</th>
            </tr>
        </thead>
        <tbody>
            @foreach($data['projects'] as $project)
            <tr>
                <td>{{ $project->code }}</td>
                <td>{{ $project->name }}</td>
                <td>{{ $project->client->name ?? 'N/A' }}</td>
                <td>{{ ucfirst($project->type) }}</td>
                <td>{{ ucfirst($project->status) }}</td>
                <td>{{ $project->pic->name ?? 'N/A' }}</td>
                <td>
                    @if($project->deal_value)
                    Rp {{ number_format($project->deal_value, 0, ',', '.') }}
                    @else
                    Rp {{ number_format($project->project_value, 0, ',', '.') }}
                    @endif
                </td>
            </tr>
            @endforeach
        </tbody>
    </table>

    <div class="footer">
        <div>Generated on {{ now()->format('d M Y H:i') }}</div>
        <div>© {{ now()->format('Y') }} Your Company Name. All rights reserved.</div>
    </div>
</body>
</html>

resources\views\reports\types\project_summary.blade.php:
@extends('layouts.app')

@section('title', $title)

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">{{ $title }}</h4>
            <p class="text-muted mb-0">Period: {{ $dateFrom->format('d M Y') }} to {{ $dateTo->format('d M Y') }}</p>
        </div>
        <div>
            <a href="{{ route('reports.generate', [
                'report_type' => 'project_summary',
                'date_from' => $dateFrom->format('Y-m-d'),
                'date_to' => $dateTo->format('Y-m-d'),
                'format' => 'pdf',
                'parameters' => $parameters
            ]) }}" class="btn btn-outline-danger me-2">
                <i class="bi bi-file-pdf me-2"></i>Export PDF
            </a>
            <a href="{{ route('reports.generate', [
                'report_type' => 'project_summary',
                'date_from' => $dateFrom->format('Y-m-d'),
                'date_to' => $dateTo->format('Y-m-d'),
                'format' => 'excel',
                'parameters' => $parameters
            ]) }}" class="btn btn-outline-success">
                <i class="bi bi-file-excel me-2"></i>Export Excel
            </a>
        </div>
    </div>

    <!-- Report Summary -->
    <div class="row g-3 mb-4">
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="mb-1">{{ $data['total_projects'] }}</h5>
                            <small class="text-muted">Total Projects</small>
                        </div>
                        <div class="icon-box bg-primary bg-opacity-10">
                            <i class="bi bi-building text-primary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="mb-1">Rp {{ number_format($data['total_value']/1000000, 1) }}M</h5>
                            <small class="text-muted">Total Value</small>
                        </div>
                        <div class="icon-box bg-success bg-opacity-10">
                            <i class="bi bi-cash-stack text-success"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="mb-1">Rp {{ number_format($data['total_deal_value']/1000000, 1) }}M</h5>
                            <small class="text-muted">Deal Value</small>
                        </div>
                        <div class="icon-box bg-warning bg-opacity-10">
                            <i class="bi bi-check-circle text-warning"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            @php
                                $avgValue = $data['total_projects'] > 0 
                                    ? $data['total_value'] / $data['total_projects'] 
                                    : 0;
                            @endphp
                            <h5 class="mb-1">Rp {{ number_format($avgValue/1000000, 1) }}M</h5>
                            <small class="text-muted">Avg Project Value</small>
                        </div>
                        <div class="icon-box bg-info bg-opacity-10">
                            <i class="bi bi-graph-up text-info"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Row -->
    <div class="row g-3 mb-4">
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-header">
                    <h6 class="mb-0">Projects by Status</h6>
                </div>
                <div class="card-body">
                    <canvas id="statusChart" height="250"></canvas>
                </div>
            </div>
        </div>
        
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-header">
                    <h6 class="mb-0">Projects by Type</h6>
                </div>
                <div class="card-body">
                    <canvas id="typeChart" height="250"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Projects Table -->
    <div class="card">
        <div class="card-header">
            <h6 class="mb-0">Projects List</h6>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th>Project Code</th>
                            <th>Project Name</th>
                            <th>Client</th>
                            <th>Type</th>
                            <th>Status</th>
                            <th>PIC</th>
                            <th>Value</th>
                            <th>Created</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach($data['projects'] as $project)
                        <tr>
                            <td>{{ $project->code }}</td>
                            <td>
                                <a href="{{ route('projects.show', $project) }}">
                                    {{ $project->name }}
                                </a>
                            </td>
                            <td>{{ $project->client->name ?? 'N/A' }}</td>
                            <td>{{ ucfirst($project->type) }}</td>
                            <td>
                                <span class="badge bg-{{ $project->status_badge }}">
                                    {{ ucfirst($project->status) }}
                                </span>
                            </td>
                            <td>{{ $project->pic->name ?? 'N/A' }}</td>
                            <td>
                                @if($project->deal_value)
                                <strong class="text-success">
                                    Rp {{ number_format($project->deal_value, 0, ',', '.') }}
                                </strong>
                                @else
                                Rp {{ number_format($project->project_value, 0, ',', '.') }}
                                @endif
                            </td>
                            <td>{{ $project->created_at->format('d M Y') }}</td>
                        </tr>
                        @endforeach
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
// Status Chart
const statusCtx = document.getElementById('statusChart').getContext('2d');
const statusChart = new Chart(statusCtx, {
    type: 'bar',
    data: {
        labels: {!! json_encode($data['status_distribution']->keys()->map(function($status) {
            return ucfirst($status);
        })) !!},
        datasets: [{
            label: 'Number of Projects',
            data: {!! json_encode($data['status_distribution']->pluck('count')) !!},
            backgroundColor: [
                'rgba(75, 192, 192, 0.6)',
                'rgba(54, 162, 235, 0.6)',
                'rgba(255, 206, 86, 0.6)',
                'rgba(153, 102, 255, 0.6)',
                'rgba(255, 159, 64, 0.6)',
                'rgba(255, 99, 132, 0.6)',
                'rgba(220, 53, 69, 0.6)',
                'rgba(108, 117, 125, 0.6)'
            ],
            borderColor: [
                'rgba(75, 192, 192, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)',
                'rgba(255, 99, 132, 1)',
                'rgba(220, 53, 69, 1)',
                'rgba(108, 117, 125, 1)'
            ],
            borderWidth: 1
        }, {
            label: 'Total Value (in Millions)',
            data: {!! json_encode($data['status_distribution']->pluck('value')->map(function($value) {
                return round($value / 1000000, 1);
            })) !!},
            type: 'line',
            fill: false,
            borderColor: 'rgba(255, 99, 132, 1)',
            backgroundColor: 'rgba(255, 99, 132, 1)',
            pointBorderColor: 'rgba(255, 99, 132, 1)',
            pointBackgroundColor: 'rgba(255, 99, 132, 1)',
            yAxisID: 'y1'
        }]
    },
    options: {
        responsive: true,
        scales: {
            y: {
                beginAtZero: true,
                title: {
                    display: true,
                    text: 'Number of Projects'
                }
            },
            y1: {
                beginAtZero: true,
                position: 'right',
                grid: {
                    drawOnChartArea: false
                },
                title: {
                    display: true,
                    text: 'Value (in Millions)'
                }
            }
        }
    }
});

// Type Chart
const typeCtx = document.getElementById('typeChart').getContext('2d');
const typeChart = new Chart(typeCtx, {
    type: 'pie',
    data: {
        labels: {!! json_encode($data['type_distribution']->keys()->map(function($type) {
            return ucfirst($type);
        })) !!},
        datasets: [{
            data: {!! json_encode($data['type_distribution']->pluck('count')) !!},
            backgroundColor: [
                'rgba(75, 192, 192, 0.6)',
                'rgba(54, 162, 235, 0.6)',
                'rgba(255, 206, 86, 0.6)',
                'rgba(153, 102, 255, 0.6)',
                'rgba(255, 159, 64, 0.6)',
                'rgba(255, 99, 132, 0.6)'
            ],
            borderColor: [
                'rgba(75, 192, 192, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)',
                'rgba(255, 99, 132, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
        responsive: true,
        plugins: {
            legend: {
                position: 'right'
            },
            tooltip: {
                callbacks: {
                    label: function(context) {
                        const label = context.label || '';
                        const value = context.raw || 0;
                        const total = context.dataset.data.reduce((a, b) => a + b, 0);
                        const percentage = Math.round((value / total) * 100);
                        return `${label}: ${value} (${percentage}%)`;
                    }
                }
            }
        }
    }
});
</script>
@endpush

resources\views\reports\types\revenue_forecast_pdf.blade.php:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ $title }}</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            font-size: 12px;
            line-height: 1.5;
            color: #333;
        }
        .header {
            text-align: center;
            margin-bottom: 20px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }
        .logo {
            max-width: 150px;
            height: auto;
        }
        h1 {
            font-size: 20px;
            margin: 5px 0;
            color: #1a73e8;
        }
        .period {
            font-size: 14px;
            margin-top: 5px;
            color: #666;
        }
        .summary-box {
            background-color: #f8f9fa;
            border-radius: 5px;
            padding: 10px;
            margin-bottom: 20px;
        }
        .summary-item {
            display: inline-block;
            width: 32%;
            text-align: center;
        }
        .summary-value {
            font-size: 18px;
            font-weight: bold;
            margin: 5px 0;
        }
        .summary-label {
            font-size: 12px;
            color: #666;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
            font-weight: bold;
        }
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        .section-title {
            font-size: 16px;
            font-weight: bold;
            margin: 20px 0 10px 0;
            padding-bottom: 5px;
            border-bottom: 1px solid #eee;
        }
        .footer {
            text-align: center;
            margin-top: 20px;
            font-size: 10px;
            color: #999;
            border-top: 1px solid #ddd;
            padding-top: 10px;
        }
    </style>
</head>
<body>
    <div class="header">
        <img src="{{ public_path('images/logo.png') }}" alt="Company Logo" class="logo">
        <h1>{{ $title }}</h1>
        <div class="period">Period: {{ $dateFrom->format('d M Y') }} to {{ $dateTo->format('d M Y') }}</div>
    </div>

    <div class="summary-box">
        <div class="summary-item">
            <div class="summary-value">{{ $data['total_pipeline_projects'] }}</div>
            <div class="summary-label">Pipeline Projects</div>
        </div>
        <div class="summary-item">
            <div class="summary-value">Rp {{ number_format($data['total_pipeline_value']/1000000, 1) }}M</div>
            <div class="summary-label">Pipeline Value</div>
        </div>
        <div class="summary-item">
            <div class="summary-value">Rp {{ number_format($data['total_weighted_value']/1000000, 1) }}M</div>
            <div class="summary-label">Weighted Value</div>
        </div>
    </div>

    <div class="section-title">Monthly Forecast</div>
    <table>
        <thead>
            <tr>
                <th>Month</th>
                <th>Projects</th>
                <th>Total Value</th>
                <th>Weighted Value</th>
                <th>Likelihood</th>
            </tr>
        </thead>
        <tbody>
            @foreach($data['by_month'] as $month => $monthData)
            <tr>
                <td>{{ $monthData['month'] }}</td>
                <td>{{ $monthData['total_projects'] }}</td>
                <td>Rp {{ number_format($monthData['total_value'], 0, ',', '.') }}</td>
                <td>Rp {{ number_format($monthData['weighted_value'], 0, ',', '.') }}</td>
                <td>
                    @php
                        $likelihood = $monthData['total_value'] > 0 
                            ? ($monthData['weighted_value'] / $monthData['total_value']) * 100 
                            : 0;
                    @endphp
                    {{ round($likelihood, 1) }}%
                </td>
            </tr>
            @endforeach
        </tbody>
    </table>

    <div class="section-title">Pipeline by Status</div>
    <table>
        <thead>
            <tr>
                <th>Status</th>
                <th>Projects</th>
                <th>Total Value</th>
                <th>Weighted Value</th>
                <th>Probability</th>
            </tr>
        </thead>
        <tbody>
            @foreach($data['by_status'] as $status => $statusData)
            <tr>
                <td>{{ ucfirst($status) }}</td>
                <td>{{ $statusData['count'] }}</td>
                <td>Rp {{ number_format($statusData['value'], 0, ',', '.') }}</td>
                <td>Rp {{ number_format($statusData['weighted_value'], 0, ',', '.') }}</td>
                <td>
                    @php
                        $probabilities = [
                            'lead' => 10,
                            'survey' => 30,
                            'penawaran' => 50,
                            'negosiasi' => 80
                        ];
                        $probability = $probabilities[$status] ?? 0;
                    @endphp
                    {{ $probability }}%
                </td>
            </tr>
            @endforeach
        </tbody>
    </table>

    <div class="section-title">Pipeline Projects</div>
    <table>
        <thead>
            <tr>
                <th>Project</th>
                <th>Client</th>
                <th>Status</th>
                <th>PIC</th>
                <th>Value</th>
                <th>Probability</th>
                <th>Weighted Value</th>
            </tr>
        </thead>
        <tbody>
            @foreach($data['projects'] as $project)
            <tr>
                <td>
                    {{ $project->name }}
                    <br><small>{{ $project->code }}</small>
                </td>
                <td>{{ $project->client->name ?? 'N/A' }}</td>
                <td>{{ ucfirst($project->status) }}</td>
                <td>{{ $project->pic->name ?? 'N/A' }}</td>
                <td>Rp {{ number_format($project->project_value, 0, ',', '.') }}</td>
                <td>{{ $project->probability * 100 }}%</td>
                <td>Rp {{ number_format($project->weighted_value, 0, ',', '.') }}</td>
            </tr>
            @endforeach
        </tbody>
    </table>

    <div class="footer">
        <div>Generated on {{ now()->format('d M Y H:i') }}</div>
        <div>© {{ now()->format('Y') }} Your Company Name. All rights reserved.</div>
    </div>
</body>
</html>

resources\views\reports\types\revenue_forecast.blade.php:
@extends('layouts.app')

@section('title', $title)

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">{{ $title }}</h4>
            <p class="text-muted mb-0">Period: {{ $dateFrom->format('d M Y') }} to {{ $dateTo->format('d M Y') }}</p>
        </div>
        <div>
            <a href="{{ route('reports.generate', [
                'report_type' => 'revenue_forecast',
                'date_from' => $dateFrom->format('Y-m-d'),
                'date_to' => $dateTo->format('Y-m-d'),
                'format' => 'pdf',
                'parameters' => $parameters
            ]) }}" class="btn btn-outline-danger me-2">
                <i class="bi bi-file-pdf me-2"></i>Export PDF
            </a>
            <a href="{{ route('reports.generate', [
                'report_type' => 'revenue_forecast',
                'date_from' => $dateFrom->format('Y-m-d'),
                'date_to' => $dateTo->format('Y-m-d'),
                'format' => 'excel',
                'parameters' => $parameters
            ]) }}" class="btn btn-outline-success">
                <i class="bi bi-file-excel me-2"></i>Export Excel
            </a>
        </div>
    </div>

    <!-- Summary Cards -->
    <div class="row g-3 mb-4">
        <div class="col-md-4 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="mb-1">{{ $data['total_pipeline_projects'] }}</h5>
                            <small class="text-muted">Pipeline Projects</small>
                        </div>
                        <div class="icon-box bg-primary bg-opacity-10">
                            <i class="bi bi-building text-primary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-4 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="mb-1">Rp {{ number_format($data['total_pipeline_value']/1000000, 1) }}M</h5>
                            <small class="text-muted">Pipeline Value</small>
                        </div>
                        <div class="icon-box bg-warning bg-opacity-10">
                            <i class="bi bi-cash-stack text-warning"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-4 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="mb-1">Rp {{ number_format($data['total_weighted_value']/1000000, 1) }}M</h5>
                            <small class="text-muted">Weighted Value</small>
                        </div>
                        <div class="icon-box bg-success bg-opacity-10">
                            <i class="bi bi-graph-up text-success"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Row -->
    <div class="row g-3 mb-4">
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-header">
                    <h6 class="mb-0">Monthly Forecast</h6>
                </div>
                <div class="card-body">
                    <canvas id="monthlyChart" height="250"></canvas>
                </div>
            </div>
        </div>
        
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-header">
                    <h6 class="mb-0">Pipeline by Status</h6>
                </div>
                <div class="card-body">
                    <canvas id="statusChart" height="250"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Monthly Forecast Table -->
    <div class="card mb-4">
        <div class="card-header">
            <h6 class="mb-0">Monthly Forecast</h6>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th>Month</th>
                            <th>Projects</th>
                            <th>Total Value</th>
                            <th>Weighted Value</th>
                            <th>Likelihood</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach($data['by_month'] as $month => $monthData)
                        <tr>
                            <td>{{ $monthData['month'] }}</td>
                            <td>{{ $monthData['total_projects'] }}</td>
                            <td>Rp {{ number_format($monthData['total_value'], 0, ',', '.') }}</td>
                            <td>Rp {{ number_format($monthData['weighted_value'], 0, ',', '.') }}</td>
                            <td>
                                @php
                                    $likelihood = $monthData['total_value'] > 0 
                                        ? ($monthData['weighted_value'] / $monthData['total_value']) * 100 
                                        : 0;
                                @endphp
                                <div class="d-flex align-items-center">
                                    <div class="progress flex-grow-1" style="height: 6px;">
                                        <div class="progress-bar bg-success" style="width: {{ $likelihood }}%;"></div>
                                    </div>
                                    <span class="ms-2">{{ round($likelihood, 1) }}%</span>
                                </div>
                            </td>
                        </tr>
                        @endforeach
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Status Distribution Table -->
    <div class="card mb-4">
        <div class="card-header">
            <h6 class="mb-0">Pipeline by Status</h6>
            </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th>Status</th>
                            <th>Projects</th>
                            <th>Total Value</th>
                            <th>Weighted Value</th>
                            <th>Probability</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach($data['by_status'] as $status => $statusData)
                        <tr>
                            <td>{{ ucfirst($status) }}</td>
                            <td>{{ $statusData['count'] }}</td>
                            <td>Rp {{ number_format($statusData['value'], 0, ',', '.') }}</td>
                            <td>Rp {{ number_format($statusData['weighted_value'], 0, ',', '.') }}</td>
                            <td>
                                @php
                                    $probabilities = [
                                        'lead' => 10,
                                        'survey' => 30,
                                        'penawaran' => 50,
                                        'negosiasi' => 80
                                    ];
                                    $probability = $probabilities[$status] ?? 0;
                                @endphp
                                <div class="d-flex align-items-center">
                                    <div class="progress flex-grow-1" style="height: 6px;">
                                        <div class="progress-bar bg-primary" style="width: {{ $probability }}%;"></div>
                                    </div>
                                    <span class="ms-2">{{ $probability }}%</span>
                                </div>
                            </td>
                        </tr>
                        @endforeach
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Pipeline Projects Table -->
    <div class="card">
        <div class="card-header">
            <h6 class="mb-0">Pipeline Projects</h6>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th>Project</th>
                            <th>Client</th>
                            <th>Status</th>
                            <th>PIC</th>
                            <th>Value</th>
                            <th>Probability</th>
                            <th>Weighted Value</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach($data['projects'] as $project)
                        <tr>
                            <td>
                                <a href="{{ route('projects.show', $project) }}">{{ $project->name }}</a>
                                <div class="small text-muted">{{ $project->code }}</div>
                            </td>
                            <td>{{ $project->client->name ?? 'N/A' }}</td>
                            <td>
                                <span class="badge bg-{{ $project->status_badge }}">
                                    {{ ucfirst($project->status) }}
                                </span>
                            </td>
                            <td>{{ $project->pic->name ?? 'N/A' }}</td>
                            <td>Rp {{ number_format($project->project_value, 0, ',', '.') }}</td>
                            <td>{{ $project->probability * 100 }}%</td>
                            <td>Rp {{ number_format($project->weighted_value, 0, ',', '.') }}</td>
                        </tr>
                        @endforeach
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
// Monthly Forecast Chart
const monthlyCtx = document.getElementById('monthlyChart').getContext('2d');
const monthlyChart = new Chart(monthlyCtx, {
    type: 'bar',
    data: {
        labels: {!! json_encode(array_map(function($item) { return $item['month']; }, $data['by_month'])) !!},
        datasets: [{
            label: 'Total Value (in Millions)',
            data: {!! json_encode(array_map(function($item) { return round($item['total_value']/1000000, 1); }, $data['by_month'])) !!},
            backgroundColor: 'rgba(54, 162, 235, 0.6)',
            borderColor: 'rgba(54, 162, 235, 1)',
            borderWidth: 1
        }, {
            label: 'Weighted Value (in Millions)',
            data: {!! json_encode(array_map(function($item) { return round($item['weighted_value']/1000000, 1); }, $data['by_month'])) !!},
            backgroundColor: 'rgba(75, 192, 192, 0.6)',
            borderColor: 'rgba(75, 192, 192, 1)',
            borderWidth: 1
        }]
    },
    options: {
        responsive: true,
        scales: {
            y: {
                beginAtZero: true,
                title: {
                    display: true,
                    text: 'Value (in Millions)'
                }
            }
        }
    }
});

// Status Chart
const statusCtx = document.getElementById('statusChart').getContext('2d');
const statusChart = new Chart(statusCtx, {
    type: 'doughnut',
    data: {
        labels: {!! json_encode($data['by_status']->keys()->map(function($status) {
            return ucfirst($status);
        })) !!},
        datasets: [{
            data: {!! json_encode($data['by_status']->pluck('weighted_value')) !!},
            backgroundColor: [
                'rgba(75, 192, 192, 0.6)',
                'rgba(54, 162, 235, 0.6)',
                'rgba(255, 206, 86, 0.6)',
                'rgba(153, 102, 255, 0.6)'
            ],
            borderColor: [
                'rgba(75, 192, 192, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(153, 102, 255, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
        responsive: true,
        plugins: {
            legend: {
                position: 'right'
            },
            tooltip: {
                callbacks: {
                    label: function(context) {
                        const label = context.label || '';
                        const value = context.raw || 0;
                        return `${label}: Rp ${(value/1000000).toFixed(1)}M`;
                    }
                }
            }
        }
    }
});
</script>
@endpush

resources\views\reports\types\sales_performance_pdf.blade.php:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ $title }}</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            font-size: 12px;
            line-height: 1.5;
            color: #333;
        }
        .header {
            text-align: center;
            margin-bottom: 20px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }
        .logo {
            max-width: 150px;
            height: auto;
        }
        h1 {
            font-size: 20px;
            margin: 5px 0;
            color: #1a73e8;
        }
        .period {
            font-size: 14px;
            margin-top: 5px;
            color: #666;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
            font-weight: bold;
        }
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        .section-title {
            font-size: 16px;
            font-weight: bold;
            margin: 20px 0 10px 0;
            padding-bottom: 5px;
            border-bottom: 1px solid #eee;
        }
        .footer {
            text-align: center;
            margin-top: 20px;
            font-size: 10px;
            color: #999;
            border-top: 1px solid #ddd;
            padding-top: 10px;
        }
    </style>
</head>
<body>
    <div class="header">
        <img src="{{ public_path('images/logo.png') }}" alt="Company Logo" class="logo">
        <h1>{{ $title }}</h1>
        <div class="period">Period: {{ $dateFrom->format('d M Y') }} to {{ $dateTo->format('d M Y') }}</div>
    </div>

    <div class="section-title">Sales Team Performance</div>
    <table>
        <thead>
            <tr>
                <th>#</th>
                <th>PIC</th>
                <th>Total Projects</th>
                <th>Won Projects</th>
                <th>Conversion Rate</th>
                <th>Pipeline Value</th>
                <th>Deal Value</th>
            </tr>
        </thead>
        <tbody>
            @foreach($data as $index => $performance)
            <tr>
                <td>{{ $index + 1 }}</td>
                <td>{{ $performance['user']->name }}</td>
                <td>{{ $performance['total_projects'] }}</td>
                <td>{{ $performance['won_projects'] }}</td>
                <td>{{ round($performance['conversion_rate'], 1) }}%</td>
                <td>Rp {{ number_format($performance['total_value'], 0, ',', '.') }}</td>
                <td>Rp {{ number_format($performance['deal_value'], 0, ',', '.') }}</td>
            </tr>
            @endforeach
        </tbody>
    </table>

    <!-- Project Details (if requested) -->
    @if(isset($parameters['include_details']) && $parameters['include_details'])
        @foreach($data as $performance)
            <div class="section-title">Projects by {{ $performance['user']->name }}</div>
            <table>
                <thead>
                    <tr>
                        <th>Project Code</th>
                        <th>Project Name</th>
                        <th>Client</th>
                        <th>Status</th>
                        <th>Value</th>
                        <th>Created</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach($performance['projects'] as $project)
                    <tr>
                        <td>{{ $project->code }}</td>
                        <td>{{ $project->name }}</td>
                        <td>{{ $project->client->name ?? 'N/A' }}</td>
                        <td>{{ ucfirst($project->status) }}</td>
                        <td>
                            @if($project->deal_value)
                            Rp {{ number_format($project->deal_value, 0, ',', '.') }}
                            @else
                            Rp {{ number_format($project->project_value, 0, ',', '.') }}
                            @endif
                        </td>
                        <td>{{ $project->created_at->format('d M Y') }}</td>
                    </tr>
                    @endforeach
                </tbody>
            </table>
        @endforeach
    @endif

    <div class="footer">
        <div>Generated on {{ now()->format('d M Y H:i') }}</div>
        <div>© {{ now()->format('Y') }} Your Company Name. All rights reserved.</div>
    </div>
</body>
</html>

resources\views\reports\types\sales_performance.blade.php:
@extends('layouts.app')

@section('title', $title)

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">{{ $title }}</h4>
            <p class="text-muted mb-0">Period: {{ $dateFrom->format('d M Y') }} to {{ $dateTo->format('d M Y') }}</p>
        </div>
        <div>
            <a href="{{ route('reports.generate', [
                'report_type' => 'sales_performance',
                'date_from' => $dateFrom->format('Y-m-d'),
                'date_to' => $dateTo->format('Y-m-d'),
                'format' => 'pdf',
                'parameters' => $parameters
            ]) }}" class="btn btn-outline-danger me-2">
                <i class="bi bi-file-pdf me-2"></i>Export PDF
            </a>
            <a href="{{ route('reports.generate', [
                'report_type' => 'sales_performance',
                'date_from' => $dateFrom->format('Y-m-d'),
                'date_to' => $dateTo->format('Y-m-d'),
                'format' => 'excel',
                'parameters' => $parameters
            ]) }}" class="btn btn-outline-success">
                <i class="bi bi-file-excel me-2"></i>Export Excel
            </a>
        </div>
    </div>

    <!-- Performance Chart -->
    <div class="card mb-4">
        <div class="card-header">
            <h6 class="mb-0">Sales Performance Comparison</h6>
        </div>
        <div class="card-body">
            <canvas id="performanceChart" height="300"></canvas>
        </div>
    </div>

    <!-- Performance Table -->
    <div class="card mb-4">
        <div class="card-header">
            <h6 class="mb-0">Sales Team Performance</h6>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>PIC</th>
                            <th>Total Projects</th>
                            <th>Won Projects</th>
                            <th>Conversion Rate</th>
                            <th>Pipeline Value</th>
                            <th>Deal Value</th>
                            <th>Performance</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach($data as $index => $performance)
                        <tr>
                            <td>{{ $index + 1 }}</td>
                            <td>{{ $performance['user']->name }}</td>
                            <td>{{ $performance['total_projects'] }}</td>
                            <td>{{ $performance['won_projects'] }}</td>
                            <td>
                                <div class="d-flex align-items-center">
                                    <div class="progress flex-grow-1" style="height: 6px;">
                                        <div class="progress-bar bg-success" style="width: {{ $performance['conversion_rate'] }}%;"></div>
                                    </div>
                                    <span class="ms-2">{{ round($performance['conversion_rate'], 1) }}%</span>
                                </div>
                            </td>
                            <td>Rp {{ number_format($performance['total_value'], 0, ',', '.') }}</td>
                            <td>Rp {{ number_format($performance['deal_value'], 0, ',', '.') }}</td>
                            <td>
                                @php
                                    $maxDealValue = max(array_column($data, 'deal_value'));
                                    $performancePercentage = $maxDealValue > 0 ? ($performance['deal_value'] / $maxDealValue) * 100 : 0;
                                @endphp
                                <div class="progress" style="height: 6px;">
                                    <div class="progress-bar bg-primary" style="width: {{ $performancePercentage }}%;"></div>
                                </div>
                            </td>
                        </tr>
                        @endforeach
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Project Details (if requested) -->
    @if(isset($parameters['include_details']) && $parameters['include_details'])
        @foreach($data as $performance)
        <div class="card mb-4">
            <div class="card-header">
                <h6 class="mb-0">Projects by {{ $performance['user']->name }}</h6>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead>
                            <tr>
                                <th>Project Code</th>
                                <th>Project Name</th>
                                <th>Client</th>
                                <th>Status</th>
                                <th>Value</th>
                                <th>Created</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach($performance['projects'] as $project)
                            <tr>
                                <td>{{ $project->code }}</td>
                                <td>
                                    <a href="{{ route('projects.show', $project) }}">{{ $project->name }}</a>
                                </td>
                                <td>{{ $project->client->name ?? 'N/A' }}</td>
                                <td>
                                    <span class="badge bg-{{ $project->status_badge }}">
                                        {{ ucfirst($project->status) }}
                                    </span>
                                </td>
                                <td>
                                    @if($project->deal_value)
                                    <strong class="text-success">
                                        Rp {{ number_format($project->deal_value, 0, ',', '.') }}
                                    </strong>
                                    @else
                                    Rp {{ number_format($project->project_value, 0, ',', '.') }}
                                    @endif
                                </td>
                                <td>{{ $project->created_at->format('d M Y') }}</td>
                            </tr>
                            @endforeach
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        @endforeach
    @endif
</div>
@endsection

@push('scripts')
<script>
// Performance Chart
const performanceCtx = document.getElementById('performanceChart').getContext('2d');
const performanceChart = new Chart(performanceCtx, {
    type: 'bar',
    data: {
        labels: {!! json_encode(array_map(function($user) { return $user->name; }, array_column($data, 'user'))) !!},
        datasets: [{
            label: 'Pipeline Value (in Millions)',
            data: {!! json_encode(array_map(function($item) { return round($item['total_value']/1000000, 1); }, $data)) !!},
            backgroundColor: 'rgba(54, 162, 235, 0.6)',
            borderColor: 'rgba(54, 162, 235, 1)',
            borderWidth: 1
        }, {
            label: 'Deal Value (in Millions)',
            data: {!! json_encode(array_map(function($item) { return round($item['deal_value']/1000000, 1); }, $data)) !!},
            backgroundColor: 'rgba(75, 192, 192, 0.6)',
            borderColor: 'rgba(75, 192, 192, 1)',
            borderWidth: 1
        }, {
            label: 'Conversion Rate (%)',
            data: {!! json_encode(array_map(function($item) { return round($item['conversion_rate'], 1); }, $data)) !!},
            type: 'line',
            fill: false,
            borderColor: 'rgba(255, 99, 132, 1)',
            backgroundColor: 'rgba(255, 99, 132, 1)',
            yAxisID: 'y1'
        }]
    },
    options: {
        responsive: true,
        scales: {
            y: {
                beginAtZero: true,
                title: {
                    display: true,
                    text: 'Value (in Millions)'
                }
            },
            y1: {
                beginAtZero: true,
                position: 'right',
                max: 100,
                grid: {
                    drawOnChartArea: false
                },
                title: {
                    display: true,
                    text: 'Conversion Rate (%)'
                }
            }
        }
    }
});
</script>
@endpush


resources\views\reports\types\survey_analysis_pdf.blade.php:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ $title }}</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            font-size: 12px;
            line-height: 1.5;
            color: #333;
        }
        .header {
            text-align: center;
            margin-bottom: 20px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }
        .logo {
            max-width: 150px;
            height: auto;
        }
        h1 {
            font-size: 20px;
            margin: 5px 0;
            color: #1a73e8;
        }
        .period {
            font-size: 14px;
            margin-top: 5px;
            color: #666;
        }
        .summary-box {
            background-color: #f8f9fa;
            border-radius: 5px;
            padding: 10px;
            margin-bottom: 20px;
        }
        .summary-item {
            display: inline-block;
            width: 24%;
            text-align: center;
        }
        .summary-value {
            font-size: 18px;
            font-weight: bold;
            margin: 5px 0;
        }
        .summary-label {
            font-size: 12px;
            color: #666;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
            font-weight: bold;
        }
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        .section-title {
            font-size: 16px;
            font-weight: bold;
            margin: 20px 0 10px 0;
            padding-bottom: 5px;
            border-bottom: 1px solid #eee;
        }
        .footer {
            text-align: center;
            margin-top: 20px;
            font-size: 10px;
            color: #999;
            border-top: 1px solid #ddd;
            padding-top: 10px;
        }
    </style>
</head>
<body>
    <div class="header">
        <img src="{{ public_path('images/logo.png') }}" alt="Company Logo" class="logo">
        <h1>{{ $title }}</h1>
        <div class="period">Period: {{ $dateFrom->format('d M Y') }} to {{ $dateTo->format('d M Y') }}</div>
    </div>

    <div class="summary-box">
        <div class="summary-item">
            <div class="summary-value">{{ $data['total_surveys'] }}</div>
            <div class="summary-label">Total Surveys</div>
        </div>
        <div class="summary-item">
            <div class="summary-value">{{ $data['completed_surveys'] }}</div>
            <div class="summary-label">Completed</div>
        </div>
        <div class="summary-item">
            <div class="summary-value">{{ $data['total_photos'] }}</div>
            <div class="summary-label">Photos</div>
        </div>
        <div class="summary-item">
            @php
                $hours = floor($data['avg_completion_time'] / 60);
                $minutes = $data['avg_completion_time'] % 60;
                $timeFormat = $hours > 0 ? "{$hours}h {$minutes}m" : "{$minutes}m";
            @endphp
            <div class="summary-value">{{ $timeFormat }}</div>
            <div class="summary-label">Avg Completion Time</div>
        </div>
    </div>

    <div class="section-title">Status Distribution</div>
    <table>
        <thead>
            <tr>
                <th>Status</th>
                <th>Count</th>
                <th>Photos</th>
                <th>Percentage</th>
            </tr>
        </thead>
        <tbody>
            @foreach($data['by_status'] as $status => $statusData)
            <tr>
                <td>{{ ucfirst($status) }}</td>
                <td>{{ $statusData['count'] }}</td>
                <td>{{ $statusData['photo_count'] }}</td>
                <td>{{ round(($statusData['count'] / $data['total_surveys']) * 100, 1) }}%</td>
            </tr>
            @endforeach
        </tbody>
    </table>

    <div class="section-title">Surveyor Performance</div>
    <table>
        <thead>
            <tr>
                <th>#</th>
                <th>Surveyor</th>
                <th>Total Surveys</th>
                <th>Completed</th>
                <th>Completion Rate</th>
                <th>Photos</th>
                <th>Avg Photos/Survey</th>
            </tr>
        </thead>
        <tbody>
            @php $index = 1; @endphp
            @foreach($data['by_surveyor'] as $surveyorData)
            <tr>
                <td>{{ $index++ }}</td>
                <td>{{ $surveyorData['surveyor']->name }}</td>
                <td>{{ $surveyorData['count'] }}</td>
                <td>{{ $surveyorData['completed'] }}</td>
                <td>
                    @php
                        $completionRate = $surveyorData['count'] > 0 
                            ? ($surveyorData['completed'] / $surveyorData['count']) * 100 
                            : 0;
                    @endphp
                    {{ round($completionRate, 1) }}%
                </td>
                <td>{{ $surveyorData['photo_count'] }}</td>
                <td>
                    {{ $surveyorData['completed'] > 0 
                        ? round($surveyorData['photo_count'] / $surveyorData['completed'], 1) 
                        : 0 }}
                </td>
            </tr>
            @endforeach
        </tbody>
    </table>

    <div class="section-title">Surveys List</div>
    <table>
        <thead>
            <tr>
                <th>Project</th>
                <th>Surveyor</th>
                <th>Scheduled Date</th>
                <th>Actual Date</th>
                <th>Status</th>
                <th>Photos</th>
            </tr>
        </thead>
        <tbody>
            @foreach($data['surveys'] as $survey)
            <tr>
                <td>{{ $survey->project->name ?? 'N/A' }}</td>
                <td>{{ $survey->surveyor->name }}</td>
                <td>{{ $survey->scheduled_date->format('d M Y H:i') }}</td>
                <td>
                    {{ $survey->actual_date ? $survey->actual_date->format('d M Y H:i') : '-' }}
                </td>
                <td>{{ ucfirst($survey->status) }}</td>
                <td>{{ $survey->photos->count() }}</td>
            </tr>
            @endforeach
        </tbody>
    </table>

    <div class="footer">
        <div>Generated on {{ now()->format('d M Y H:i') }}</div>
        <div>© {{ now()->format('Y') }} Your Company Name. All rights reserved.</div>
    </div>
</body>
</html>

resources\views\reports\types\survey_analysis.blade.php:
@extends('layouts.app')

@section('title', $title)

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">{{ $title }}</h4>
            <p class="text-muted mb-0">Period: {{ $dateFrom->format('d M Y') }} to {{ $dateTo->format('d M Y') }}</p>
        </div>
        <div>
            <a href="{{ route('reports.generate', [
                'report_type' => 'survey_analysis',
                'date_from' => $dateFrom->format('Y-m-d'),
                'date_to' => $dateTo->format('Y-m-d'),
                'format' => 'pdf',
                'parameters' => $parameters
            ]) }}" class="btn btn-outline-danger me-2">
                <i class="bi bi-file-pdf me-2"></i>Export PDF
            </a>
            <a href="{{ route('reports.generate', [
                'report_type' => 'survey_analysis',
                'date_from' => $dateFrom->format('Y-m-d'),
                'date_to' => $dateTo->format('Y-m-d'),
                'format' => 'excel',
                'parameters' => $parameters
            ]) }}" class="btn btn-outline-success">
                <i class="bi bi-file-excel me-2"></i>Export Excel
            </a>
        </div>
    </div>

    <!-- Summary Cards -->
    <div class="row g-3 mb-4">
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="mb-1">{{ $data['total_surveys'] }}</h5>
                            <small class="text-muted">Total Surveys</small>
                        </div>
                        <div class="icon-box bg-primary bg-opacity-10">
                            <i class="bi bi-clipboard-check text-primary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="mb-1">{{ $data['completed_surveys'] }}</h5>
                            <small class="text-muted">Completed</small>
                        </div>
                        <div class="icon-box bg-success bg-opacity-10">
                            <i class="bi bi-check-circle text-success"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="mb-1">{{ $data['total_photos'] }}</h5>
                            <small class="text-muted">Photos</small>
                        </div>
                        <div class="icon-box bg-warning bg-opacity-10">
                            <i class="bi bi-camera text-warning"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            @php
                                $hours = floor($data['avg_completion_time'] / 60);
                                $minutes = $data['avg_completion_time'] % 60;
                                $timeFormat = $hours > 0 ? "{$hours}h {$minutes}m" : "{$minutes}m";
                            @endphp
                            <h5 class="mb-1">{{ $timeFormat }}</h5>
                            <small class="text-muted">Avg Completion Time</small>
                        </div>
                        <div class="icon-box bg-info bg-opacity-10">
                            <i class="bi bi-clock-history text-info"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Row -->
    <div class="row g-3 mb-4">
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-header">
                    <h6 class="mb-0">Surveys by Status</h6>
                </div>
                <div class="card-body">
                    <canvas id="statusChart" height="250"></canvas>
                </div>
            </div>
        </div>
        
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-header">
                    <h6 class="mb-0">Surveyor Performance</h6>
                </div>
                <div class="card-body">
                    <canvas id="surveyorChart" height="250"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Surveyor Performance Table -->
    <div class="card mb-4">
        <div class="card-header">
            <h6 class="mb-0">Surveyor Performance</h6>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Surveyor</th>
                            <th>Total Surveys</th>
                            <th>Completed</th>
                            <th>Completion Rate</th>
                            <th>Photos</th>
                            <th>Avg Photos/Survey</th>
                        </tr>
                    </thead>
                    <tbody>
                        @php $index = 1; @endphp
                        @foreach($data['by_surveyor'] as $surveyorData)
                        <tr>
                            <td>{{ $index++ }}</td>
                            <td>{{ $surveyorData['surveyor']->name }}</td>
                            <td>{{ $surveyorData['count'] }}</td>
                            <td>{{ $surveyorData['completed'] }}</td>
                            <td>
                                @php
                                    $completionRate = $surveyorData['count'] > 0 
                                        ? ($surveyorData['completed'] / $surveyorData['count']) * 100 
                                        : 0;
                                @endphp
                                <div class="d-flex align-items-center">
                                    <div class="progress flex-grow-1" style="height: 6px;">
                                        <div class="progress-bar bg-success" style="width: {{ $completionRate }}%;"></div>
                                    </div>
                                    <span class="ms-2">{{ round($completionRate, 1) }}%</span>
                                </div>
                            </td>
                            <td>{{ $surveyorData['photo_count'] }}</td>
                            <td>
                                {{ $surveyorData['completed'] > 0 
                                    ? round($surveyorData['photo_count'] / $surveyorData['completed'], 1) 
                                    : 0 }}
                            </td>
                        </tr>
                        @endforeach
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Surveys Table -->
    <div class="card">
        <div class="card-header">
            <h6 class="mb-0">Surveys List</h6>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th>Project</th>
                            <th>Surveyor</th>
                            <th>Scheduled Date</th>
                            <th>Actual Date</th>
                            <th>Status</th>
                            <th>Photos</th>
                            <th>Location</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach($data['surveys'] as $survey)
                        <tr>
                            <td>
                                <a href="{{ route('projects.show', $survey->project) }}">{{ $survey->project->name ?? 'N/A' }}</a>
                            </td>
                            <td>{{ $survey->surveyor->name }}</td>
                            <td>{{ $survey->scheduled_date->format('d M Y H:i') }}</td>
                            <td>
                                {{ $survey->actual_date ? $survey->actual_date->format('d M Y H:i') : '-' }}
                            </td>
                            <td>
                                <span class="badge bg-{{ $survey->status_badge }}">
                                    {{ ucfirst($survey->status) }}
                                </span>
                            </td>
                            <td>{{ $survey->photos->count() }}</td>
                            <td>
                                @if($survey->latitude && $survey->longitude)
                                <a href="https://maps.google.com/?q={{ $survey->latitude }},{{ $survey->longitude }}" target="_blank">
                                    <i class="bi bi-geo-alt"></i> View
                                </a>
                                @else
                                -
                                @endif
                            </td>
                        </tr>
                        @endforeach
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
// Status Chart
const statusCtx = document.getElementById('statusChart').getContext('2d');
const statusChart = new Chart(statusCtx, {
    type: 'pie',
    data: {
        labels: {!! json_encode($data['by_status']->keys()->map(function($status) {
            return ucfirst($status);
        })) !!},
        datasets: [{
            data: {!! json_encode($data['by_status']->pluck('count')) !!},
            backgroundColor: [
                'rgba(75, 192, 192, 0.6)',
                'rgba(255, 206, 86, 0.6)',
                'rgba(255, 99, 132, 0.6)'
            ],
            borderColor: [
                'rgba(75, 192, 192, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(255, 99, 132, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
        responsive: true,
        plugins: {
            legend: {
                position: 'right'
            },
            tooltip: {
                callbacks: {
                    label: function(context) {
                        const label = context.label || '';
                        const value = context.raw || 0;
                        const total = context.dataset.data.reduce((a, b) => a + b, 0);
                        const percentage = Math.round((value / total) * 100);
                        return `${label}: ${value} (${percentage}%)`;
                    }
                }
            }
        }
    }
});

// Surveyor Chart
const surveyorData = {!! json_encode($data['by_surveyor']) !!};
const surveyorNames = surveyorData.map(item => item.surveyor.name);
const surveyorTotals = surveyorData.map(item => item.count);
const surveyorCompleted = surveyorData.map(item => item.completed);

const surveyorCtx = document.getElementById('surveyorChart').getContext('2d');
const surveyorChart = new Chart(surveyorCtx, {
    type: 'bar',
    data: {
        labels: surveyorNames,
        datasets: [{
            label: 'Total Surveys',
            data: surveyorTotals,
            backgroundColor: 'rgba(54, 162, 235, 0.6)',
            borderColor: 'rgba(54, 162, 235, 1)',
            borderWidth: 1
        }, {
            label: 'Completed',
            data: surveyorCompleted,
            backgroundColor: 'rgba(75, 192, 192, 0.6)',
            borderColor: 'rgba(75, 192, 192, 1)',
            borderWidth: 1
        }]
    },
    options: {
        responsive: true,
        scales: {
            y: {
                beginAtZero: true
            }
        }
    }
});
</script>
@endpush

resources\views\reports\index.blade.php:
@extends('layouts.app')

@section('title', 'Reports')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">Report Generator</h4>
            <p class="text-muted mb-0">Generate custom reports for business analysis</p>
        </div>
    </div>

    <!-- Report Generator Card -->
    <div class="card">
        <div class="card-header">
            <h6 class="mb-0">Generate Report</h6>
        </div>
        <div class="card-body">
            <form action="{{ route('reports.generate') }}" method="GET" id="reportForm">
                <div class="row g-3">
                    <div class="col-md-4">
                        <label class="form-label required">Report Type</label>
                        <select name="report_type" class="form-select" id="reportType" required>
                            <option value="">-- Select Report Type --</option>
                            @foreach($reportTypes as $value => $label)
                                <option value="{{ $value }}">{{ $label }}</option>
                            @endforeach
                        </select>
                    </div>
                    
                    <div class="col-md-3">
                        <label class="form-label required">From Date</label>
                        <input type="date" name="date_from" class="form-control" 
                               value="{{ now()->subMonths(1)->format('Y-m-d') }}" required>
                    </div>
                    
                    <div class="col-md-3">
                        <label class="form-label required">To Date</label>
                        <input type="date" name="date_to" class="form-control" 
                               value="{{ now()->format('Y-m-d') }}" required>
                    </div>
                    
                    <div class="col-md-2">
                        <label class="form-label required">Format</label>
                        <select name="format" class="form-select" required>
                            <option value="html">View in Browser</option>
                            <option value="pdf">PDF</option>
                            <option value="excel">Excel</option>
                        </select>
                    </div>
                </div>

                <!-- Dynamic Parameters Section -->
                <div id="parametersSection" class="mt-4" style="display: none;">
                    <h6 class="mb-3">Additional Parameters</h6>
                    
                    <!-- Project Summary Parameters -->
                    <div class="report-params" id="project_summary_params" style="display: none;">
                        <div class="row g-3">
                            <div class="col-md-4">
                                <label class="form-label">Status Filter</label>
                                <select name="parameters[status]" class="form-select">
                                    <option value="">All Statuses</option>
                                    <option value="lead">Lead</option>
                                    <option value="survey">Survey</option>
                                    <option value="penawaran">Penawaran</option>
                                    <option value="negosiasi">Negosiasi</option>
                                    <option value="deal">Deal</option>
                                    <option value="eksekusi">Eksekusi</option>
                                    <option value="selesai">Selesai</option>
                                    <option value="batal">Batal</option>
                                </select>
                            </div>
                            
                            <div class="col-md-4">
                                <label class="form-label">Project Type</label>
                                <select name="parameters[type]" class="form-select">
                                    <option value="">All Types</option>
                                    <option value="kantor">Kantor</option>
                                    <option value="showroom">Showroom</option>
                                    <option value="kafe">Kafe</option>
                                    <option value="restoran">Restoran</option>
                                    <option value="outlet">Outlet</option>
                                    <option value="other">Lainnya</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Sales Performance Parameters -->
                    <div class="report-params" id="sales_performance_params" style="display: none;">
                        <div class="row g-3">
                            <div class="col-md-4">
                                <label class="form-label">Include Details</label>
                                <select name="parameters[include_details]" class="form-select">
                                    <option value="1">Yes</option>
                                    <option value="0">No</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Survey Analysis Parameters -->
                    <div class="report-params" id="survey_analysis_params" style="display: none;">
                        <div class="row g-3">
                            <div class="col-md-4">
                                <label class="form-label">Status Filter</label>
                                <select name="parameters[status]" class="form-select">
                                    <option value="">All Statuses</option>
                                    <option value="pending">Pending</option>
                                    <option value="completed">Completed</option>
                                    <option value="cancelled">Cancelled</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Revenue Forecast Parameters -->
                    <div class="report-params" id="revenue_forecast_params" style="display: none;">
                        <div class="row g-3">
                            <div class="col-md-4">
                                <label class="form-label">Forecast Period</label>
                                <select name="parameters[forecast_period]" class="form-select">
                                    <option value="3">3 Months</option>
                                    <option value="6" selected>6 Months</option>
                                    <option value="12">12 Months</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="mt-4">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-file-earmark-bar-graph me-2"></i>Generate Report
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Available Reports -->
    <div class="row g-3 mt-4">
        <div class="col-md-4">
            <div class="card h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center mb-3">
                        <div class="icon-box bg-primary bg-opacity-10 me-3">
                            <i class="bi bi-building text-primary"></i>
                        </div>
                        <h5 class="mb-0">Project Summary</h5>
                    </div>
                    <p class="text-muted">Overview of all projects, status distribution, and values across different project types.</p>
                    <button type="button" class="btn btn-outline-primary btn-sm" 
                            onclick="setReportType('project_summary')">
                        Generate Report
                    </button>
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center mb-3">
                        <div class="icon-box bg-success bg-opacity-10 me-3">
                            <i class="bi bi-graph-up-arrow text-success"></i>
                        </div>
                        <h5 class="mb-0">Sales Performance</h5>
                    </div>
                    <p class="text-muted">Analyze sales team performance, conversion rates, and deal values by PIC.</p>
                    <button type="button" class="btn btn-outline-primary btn-sm" 
                            onclick="setReportType('sales_performance')">
                        Generate Report
                    </button>
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center mb-3">
                        <div class="icon-box bg-warning bg-opacity-10 me-3">
                            <i class="bi bi-people text-warning"></i>
                        </div>
                        <h5 class="mb-0">Client Acquisition</h5>
                    </div>
                    <p class="text-muted">Track new client acquisition by source, timeline, and resulting project values.</p>
                    <button type="button" class="btn btn-outline-primary btn-sm" 
                            onclick="setReportType('client_acquisition')">
                        Generate Report
                    </button>
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center mb-3">
                        <div class="icon-box bg-info bg-opacity-10 me-3">
                            <i class="bi bi-clipboard-check text-info"></i>
                        </div>
                        <h5 class="mb-0">Survey Analysis</h5>
                    </div>
                    <p class="text-muted">Analyze survey completion rates, surveyor performance, and photo documentation statistics.</p>
                    <button type="button" class="btn btn-outline-primary btn-sm" 
                            onclick="setReportType('survey_analysis')">
                        Generate Report
                    </button>
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center mb-3">
                        <div class="icon-box bg-danger bg-opacity-10 me-3">
                            <i class="bi bi-calendar-check text-danger"></i>
                        </div>
                        <h5 class="mb-0">Revenue Forecast</h5>
                    </div>
                    <p class="text-muted">Forecast revenue based on current pipeline, probability factors, and project timelines.</p>
                    <button type="button" class="btn btn-outline-primary btn-sm" 
                            onclick="setReportType('revenue_forecast')">
                        Generate Report
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

@push('styles')
<style>
.form-label.required::after {
    content: " *";
    color: #dc3545;
}

.icon-box {
    width: 40px;
    height: 40px;
    border-radius: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
}
</style>
@endpush

@push('scripts')
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Show parameters section based on report type selection
    const reportType = document.getElementById('reportType');
    reportType.addEventListener('change', function() {
        toggleParametersSection(this.value);
    });
});

function toggleParametersSection(reportType) {
    // Hide all parameter sections first
    document.querySelectorAll('.report-params').forEach(section => {
        section.style.display = 'none';
    });
    
    // Show parameters section if we have parameters for this report type
    const paramsSection = document.getElementById('parametersSection');
    const specificParams = document.getElementById(reportType + '_params');
    
    if (specificParams) {
        paramsSection.style.display = 'block';
        specificParams.style.display = 'block';
    } else {
        paramsSection.style.display = 'none';
    }
}

function setReportType(type) {
    const reportType = document.getElementById('reportType');
    reportType.value = type;
    toggleParametersSection(type);
    
    // Scroll to form
    document.getElementById('reportForm').scrollIntoView({ behavior: 'smooth' });
}
</script>
@endpush

resources\views\settings\backup.blade.php:
@extends('layouts.app')

@section('title', 'Backup & Restore')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">Backup & Restore</h4>
            <p class="text-muted mb-0">Manage system backups and restoration</p>
        </div>
        <div>
            <a href="{{ route('settings.create-backup') }}" class="btn btn-primary">
                <i class="bi bi-cloud-upload me-2"></i>Create Backup
            </a>
        </div>
    </div>

    <div class="row">
        <!-- Left Column - Navigation -->
        <div class="col-md-3">
            <div class="card mb-4">
                <div class="card-body p-0">
                    <div class="settings-nav list-group list-group-flush">
                        <a href="{{ route('settings.index') }}" class="list-group-item list-group-item-action">
                            <i class="bi bi-gear me-2"></i> General Settings
                        </a>
                        <a href="{{ route('settings.system') }}" class="list-group-item list-group-item-action">
                            <i class="bi bi-info-circle me-2"></i> System Information
                        </a>
                        <a href="{{ route('settings.backup') }}" class="list-group-item list-group-item-action active">
                            <i class="bi bi-cloud-arrow-up me-2"></i> Backup & Restore
                        </a>
                        <a href="{{ route('settings.logs') }}" class="list-group-item list-group-item-action">
                            <i class="bi bi-journal-text me-2"></i> System Logs
                        </a>
                    </div>
                </div>
            </div>

            <div class="card bg-light">
                <div class="card-body">
                    <h6 class="text-primary mb-3">
                        <i class="bi bi-info-circle me-2"></i>
                        Backup Information
                    </h6>
                    <p class="small text-muted mb-0">
                        Backups include your database and application files. They can be used to restore your system in case of data loss or when migrating to a new server.
                    </p>
                    <hr>
                    <div class="small">
                        <div class="mb-1"><strong>Last Backup:</strong>
                            @if(count($backupData) > 0)
                                {{ date('d M Y H:i', $backupData[0]['last_modified']) }}
                            @else
                                Never
                            @endif
                        </div>
                        <div><strong>Total Backups:</strong> {{ count($backupData) }}</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Right Column - Backup List -->
        <div class="col-md-9">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Backup History</h5>
                </div>
                <div class="card-body p-0">
                    @if(count($backupData) > 0)
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead>
                                <tr>
                                    <th>Filename</th>
                                    <th>Size</th>
                                    <th>Date</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach($backupData as $backup)
                                <tr>
                                    <td>{{ $backup['name'] }}</td>
                                    <td>{{ formatBytes($backup['size']) }}</td>
                                    <td>{{ date('d M Y H:i', $backup['last_modified']) }}</td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a href="{{ route('settings.download-backup', $backup['name']) }}"
                                               class="btn btn-sm btn-outline-primary"
                                               data-bs-toggle="tooltip"
                                               title="Download">
                                                <i class="bi bi-download"></i>
                                            </a>
                                            <form action="{{ route('settings.delete-backup', $backup['name']) }}"
                                                  method="POST"
                                                  onsubmit="return confirm('Are you sure you want to delete this backup?');"
                                                  class="d-inline">
                                                @csrf
                                                @method('DELETE')
                                                <button type="submit"
                                                        class="btn btn-sm btn-outline-danger"
                                                        data-bs-toggle="tooltip"
                                                        title="Delete">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </form>
                                        </div>
                                    </td>
                                </tr>
                                @endforeach
                            </tbody>
                        </table>
                    </div>
                    @else
                    <div class="text-center py-5">
                        <i class="bi bi-cloud-slash fs-1 text-muted d-block mb-3"></i>
                        <h5>No Backups Found</h5>
                        <p class="text-muted">No backup files have been created yet.</p>
                        <a href="{{ route('settings.create-backup') }}" class="btn btn-primary">
                            <i class="bi bi-cloud-upload me-2"></i>Create First Backup
                        </a>
                    </div>
                    @endif
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

@php
function formatBytes($bytes, $precision = 2) {
    $units = ['B', 'KB', 'MB', 'GB', 'TB'];

    $bytes = max($bytes, 0);
    $pow = floor(($bytes ? log($bytes) : 0) / log(1024));
    $pow = min($pow, count($units) - 1);

    $bytes /= (1 << (10 * $pow));

    return round($bytes, $precision) . ' ' . $units[$pow];
}
@endphp

resources\views\settings\index.blade.php:
@extends('layouts.app')

@section('title', 'System Settings')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">System Settings</h4>
            <p class="text-muted mb-0">Manage application configurations and preferences</p>
        </div>
    </div>

    <div class="row">
        <!-- Left Column - Navigation -->
        <div class="col-md-3">
            <div class="card mb-4">
                <div class="card-body p-0">
                    <div class="settings-nav list-group list-group-flush">
                        <a href="#generalSettings" class="list-group-item list-group-item-action active" data-bs-toggle="list">
                            <i class="bi bi-gear me-2"></i> General Settings
                        </a>
                        <a href="#companySettings" class="list-group-item list-group-item-action" data-bs-toggle="list">
                            <i class="bi bi-building me-2"></i> Company Information
                        </a>
                        <a href="#notificationSettings" class="list-group-item list-group-item-action" data-bs-toggle="list">
                            <i class="bi bi-bell me-2"></i> Notification Settings
                        </a>
                        <a href="#userSettings" class="list-group-item list-group-item-action" data-bs-toggle="list">
                            <i class="bi bi-people me-2"></i> User & Security Settings
                        </a>
                        <a href="{{ route('settings.system') }}" class="list-group-item list-group-item-action">
                            <i class="bi bi-info-circle me-2"></i> System Information
                        </a>
                        <a href="{{ route('settings.backup') }}" class="list-group-item list-group-item-action">
                            <i class="bi bi-cloud-arrow-up me-2"></i> Backup & Restore
                        </a>
                        <a href="{{ route('settings.logs') }}" class="list-group-item list-group-item-action">
                            <i class="bi bi-journal-text me-2"></i> System Logs
                        </a>
                    </div>
                </div>
            </div>

            <div class="card bg-light">
                <div class="card-body">
                    <h6 class="text-primary mb-3">
                        <i class="bi bi-info-circle me-2"></i>
                        Setting Tips
                    </h6>
                    <p class="small text-muted mb-0">
                        Changes to system settings may require cache clearing to take effect.
                        Use the clear cache button if you don't see your changes immediately.
                    </p>
                    <hr>
                    <div class="d-grid">
                        <a href="{{ route('settings.clear-cache') }}" class="btn btn-sm btn-outline-primary">
                            <i class="bi bi-arrow-clockwise me-2"></i>Clear Cache
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Right Column - Settings Forms -->
        <div class="col-md-9">
            <div class="tab-content">
                <!-- General Settings -->
                <div class="tab-pane fade show active" id="generalSettings">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="mb-0">General Settings</h5>
                        </div>
                        <div class="card-body">
                            <form action="{{ route('settings.update.general') }}" method="POST">
                                @csrf

                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label class="form-label">Site Name</label>
                                        <input type="text" name="site_name" class="form-control @error('site_name') is-invalid @enderror"
                                               value="{{ $generalSettings['site_name']->value ?? old('site_name') }}" required>
                                        @error('site_name')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                        @enderror
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label">Default Pagination</label>
                                        <input type="number" name="default_pagination" class="form-control @error('default_pagination') is-invalid @enderror"
                                               value="{{ $generalSettings['default_pagination']->value ?? old('default_pagination') }}" required min="5" max="100">
                                        @error('default_pagination')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                        @enderror
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Site Description</label>
                                    <textarea name="site_description" class="form-control @error('site_description') is-invalid @enderror" rows="2">{{ $generalSettings['site_description']->value ?? old('site_description') }}</textarea>
                                    @error('site_description')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                    @enderror
                                </div>

                                <div class="row mb-3">
                                    <div class="col-md-4">
                                        <label class="form-label">Date Format</label>
                                        <select name="date_format" class="form-select @error('date_format') is-invalid @enderror">
                                            <option value="d/m/Y" {{ ($generalSettings['date_format']->value ?? '') == 'd/m/Y' ? 'selected' : '' }}>DD/MM/YYYY (31/12/2023)</option>
                                            <option value="m/d/Y" {{ ($generalSettings['date_format']->value ?? '') == 'm/d/Y' ? 'selected' : '' }}>MM/DD/YYYY (12/31/2023)</option>
                                            <option value="Y-m-d" {{ ($generalSettings['date_format']->value ?? '') == 'Y-m-d' ? 'selected' : '' }}>YYYY-MM-DD (2023-12-31)</option>
                                            <option value="d-m-Y" {{ ($generalSettings['date_format']->value ?? '') == 'd-m-Y' ? 'selected' : '' }}>DD-MM-YYYY (31-12-2023)</option>
                                            <option value="d M Y" {{ ($generalSettings['date_format']->value ?? '') == 'd M Y' ? 'selected' : '' }}>DD Mon YYYY (31 Dec 2023)</option>
                                        </select>
                                        @error('date_format')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                        @enderror
                                    </div>
                                    <div class="col-md-4">
                                        <label class="form-label">Time Format</label>
                                        <select name="time_format" class="form-select @error('time_format') is-invalid @enderror">
                                            <option value="H:i" {{ ($generalSettings['time_format']->value ?? '') == 'H:i' ? 'selected' : '' }}>24 Hour (14:30)</option>
                                            <option value="h:i A" {{ ($generalSettings['time_format']->value ?? '') == 'h:i A' ? 'selected' : '' }}>12 Hour (02:30 PM)</option>
                                        </select>
                                        @error('time_format')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                        @enderror
                                    </div>
                                    <div class="col-md-4">
                                        <label class="form-label">Timezone</label>
                                        <select name="timezone" class="form-select @error('timezone') is-invalid @enderror">
                                            <option value="Asia/Jakarta" {{ ($generalSettings['timezone']->value ?? '') == 'Asia/Jakarta' ? 'selected' : '' }}>Asia/Jakarta (WIB)</option>
                                            <option value="Asia/Makassar" {{ ($generalSettings['timezone']->value ?? '') == 'Asia/Makassar' ? 'selected' : '' }}>Asia/Makassar (WITA)</option>
                                            <option value="Asia/Jayapura" {{ ($generalSettings['timezone']->value ?? '') == 'Asia/Jayapura' ? 'selected' : '' }}>Asia/Jayapura (WIT)</option>
                                        </select>
                                        @error('timezone')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                        @enderror
                                    </div>
                                </div>

                                <div class="form-check form-switch mb-3">
                                    <input class="form-check-input" type="checkbox" id="maintenance_mode" name="maintenance_mode" value="1"
                                           {{ ($generalSettings['maintenance_mode']->value ?? '') == '1' ? 'checked' : '' }}>
                                    <label class="form-check-label" for="maintenance_mode">
                                        Enable Maintenance Mode
                                    </label>
                                    <div class="form-text">When enabled, only administrators can access the system.</div>
                                </div>

                                <div class="text-end">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="bi bi-save me-2"></i>Save General Settings
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <!-- Company Settings -->
                <div class="tab-pane fade" id="companySettings">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="mb-0">Company Information</h5>
                        </div>
                        <div class="card-body">
                            <form action="{{ route('settings.update.company') }}" method="POST" enctype="multipart/form-data">
                                @csrf

                                <div class="row mb-3">
                                    <div class="col-md-12">
                                        <label class="form-label">Company Logo</label>
                                        <div class="d-flex align-items-center">
                                            <div class="me-3">
                                                @if(isset($companySettings['company_logo']))
                                                    <img src="{{ asset('storage/' . $companySettings['company_logo']->value) }}"
                                                         alt="Company Logo" class="img-thumbnail" style="max-height: 100px;">
                                                @else
                                                    <div class="border p-3 text-center bg-light">
                                                        <i class="bi bi-building fs-1 text-muted"></i>
                                                    </div>
                                                @endif
                                            </div>
                                            <div class="flex-grow-1">
                                                <input type="file" name="company_logo" class="form-control @error('company_logo') is-invalid @enderror">
                                                <div class="form-text">Recommended size: 200x60px. Max file size: 2MB.</div>
                                                @error('company_logo')
                                                <div class="invalid-feedback">{{ $message }}</div>
                                                @enderror
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label class="form-label">Company Name</label>
                                        <input type="text" name="company_name" class="form-control @error('company_name') is-invalid @enderror"
                                               value="{{ $companySettings['company_name']->value ?? old('company_name') }}" required>
                                        @error('company_name')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                        @enderror
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label">Tax ID</label>
                                        <input type="text" name="company_tax_id" class="form-control @error('company_tax_id') is-invalid @enderror"
                                               value="{{ $companySettings['company_tax_id']->value ?? old('company_tax_id') }}">
                                        @error('company_tax_id')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                        @enderror
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Company Address</label>
                                    <textarea name="company_address" class="form-control @error('company_address') is-invalid @enderror" rows="2">{{ $companySettings['company_address']->value ?? old('company_address') }}</textarea>
                                    @error('company_address')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                    @enderror
                                </div>

                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label class="form-label">Phone</label>
                                        <input type="text" name="company_phone" class="form-control @error('company_phone') is-invalid @enderror"
                                               value="{{ $companySettings['company_phone']->value ?? old('company_phone') }}">
                                        @error('company_phone')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                        @enderror
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label">Email</label>
                                        <input type="email" name="company_email" class="form-control @error('company_email') is-invalid @enderror"
                                               value="{{ $companySettings['company_email']->value ?? old('company_email') }}">
                                        @error('company_email')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                        @enderror
                                    </div>
                                </div>

                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label class="form-label">Website</label>
                                        <input type="url" name="company_website" class="form-control @error('company_website') is-invalid @enderror"
                                               value="{{ $companySettings['company_website']->value ?? old('company_website') }}">
                                        @error('company_website')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                        @enderror
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label">Currency</label>
                                        <select name="currency" class="form-select @error('currency') is-invalid @enderror">
                                            <option value="IDR" {{ ($companySettings['currency']->value ?? '') == 'IDR' ? 'selected' : '' }}>Indonesian Rupiah (IDR)</option>
                                            <option value="USD" {{ ($companySettings['currency']->value ?? '') == 'USD' ? 'selected' : '' }}>US Dollar (USD)</option>
                                        </select>
                                        @error('currency')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                        @enderror
                                    </div>
                                </div>

                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label class="form-label">Invoice Prefix</label>
                                        <input type="text" name="invoice_prefix" class="form-control @error('invoice_prefix') is-invalid @enderror"
                                               value="{{ $companySettings['invoice_prefix']->value ?? old('invoice_prefix') }}">
                                        @error('invoice_prefix')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                        @enderror
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label">Fiscal Year Start</label>
                                        <select name="fiscal_year_start" class="form-select @error('fiscal_year_start') is-invalid @enderror">
                                            <option value="01-01" {{ ($companySettings['fiscal_year_start']->value ?? '') == '01-01' ? 'selected' : '' }}>January 1</option>
                                            <option value="04-01" {{ ($companySettings['fiscal_year_start']->value ?? '') == '04-01' ? 'selected' : '' }}>April 1</option>
                                            <option value="07-01" {{ ($companySettings['fiscal_year_start']->value ?? '') == '07-01' ? 'selected' : '' }}>July 1</option>
                                            <option value="10-01" {{ ($companySettings['fiscal_year_start']->value ?? '') == '10-01' ? 'selected' : '' }}>October 1</option>
                                        </select>
                                        @error('fiscal_year_start')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                        @enderror
                                    </div>
                                </div>

                                <div class="text-end">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="bi bi-save me-2"></i>Save Company Information
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <!-- Notification Settings -->
                <div class="tab-pane fade" id="notificationSettings">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="mb-0">Notification Settings</h5>
                        </div>
                        <div class="card-body">
                            <form action="{{ route('settings.update.notification') }}" method="POST">
                                @csrf

                                <div class="form-check form-switch mb-3">
                                    <input class="form-check-input" type="checkbox" id="email_notifications" name="email_notifications" value="1"
                                           {{ ($notificationSettings['email_notifications']->value ?? '') == '1' ? 'checked' : '' }}>
                                    <label class="form-check-label" for="email_notifications">
                                        Enable Email Notifications
                                    </label>
                                    <div class="form-text">Send email notifications for important events.</div>
                                </div>

                                <div class="mb-3 notification-email-group"
                                     style="{{ ($notificationSettings['email_notifications']->value ?? '') != '1' ? 'display: none;' : '' }}">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label class="form-label">Notification Email</label>
                                            <input type="email" name="notification_email" class="form-control @error('notification_email') is-invalid @enderror"
                                                   value="{{ $notificationSettings['notification_email']->value ?? old('notification_email') }}">
                                            <div class="form-text">Email address used to send notifications.</div>
                                            @error('notification_email')
                                            <div class="invalid-feedback">{{ $message }}</div>
                                            @enderror
                                        </div>
                                        <div class="col-md-6">
                                            <label class="form-label">Sender Name</label>
                                            <input type="text" name="email_sender_name" class="form-control @error('email_sender_name') is-invalid @enderror"
                                                   value="{{ $notificationSettings['email_sender_name']->value ?? old('email_sender_name') }}">
                                            @error('email_sender_name')
                                            <div class="invalid-feedback">{{ $message }}</div>
                                            @enderror
                                        </div>
                                    </div>
                                </div>

                                <div class="card bg-light mb-3">
                                    <div class="card-header">
                                        <h6 class="mb-0">Notification Types</h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="form-check form-switch mb-2">
                                            <input class="form-check-input" type="checkbox" id="survey_notifications" name="survey_notifications" value="1"
                                                   {{ ($notificationSettings['survey_notifications']->value ?? '') == '1' ? 'checked' : '' }}>
                                            <label class="form-check-label" for="survey_notifications">
                                                Survey Notifications
                                            </label>
                                            <div class="form-text">Notifications for survey assignments and completions.</div>
                                        </div>

                                        <div class="form-check form-switch mb-2">
                                            <input class="form-check-input" type="checkbox" id="project_status_notifications" name="project_status_notifications" value="1"
                                                   {{ ($notificationSettings['project_status_notifications']->value ?? '') == '1' ? 'checked' : '' }}>
                                            <label class="form-check-label" for="project_status_notifications">
                                                Project Status Notifications
                                            </label>
                                            <div class="form-text">Notifications for project status changes.</div>
                                        </div>

                                        <div class="form-check form-switch mb-2">
                                            <input class="form-check-input" type="checkbox" id="document_upload_notifications" name="document_upload_notifications" value="1"
                                                   {{ ($notificationSettings['document_upload_notifications']->value ?? '') == '1' ? 'checked' : '' }}>
                                            <label class="form-check-label" for="document_upload_notifications">
                                                Document Upload Notifications
                                            </label>
                                            <div class="form-text">Notifications when new documents are uploaded.</div>
                                        </div>

                                        <div class="form-check form-switch">
                                            <input class="form-check-input" type="checkbox" id="client_notifications" name="client_notifications" value="1"
                                                   {{ ($notificationSettings['client_notifications']->value ?? '') == '1' ? 'checked' : '' }}>
                                            <label class="form-check-label" for="client_notifications">
                                                Client Notifications
                                            </label>
                                            <div class="form-text">Notifications for new clients and client updates.</div>
                                        </div>
                                    </div>
                                </div>

                                <div class="text-end">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="bi bi-save me-2"></i>Save Notification Settings
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <!-- User Settings -->
                <div class="tab-pane fade" id="userSettings">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="mb-0">User & Security Settings</h5>
                        </div>
                        <div class="card-body">
                            <form action="{{ route('settings.update.user') }}" method="POST">
                                @csrf

                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label class="form-label">Default Role for New Users</label>
                                        <select name="default_role" class="form-select @error('default_role') is-invalid @enderror">
                                            <option value="user" {{ ($userSettings['default_role']->value ?? '') == 'user' ? 'selected' : '' }}>User</option>
                                            <option value="marketing" {{ ($userSettings['default_role']->value ?? '') == 'marketing' ? 'selected' : '' }}>Marketing</option>
                                            <option value="surveyor" {{ ($userSettings['default_role']->value ?? '') == 'surveyor' ? 'selected' : '' }}>Surveyor</option>
                                        </select>
                                        @error('default_role')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                        @enderror
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label">Max Avatar Size (MB)</label>
                                        <input type="number" name="user_avatar_max_size" class="form-control @error('user_avatar_max_size') is-invalid @enderror"
                                               value="{{ $userSettings['user_avatar_max_size']->value ?? old('user_avatar_max_size') }}" min="1" max="10">
                                        @error('user_avatar_max_size')
                                        <div class="invalid-feedback">{{ $message }}</div>
                                        @enderror
                                    </div>
                                </div>

                                <div class="form-check form-switch mb-3">
                                    <input class="form-check-input" type="checkbox" id="allow_registration" name="allow_registration" value="1"
                                           {{ ($userSettings['allow_registration']->value ?? '') == '1' ? 'checked' : '' }}>
                                    <label class="form-check-label" for="allow_registration">
                                        Allow Public Registration
                                    </label>
                                    <div class="form-text">Allow users to register accounts. If disabled, only administrators can create accounts.</div>
                                </div>

                                <div class="form-check form-switch mb-3">
                                    <input class="form-check-input" type="checkbox" id="account_approval" name="account_approval" value="1"
                                           {{ ($userSettings['account_approval']->value ?? '') == '1' ? 'checked' : '' }}>
                                    <label class="form-check-label" for="account_approval">
                                        Require Account Approval
                                    </label>
                                    <div class="form-text">Require administrator approval for new accounts before they can log in.</div>
                                </div>

                                <div class="card bg-light mb-3">
                                    <div class="card-header">
                                        <h6 class="mb-0">Password Policy</h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="mb-3">
                                            <label class="form-label">Minimum Password Length</label>
                                            <input type="number" name="password_min_length" class="form-control @error('password_min_length') is-invalid @enderror"
                                                   value="{{ $userSettings['password_min_length']->value ?? old('password_min_length') }}" min="6" max="20">
                                            @error('password_min_length')
                                            <div class="invalid-feedback">{{ $message }}</div>
                                            @enderror
                                        </div>

                                        <div class="form-check form-switch mb-2">
                                            <input class="form-check-input" type="checkbox" id="password_requires_letters" name="password_requires_letters" value="1"
                                                   {{ ($userSettings['password_requires_letters']->value ?? '') == '1' ? 'checked' : '' }}>
                                            <label class="form-check-label" for="password_requires_letters">
                                                Require Letters
                                            </label>
                                        </div>

                                        <div class="form-check form-switch mb-2">
                                            <input class="form-check-input" type="checkbox" id="password_requires_numbers" name="password_requires_numbers" value="1"
                                                   {{ ($userSettings['password_requires_numbers']->value ?? '') == '1' ? 'checked' : '' }}>
                                            <label class="form-check-label" for="password_requires_numbers">
                                                Require Numbers
                                            </label>
                                        </div>

                                        <div class="form-check form-switch">
                                            <input class="form-check-input" type="checkbox" id="password_requires_symbols" name="password_requires_symbols" value="1"
                                                   {{ ($userSettings['password_requires_symbols']->value ?? '') == '1' ? 'checked' : '' }}>
                                            <label class="form-check-label" for="password_requires_symbols">
                                                Require Symbols
                                            </label>
                                        </div>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Mark Users Inactive After (days)</label>
                                    <input type="number" name="inactive_user_days" class="form-control @error('inactive_user_days') is-invalid @enderror"
                                           value="{{ $userSettings['inactive_user_days']->value ?? old('inactive_user_days') }}" min="30" max="365">
                                    <div class="form-text">Number of days after which users with no login activity are marked as inactive.</div>
                                    @error('inactive_user_days')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                    @enderror
                                </div>

                                <div class="text-end">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="bi bi-save me-2"></i>Save User Settings
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

@push('styles')
<style>
.settings-nav .list-group-item {
    border-radius: 0;
    border-left: none;
    border-right: none;
    padding: 0.75rem 1rem;
}

.settings-nav .list-group-item:first-child {
    border-top: none;
}

.settings-nav .list-group-item:last-child {
    border-bottom: none;
}

.settings-nav .list-group-item.active {
    background-color: #f8f9fa;
    color: var(--primary-color);
    border-color: #dee2e6;
    border-left: 3px solid var(--primary-color);
    font-weight: 500;
}

.icon-box {
    width: 40px;
    height: 40px;
    border-radius: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
}
</style>
@endpush

@push('scripts')
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Show/hide notification email settings based on checkbox
    const emailNotificationsCheckbox = document.getElementById('email_notifications');
    const notificationEmailGroup = document.querySelector('.notification-email-group');

    if (emailNotificationsCheckbox) {
        emailNotificationsCheckbox.addEventListener('change', function() {
            if (this.checked) {
                notificationEmailGroup.style.display = 'block';
            } else {
                notificationEmailGroup.style.display = 'none';
            }
        });
    }

    // Save active tab to localStorage
    const tabLinks = document.querySelectorAll('.settings-nav .list-group-item');
    const tabPanes = document.querySelectorAll('.tab-pane');

    tabLinks.forEach(link => {
        link.addEventListener('click', function() {
            localStorage.setItem('activeSettingsTab', this.getAttribute('href'));
        });
    });

    // Restore active tab from localStorage
    const activeTab = localStorage.getItem('activeSettingsTab');
    if (activeTab) {
        const activeLink = document.querySelector(`.settings-nav .list-group-item[href="${activeTab}"]`);
        if (activeLink) {
            tabLinks.forEach(link => {
                link.classList.remove('active');
            });
            tabPanes.forEach(pane => {
                pane.classList.remove('show', 'active');
            });

            activeLink.classList.add('active');
            document.querySelector(activeTab).classList.add('show', 'active');
        }
    }
});
</script>
@endpush

resources\views\settings\log-viewer.blade.php:
@extends('layouts.app')

@section('title', 'Log Viewer')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">Log Viewer: {{ $filename }}</h4>
            <p class="text-muted mb-0">Viewing log file contents</p>
        </div>
        <div>
            <a href="{{ route('settings.logs') }}" class="btn btn-outline-primary me-2">
                <i class="bi bi-arrow-left me-2"></i>Back to Logs
            </a>
            <a href="{{ route('settings.download-log', $filename) }}" class="btn btn-outline-success">
                <i class="bi bi-download me-2"></i>Download
            </a>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="log-content bg-dark text-white p-3 rounded" style="max-height: 70vh; overflow-y: auto;">
                <pre style="white-space: pre-wrap;">{{ $content }}</pre>
            </div>
        </div>
    </div>
</div>
@endsection

resources\views\settings\logs.blade.php:
@extends('layouts.app')

@section('title', 'System Logs')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">System Logs</h4>
            <p class="text-muted mb-0">View and manage application logs</p>
        </div>
    </div>

    <div class="row">
        <!-- Left Column - Navigation -->
        <div class="col-md-3">
            <div class="card mb-4">
                <div class="card-body p-0">
                    <div class="settings-nav list-group list-group-flush">
                        <a href="{{ route('settings.index') }}" class="list-group-item list-group-item-action">
                            <i class="bi bi-gear me-2"></i> General Settings
                        </a>
                        <a href="{{ route('settings.system') }}" class="list-group-item list-group-item-action">
                            <i class="bi bi-info-circle me-2"></i> System Information
                        </a>
                        <a href="{{ route('settings.backup') }}" class="list-group-item list-group-item-action">
                            <i class="bi bi-cloud-arrow-up me-2"></i> Backup & Restore
                        </a>
                        <a href="{{ route('settings.logs') }}" class="list-group-item list-group-item-action active">
                            <i class="bi bi-journal-text me-2"></i> System Logs
                        </a>
                    </div>
                </div>
            </div>

            <div class="card bg-light">
                <div class="card-body">
                    <h6 class="text-primary mb-3">
                        <i class="bi bi-info-circle me-2"></i>
                        Log Information
                    </h6>
                    <p class="small text-muted mb-0">
                        System logs record application events and errors. They are useful for troubleshooting issues and monitoring system health.
                    </p>
                </div>
            </div>
        </div>

        <!-- Right Column - Logs List -->
        <div class="col-md-9">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Log Files</h5>
                </div>
                <div class="card-body p-0">
                    @if(count($logData) > 0)
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead>
                                <tr>
                                    <th>Filename</th>
                                    <th>Size</th>
                                    <th>Last Modified</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach($logData as $log)
                                <tr>
                                    <td>{{ $log['name'] }}</td>
                                    <td>{{ formatBytes($log['size']) }}</td>
                                    <td>{{ date('d M Y H:i', $log['last_modified']) }}</td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a href="{{ route('settings.view-log', $log['name']) }}"
                                               class="btn btn-sm btn-outline-primary"
                                               data-bs-toggle="tooltip"
                                               title="View">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            <a href="{{ route('settings.download-log', $log['name']) }}"
                                               class="btn btn-sm btn-outline-success"
                                               data-bs-toggle="tooltip"
                                               title="Download">
                                                <i class="bi bi-download"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                                @endforeach
                            </tbody>
                        </table>
                    </div>
                    @else
                    <div class="text-center py-5">
                        <i class="bi bi-journal-x fs-1 text-muted d-block mb-3"></i>
                        <h5>No Log Files Found</h5>
                        <p class="text-muted">No log files are currently available.</p>
                    </div>
                    @endif
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

@php
function formatBytes($bytes, $precision = 2) {
    $units = ['B', 'KB', 'MB', 'GB', 'TB'];

    $bytes = max($bytes, 0);
    $pow = floor(($bytes ? log($bytes) : 0) / log(1024));
    $pow = min($pow, count($units) - 1);

    $bytes /= (1 << (10 * $pow));

    return round($bytes, $precision) . ' ' . $units[$pow];
}
@endphp

resources\views\settings\system.blade.php:
@extends('layouts.app')

@section('title', 'System Information')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">System Information</h4>
            <p class="text-muted mb-0">View system configuration and technical details</p>
        </div>
        <div>
            <a href="{{ route('settings.index') }}" class="btn btn-outline-primary">
                <i class="bi bi-arrow-left me-2"></i>Back to Settings
            </a>
        </div>
    </div>

    <div class="row">
        <!-- Left Column - Navigation -->
        <div class="col-md-3">
            <div class="card mb-4">
                <div class="card-body p-0">
                    <div class="settings-nav list-group list-group-flush">
                        <a href="{{ route('settings.index') }}" class="list-group-item list-group-item-action">
                            <i class="bi bi-gear me-2"></i> General Settings
                        </a>
                        <a href="{{ route('settings.system') }}" class="list-group-item list-group-item-action active">
                            <i class="bi bi-info-circle me-2"></i> System Information
                        </a>
                        <a href="{{ route('settings.backup') }}" class="list-group-item list-group-item-action">
                            <i class="bi bi-cloud-arrow-up me-2"></i> Backup & Restore
                        </a>
                        <a href="{{ route('settings.logs') }}" class="list-group-item list-group-item-action">
                            <i class="bi bi-journal-text me-2"></i> System Logs
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Right Column - System Information -->
        <div class="col-md-9">
            <!-- System Overview -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">System Overview</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <tbody>
                                @foreach($systemInfo as $key => $value)
                                <tr>
                                    <th width="30%">{{ $key }}</th>
                                    <td>{{ $value }}</td>
                                </tr>
                                @endforeach
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- PHP Extensions -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">PHP Extensions</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        @foreach($extensionStatus as $extension => $installed)
                        <div class="col-md-4 mb-2">
                            <div class="d-flex align-items-center">
                                @if($installed)
                                <i class="bi bi-check-circle-fill text-success me-2"></i>
                                @else
                                <i class="bi bi-x-circle-fill text-danger me-2"></i>
                                @endif
                                {{ $extension }}
                            </div>
                        </div>
                        @endforeach
                    </div>
                </div>
            </div>

            <!-- Directory Permissions -->
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Directory Permissions</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Directory</th>
                                    <th>Path</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach($directoryPermissions as $name => $dir)
                                <tr>
                                    <td>{{ $name }}</td>
                                    <td><small>{{ $dir['path'] }}</small></td>
                                    <td>
                                        @if($dir['writable'])
                                        <span class="badge bg-success">Writable</span>
                                        @else
                                        <span class="badge bg-danger">Not Writable</span>
                                        @endif
                                    </td>
                                </tr>
                                @endforeach
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

resources\views\surveys\mobile\form.blade.php:
@extends('layouts.mobile')

@section('title', 'Form Survey')

@section('content')
<div class="survey-mobile-container">
    <!-- Survey Selection if multiple -->
    @if(!$survey && $pendingSurveys->count() > 0)
    <div class="card mb-3">
        <div class="card-header bg-primary text-white">
            <h6 class="mb-0">Pilih Survey</h6>
        </div>
        <div class="card-body">
            <div class="list-group">
                @foreach($pendingSurveys as $pendingSurvey)
                <a href="{{ route('surveys.mobile.form', ['survey_id' => $pendingSurvey->id]) }}" 
                   class="list-group-item list-group-item-action">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <h6 class="mb-1">{{ $pendingSurvey->project->name }}</h6>
                            <p class="mb-1 text-muted small">{{ $pendingSurvey->project->client->name }}</p>
                            <small class="text-muted">
                                <i class="bi bi-calendar me-1"></i>
                                {{ $pendingSurvey->scheduled_date->format('d M Y H:i') }}
                            </small>
                        </div>
                        <i class="bi bi-chevron-right text-muted"></i>
                    </div>
                </a>
                @endforeach
            </div>
        </div>
    </div>
    @elseif(!$survey)
    <div class="text-center py-5">
        <i class="bi bi-calendar-x fs-1 text-muted d-block mb-3"></i>
        <h5>Tidak Ada Survey</h5>
        <p class="text-muted">Anda tidak memiliki survey yang dijadwalkan hari ini</p>
        <a href="{{ route('surveys.index') }}" class="btn btn-primary">
            <i class="bi bi-arrow-left me-2"></i>Kembali
        </a>
    </div>
    @else
    <!-- Survey Form -->
    <form id="surveyForm" method="POST" action="{{ route('surveys.submit', $survey) }}" enctype="multipart/form-data">
        @csrf
        <input type="hidden" name="latitude" id="latitude">
        <input type="hidden" name="longitude" id="longitude">
        
        <!-- Project Info -->
        <div class="card mb-3 border-primary">
            <div class="card-body">
                <h6 class="text-primary mb-1">{{ $survey->project->name }}</h6>
                <p class="mb-1">{{ $survey->project->client->name }}</p>
                <small class="text-muted">
                    <i class="bi bi-geo-alt me-1"></i>{{ $survey->project->location }}
                </small>
            </div>
        </div>

        <!-- Location Info -->
        <div class="card mb-3">
            <div class="card-body">
                <h6 class="card-title mb-3">
                    <i class="bi bi-geo-alt text-primary me-2"></i>
                    Informasi Lokasi
                </h6>
                
                <div id="locationInfo" class="alert alert-info">
                    <i class="bi bi-hourglass-split me-2"></i>
                    Mendapatkan lokasi GPS...
                </div>
                
                <div id="map" style="height: 200px; display: none;" class="rounded mb-3"></div>
                
                <div class="mb-3">
                    <label class="form-label">Alamat Lengkap Survey</label>
                    <textarea class="form-control @error('address') is-invalid @enderror" 
                              name="address" 
                              rows="2" 
                              required>{{ old('address') }}</textarea>
                    @error('address')
                    <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
            </div>
        </div>
        
        <!-- Survey Checklist -->
        <div class="card mb-3">
            <div class="card-body">
                <h6 class="card-title mb-3">
                    <i class="bi bi-clipboard-check text-primary me-2"></i>
                    Checklist Survey
                </h6>
                
                <!-- Ketersediaan Listrik -->
                <div class="mb-3">
                    <label class="form-label">Ketersediaan Listrik</label>
                    <div class="btn-group w-100" role="group">
                        <input type="radio" class="btn-check" name="electricity" id="electricity_yes" value="yes" required>
                        <label class="btn btn-outline-success" for="electricity_yes">
                            <i class="bi bi-check-circle me-1"></i> Ada
                        </label>
                        
                        <input type="radio" class="btn-check" name="electricity" id="electricity_no" value="no">
                        <label class="btn btn-outline-danger" for="electricity_no">
                            <i class="bi bi-x-circle me-1"></i> Tidak Ada
                        </label>
                    </div>
                    <input type="text" class="form-control mt-2" name="electricity_notes" placeholder="Catatan (opsional)">
                </div>
                
                <!-- Ketersediaan Air -->
                <div class="mb-3">
                    <label class="form-label">Ketersediaan Air</label>
                    <div class="btn-group w-100" role="group">
                        <input type="radio" class="btn-check" name="water" id="water_yes" value="yes" required>
                        <label class="btn btn-outline-success" for="water_yes">
                            <i class="bi bi-check-circle me-1"></i> Ada
                        </label>
                        
                        <input type="radio" class="btn-check" name="water" id="water_no" value="no">
                        <label class="btn btn-outline-danger" for="water_no">
                            <i class="bi bi-x-circle me-1"></i> Tidak Ada
                        </label>
                    </div>
                    <input type="text" class="form-control mt-2" name="water_notes" placeholder="Catatan (opsional)">
                </div>
                
                <!-- Akses Jalan -->
                <div class="mb-3">
                    <label class="form-label">Akses Jalan</label>
                    <select class="form-select @error('road_access') is-invalid @enderror" name="road_access" required>
                        <option value="">Pilih kondisi akses</option>
                        <option value="easy">Mudah - Mobil besar bisa masuk</option>
                        <option value="medium">Sedang - Hanya mobil kecil</option>
                        <option value="difficult">Sulit - Hanya motor/jalan kaki</option>
                    </select>
                    @error('road_access')
                    <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- Status Izin -->
                <div class="mb-3">
                    <label class="form-label">Status Izin</label>
                    <select class="form-select @error('permit_status') is-invalid @enderror" name="permit_status" required>
                        <option value="">Pilih status</option>
                        <option value="complete">Lengkap</option>
                        <option value="process">Dalam Proses</option>
                        <option value="none">Belum Ada</option>
                    </select>
                    @error('permit_status')
                    <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- Kondisi Existing -->
                <div class="mb-3">
                    <label class="form-label">Kondisi Bangunan Existing</label>
                    <select class="form-select @error('existing_condition') is-invalid @enderror" name="existing_condition" required>
                        <option value="">Pilih kondisi</option>
                        <option value="good">Baik</option>
                        <option value="medium">Sedang</option>
                        <option value="bad">Buruk</option>
                        <option value="empty">Tanah Kosong</option>
                    </select>
                    @error('existing_condition')
                    <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
                
                <!-- Luas Area -->
                <div class="mb-3">
                    <label class="form-label">Luas Area (m²)</label>
                    <input type="number" 
                           class="form-control @error('area_size') is-invalid @enderror" 
                           name="area_size" 
                           placeholder="Contoh: 250" 
                           required>
                    @error('area_size')
                    <div class="invalid-feedback">{{ $message }}</div>
                    @enderror
                </div>
            </div>
        </div>
        
        <!-- Photo Upload -->
        <div class="card mb-3">
            <div class="card-body">
                <h6 class="card-title mb-3">
                    <i class="bi bi-camera text-primary me-2"></i>
                    Foto Lokasi
                </h6>
                
                <div class="photo-upload-area text-center p-4 border rounded" 
                     onclick="document.getElementById('photoInput').click()">
                    <i class="bi bi-cloud-upload fs-1 text-primary mb-2 d-block"></i>
                    <p class="mb-0">Tap untuk ambil foto atau upload</p>
                    <small class="text-muted">Maksimal 10 foto, masing-masing 10MB</small>
                </div>
                
                <input type="file" 
                       id="photoInput" 
                       name="photos[]" 
                       multiple 
                       accept="image/*" 
                       capture="environment"
                       style="display: none;">
                
                <div id="photoPreview" class="photo-preview mt-3"></div>
            </div>
        </div>
        
        <!-- Notes -->
        <div class="card mb-3">
            <div class="card-body">
                <h6 class="card-title mb-3">
                    <i class="bi bi-pencil-square text-primary me-2"></i>
                    Catatan Tambahan
                </h6>
                <textarea class="form-control" 
                          name="notes" 
                          rows="4" 
                          placeholder="Tulis catatan atau kondisi khusus di lapangan...">{{ old('notes') }}</textarea>
            </div>
        </div>
        
        <!-- Submit Buttons -->
        <div class="d-grid gap-2 mb-4">
            <button type="submit" class="btn btn-primary btn-lg" id="submitBtn">
                <i class="bi bi-send me-2"></i>
                Kirim Survey
            </button>
            <button type="button" class="btn btn-outline-secondary" id="saveDraftBtn">
                <i class="bi bi-save me-2"></i>
                Simpan Draft
            </button>
        </div>
    </form>
    @endif
</div>

<!-- Offline Indicator -->
<div id="offlineIndicator" class="position-fixed bottom-0 start-0 end-0 bg-warning text-center py-2" style="display: none; z-index: 1050;">
    <i class="bi bi-wifi-off me-2"></i>
    Offline Mode - Data akan dikirim saat online
</div>
@endsection

@push('styles')
<style>
.photo-upload-area {
    border: 2px dashed var(--primary-color);
    cursor: pointer;
    transition: all 0.3s ease;
}

.photo-upload-area:hover {
    background-color: rgba(26, 115, 232, 0.05);
}

.photo-preview {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    gap: 0.5rem;
}

.photo-preview .photo-item {
    position: relative;
}

.photo-preview img {
    width: 100%;
    height: 100px;
    object-fit: cover;
    border-radius: 6px;
}

.photo-preview .remove-photo {
    position: absolute;
    top: 5px;
    right: 5px;
    background-color: rgba(220, 53, 69, 0.9);
    color: white;
    border: none;
    border-radius: 50%;
    width: 25px;
    height: 25px;
    font-size: 12px;
    cursor: pointer;
}
</style>
@endpush

@push('scripts')
<script>
let selectedPhotos = [];

// Get GPS Location
function getLocation() {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition, showError, {
            enableHighAccuracy: true,
            timeout: 10000,
            maximumAge: 0
        });
    } else {
        document.getElementById('locationInfo').innerHTML = 
            '<i class="bi bi-exclamation-triangle me-2"></i>GPS tidak didukung browser ini';
    }
}

function showPosition(position) {
    const lat = position.coords.latitude;
    const lng = position.coords.longitude;
    
    document.getElementById('latitude').value = lat;
    document.getElementById('longitude').value = lng;
    
    // Update location info
    document.getElementById('locationInfo').innerHTML = 
        `<i class="bi bi-check-circle text-success me-2"></i>Lokasi GPS: ${lat.toFixed(6)}, ${lng.toFixed(6)}`;
    
    // Show map
    document.getElementById('map').style.display = 'block';
    
    // Initialize map
    const map = L.map('map').setView([lat, lng], 17);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '© OpenStreetMap contributors'
    }).addTo(map);
    
    L.marker([lat, lng]).addTo(map)
        .bindPopup('Lokasi Survey')
        .openPopup();
}

function showError(error) {
    let message = '';
    switch(error.code) {
        case error.PERMISSION_DENIED:
            message = "Akses GPS ditolak. Silakan aktifkan GPS.";
            break;
        case error.POSITION_UNAVAILABLE:
            message = "Informasi lokasi tidak tersedia.";
            break;
        case error.TIMEOUT:
            message = "Request timeout. Coba lagi.";
            break;
        case error.UNKNOWN_ERROR:
            message = "Error tidak diketahui.";
            break;
    }
    document.getElementById('locationInfo').innerHTML = 
        `<i class="bi bi-exclamation-triangle me-2"></i>${message}`;
}

// Photo Preview
document.getElementById('photoInput').addEventListener('change', function(e) {
    const files = Array.from(e.target.files);
    const preview = document.getElementById('photoPreview');
    
    files.forEach((file, index) => {
        if (selectedPhotos.length >= 10) {
            Swal.fire('Peringatan', 'Maksimal 10 foto', 'warning');
            return;
        }
        
        selectedPhotos.push(file);
        const reader = new FileReader();
        
        reader.onload = function(e) {
            const photoItem = document.createElement('div');
            photoItem.className = 'photo-item';
            photoItem.innerHTML = `
                <img src="${e.target.result}" alt="Photo ${selectedPhotos.length}">
                <button type="button" class="remove-photo" onclick="removePhoto(${selectedPhotos.length - 1})">
                    <i class="bi bi-x"></i>
                </button>
            `;
            preview.appendChild(photoItem);
        };
        
        reader.readAsDataURL(file);
    });
});

function removePhoto(index) {
    selectedPhotos.splice(index, 1);
    updatePhotoPreview();
}

function updatePhotoPreview() {
    const preview = document.getElementById('photoPreview');
    preview.innerHTML = '';
    
    selectedPhotos.forEach((file, index) => {
        const reader = new FileReader();
        reader.onload = function(e) {
            const photoItem = document.createElement('div');
            photoItem.className = 'photo-item';
            photoItem.innerHTML = `
                <img src="${e.target.result}" alt="Photo ${index + 1}">
                <button type="button" class="remove-photo" onclick="removePhoto(${index})">
                    <i class="bi bi-x"></i>
                </button>
            `;
            preview.appendChild(photoItem);
        };
        reader.readAsDataURL(file);
    });
}

// Offline Detection
window.addEventListener('online', function() {
    document.getElementById('offlineIndicator').style.display = 'none';
    // Sync offline data
    syncOfflineData();
});

window.addEventListener('offline', function() {
    document.getElementById('offlineIndicator').style.display = 'block';
});

// Form Submit with Photos
document.getElementById('surveyForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    if (!navigator.onLine) {
        saveOfflineData();
        Swal.fire({
            icon: 'info',
            title: 'Offline Mode',
            text: 'Data survey disimpan offline dan akan dikirim saat online kembali.',
            confirmButtonText: 'OK'
        });
        return;
    }
    
    // Create FormData with selected photos
    const formData = new FormData(this);
    
    // Remove default photos input and add selected photos
    formData.delete('photos[]');
    selectedPhotos.forEach((photo, index) => {
        formData.append('photos[]', photo);
    });
    
    // Show loading
    Swal.fire({
        title: 'Mengirim Survey',
        text: 'Mohon tunggu...',
        allowOutsideClick: false,
        showConfirmButton: false,
        willOpen: () => {
            Swal.showLoading();
        }
    });
    
    // Submit form
    fetch(this.action, {
        method: 'POST',
        body: formData,
        headers: {
            'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content
        }
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            Swal.fire({
                icon: 'success',
                title: 'Berhasil!',
                text: 'Survey berhasil dikirim',
                confirmButtonText: 'OK'
            }).then(() => {
                window.location.href = data.redirect || '{{ route("surveys.index") }}';
            });
        } else {
            throw new Error(data.message || 'Terjadi kesalahan');
        }
    })
    .catch(error => {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message || 'Terjadi kesalahan saat mengirim survey'
        });
    });
});

// Save offline data
function saveOfflineData() {
    const formData = {
        survey_id: {{ $survey->id ?? 'null' }},
        latitude: document.getElementById('latitude').value,
        longitude: document.getElementById('longitude').value,
        address: document.querySelector('[name="address"]').value,
        electricity: document.querySelector('[name="electricity"]:checked')?.value,
        electricity_notes: document.querySelector('[name="electricity_notes"]').value,
        water: document.querySelector('[name="water"]:checked')?.value,
        water_notes: document.querySelector('[name="water_notes"]').value,
        road_access: document.querySelector('[name="road_access"]').value,
        permit_status: document.querySelector('[name="permit_status"]').value,
        existing_condition: document.querySelector('[name="existing_condition"]').value,
        area_size: document.querySelector('[name="area_size"]').value,
        notes: document.querySelector('[name="notes"]').value,
        photos: [] // Handle photos separately
    };
    
    // Save to localStorage
    const offlineData = JSON.parse(localStorage.getItem('offlineSurveys') || '[]');
    offlineData.push({
        ...formData,
        timestamp: new Date().toISOString()
    });
    localStorage.setItem('offlineSurveys', JSON.stringify(offlineData));
}

// Sync offline data when online
function syncOfflineData() {
    const offlineData = JSON.parse(localStorage.getItem('offlineSurveys') || '[]');
    
    if (offlineData.length > 0) {
        // TODO: Implement sync logic
        console.log('Syncing offline data:', offlineData);
    }
}

// Initialize
getLocation();

// Check online status
if (!navigator.onLine) {
    document.getElementById('offlineIndicator').style.display = 'block';
}
</script>
@endpush

resources\views\surveys\create.blade.php:
@extends('layouts.app')

@section('title', 'Jadwalkan Survey')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="mb-4">
        <h4 class="mb-0">Jadwalkan Survey</h4>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item"><a href="{{ route('dashboard') }}">Dashboard</a></li>
                <li class="breadcrumb-item"><a href="{{ route('surveys.index') }}">Survey</a></li>
                <li class="breadcrumb-item active">Jadwalkan</li>
            </ol>
        </nav>
    </div>

    <form action="{{ route('surveys.store') }}" method="POST">
        @csrf
        
        <div class="row">
            <div class="col-md-8">
                <!-- Survey Information -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h6 class="mb-0">Informasi Survey</h6>
                    </div>
                    <div class="card-body">
                        <div class="row g-3">
                            <div class="col-md-12">
                                <label class="form-label required">Project</label>
                                <select name="project_id" 
                                        class="form-select @error('project_id') is-invalid @enderror" 
                                        id="projectSelect"
                                        required>
                                    <option value="">-- Pilih Project --</option>
                                    @foreach($projects as $project)
                                    <option value="{{ $project->id }}" 
                                            {{ old('project_id', $selectedProject?->id) == $project->id ? 'selected' : '' }}
                                            data-client="{{ $project->client->name }}"
                                            data-location="{{ $project->location }}"
                                            data-type="{{ ucfirst($project->type) }}">
                                        {{ $project->code }} - {{ $project->name }}
                                    </option>
                                    @endforeach
                                </select>
                                @error('project_id')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label required">Surveyor</label>
                                <select name="surveyor_id" 
                                        class="form-select @error('surveyor_id') is-invalid @enderror" 
                                        required>
                                    <option value="">-- Pilih Surveyor --</option>
                                    @foreach($surveyors as $surveyor)
                                    <option value="{{ $surveyor->id }}" {{ old('surveyor_id') == $surveyor->id ? 'selected' : '' }}>
                                        {{ $surveyor->name }}
                                    </option>
                                    @endforeach
                                </select>
                                @error('surveyor_id')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label required">Tanggal & Waktu Survey</label>
                                <input type="datetime-local" 
                                       name="scheduled_date" 
                                       class="form-control @error('scheduled_date') is-invalid @enderror" 
                                       value="{{ old('scheduled_date') }}"
                                       min="{{ now()->format('Y-m-d\TH:i') }}"
                                       required>
                                @error('scheduled_date')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-12">
                                <label class="form-label">Catatan untuk Surveyor</label>
                                <textarea name="notes" 
                                          class="form-control @error('notes') is-invalid @enderror" 
                                          rows="4"
                                          placeholder="Informasi tambahan untuk surveyor...">{{ old('notes') }}</textarea>
                                @error('notes')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Project Details Card -->
                <div class="card" id="projectDetails" style="display: none;">
                    <div class="card-header">
                        <h6 class="mb-0">Detail Project</h6>
                    </div>
                    <div class="card-body">
                        <dl class="row mb-0">
                            <dt class="col-sm-3">Klien:</dt>
                            <dd class="col-sm-9" id="clientName">-</dd>
                            
                            <dt class="col-sm-3">Jenis Project:</dt>
                            <dd class="col-sm-9" id="projectType">-</dd>
                            
                            <dt class="col-sm-3">Lokasi:</dt>
                            <dd class="col-sm-9" id="projectLocation">-</dd>
                        </dl>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <!-- Survey Checklist Preview -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h6 class="mb-0">
                            <i class="bi bi-clipboard-check me-2"></i>
                            Checklist Survey
                        </h6>
                    </div>
                    <div class="card-body">
                        <p class="text-muted small mb-3">Surveyor akan mengisi checklist berikut:</p>
                        <ul class="list-unstyled">
                            <li class="mb-2">
                                <i class="bi bi-check-square text-primary me-2"></i>
                                Ketersediaan Listrik
                            </li>
                            <li class="mb-2">
                                <i class="bi bi-check-square text-primary me-2"></i>
                                Ketersediaan Air
                            </li>
                            <li class="mb-2">
                                <i class="bi bi-check-square text-primary me-2"></i>
                                Akses Jalan
                            </li>
                            <li class="mb-2">
                                <i class="bi bi-check-square text-primary me-2"></i>
                                Status Izin
                            </li>
                            <li class="mb-2">
                                <i class="bi bi-check-square text-primary me-2"></i>
                                Kondisi Bangunan Existing
                            </li>
                            <li class="mb-2">
                                <i class="bi bi-check-square text-primary me-2"></i>
                                Luas Area (m²)
                            </li>
                            <li class="mb-2">
                                <i class="bi bi-camera text-primary me-2"></i>
                                Foto Lokasi
                            </li>
                            <li class="mb-2">
                                <i class="bi bi-geo-alt text-primary me-2"></i>
                                GPS Koordinat
                            </li>
                        </ul>
                    </div>
                </div>

                <!-- Actions -->
                <div class="card">
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-calendar-check me-2"></i>Jadwalkan Survey
                            </button>
                            <a href="{{ route('surveys.index') }}" class="btn btn-outline-secondary">
                                <i class="bi bi-x-circle me-2"></i>Batal
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
@endsection

@push('styles')
<style>
.form-label.required::after {
    content: " *";
    color: #dc3545;
}
</style>
@endpush

@push('scripts')
<script>
$(document).ready(function() {
    // Initialize Select2
    $('#projectSelect').select2({
        theme: 'bootstrap-5',
        placeholder: '-- Pilih Project --'
    });

    // Show project details when selected
    $('#projectSelect').on('change', function() {
        const selected = $(this).find(':selected');
        
        if ($(this).val()) {
            $('#clientName').text(selected.data('client'));
            $('#projectType').text(selected.data('type'));
            $('#projectLocation').text(selected.data('location'));
            $('#projectDetails').slideDown();
        } else {
            $('#projectDetails').slideUp();
        }
    });

    // Trigger change if pre-selected
    if ($('#projectSelect').val()) {
        $('#projectSelect').trigger('change');
    }
});
</script>
@endpush

resources\views\surveys\edit.blade.php:
@extends('layouts.app')

@section('title', 'Edit Survey')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="mb-4">
        <h4 class="mb-0">Edit Survey</h4>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item"><a href="{{ route('dashboard') }}">Dashboard</a></li>
                <li class="breadcrumb-item"><a href="{{ route('surveys.index') }}">Survey</a></li>
                <li class="breadcrumb-item active">Edit</li>
            </ol>
        </nav>
    </div>

    <form action="{{ route('surveys.update', $survey) }}" method="POST">
        @csrf
        @method('PUT')

        <div class="row">
            <div class="col-md-8">
                <!-- Survey Information -->
                <div class="card">
                    <div class="card-header">
                        <h6 class="mb-0">Informasi Survey</h6>
                    </div>
                    <div class="card-body">
                        <div class="alert alert-warning">
                            <i class="bi bi-info-circle me-2"></i>
                            Hanya survey dengan status <strong>Pending</strong> yang dapat diedit.
                        </div>
                        <div class="row g-3">
                            <div class="col-md-12">
                                <label class="form-label required">Project</label>
                                <select name="project_id" class="form-select @error('project_id') is-invalid @enderror" required>
                                    @foreach($projects as $project)
                                    <option value="{{ $project->id }}"
                                        {{ old('project_id', $survey->project_id) == $project->id ? 'selected' : '' }}>
                                        {{ $project->code }} - {{ $project->name }}
                                    </option>
                                    @endforeach
                                </select>
                                @error('project_id')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label required">Surveyor</label>
                                <select name="surveyor_id" class="form-select @error('surveyor_id') is-invalid @enderror" required>
                                    @foreach($surveyors as $surveyor)
                                    <option value="{{ $surveyor->id }}"
                                        {{ old('surveyor_id', $survey->surveyor_id) == $surveyor->id ? 'selected' : '' }}>
                                        {{ $surveyor->name }}
                                    </option>
                                    @endforeach
                                </select>
                                @error('surveyor_id')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-6">
                                <label class="form-label required">Tanggal & Waktu Survey</label>
                                <input type="datetime-local"
                                       name="scheduled_date"
                                       class="form-control @error('scheduled_date') is-invalid @enderror"
                                       value="{{ old('scheduled_date', $survey->scheduled_date->format('Y-m-d\TH:i')) }}"
                                       required>
                                @error('scheduled_date')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-12">
                                <label class="form-label">Catatan untuk Surveyor</label>
                                <textarea name="notes" class="form-control @error('notes') is-invalid @enderror" rows="4">{{ old('notes', $survey->notes) }}</textarea>
                                @error('notes')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <!-- Survey Status -->
                <div class="card mb-4 border-info">
                    <div class="card-body">
                        <h6 class="text-info mb-3">Status Survey</h6>
                        <dl class="row mb-0">
                            <dt class="col-sm-5">Status:</dt>
                            <dd class="col-sm-7">
                                <span class="badge bg-{{ $survey->status_badge ?? 'secondary' }}">
                                    {{ ucfirst($survey->status) }}
                                </span>
                            </dd>
                            <dt class="col-sm-5">Dibuat:</dt>
                            <dd class="col-sm-7">{{ $survey->created_at->format('d M Y') }}</dd>
                        </dl>
                    </div>
                </div>

                <!-- Actions -->
                <div class="card">
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-save me-2"></i>Update Survey
                            </button>
                            <a href="{{ route('surveys.show', $survey) }}" class="btn btn-outline-secondary">
                                <i class="bi bi-x-circle me-2"></i>Batal
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
@endsection

@push('styles')
<style>
.form-label.required::after {
    content: " *";
    color: #dc3545;
}
</style>
@endpush

resources\views\surveys\index.blade.php:
@extends('layouts.app')

@section('title', 'Data Survey')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">Data Survey</h4>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item"><a href="{{ route('dashboard') }}">Dashboard</a></li>
                    <li class="breadcrumb-item active">Survey</li>
                </ol>
            </nav>
        </div>
        <div>
            @if(Auth::user()->hasRole('admin') || Auth::user()->hasRole('manager'))
            <button type="button" class="btn btn-primary me-2" data-bs-toggle="modal" data-bs-target="#assignSurveyModal">
                <i class="bi bi-person-check me-2"></i>Assign Surveyor
            </button>
            @endif

            @if(Auth::user()->hasRole('surveyor'))
            <a href="{{ route('surveys.mobile.form') }}" class="btn btn-primary">
                <i class="bi bi-camera me-2"></i>Mulai Survey
            </a>
            @else
            <a href="{{ route('surveys.create') }}" class="btn btn-primary">
                <i class="bi bi-plus-circle me-2"></i>Jadwalkan Survey
            </a>
            @endif
        </div>
    </div>

    <!-- Stats Cards for Surveyor -->
    @if(Auth::user()->hasRole('surveyor'))
    <div class="row g-3 mb-4">
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <h4 class="text-warning mb-0">{{ $surveys->where('status', 'pending')->count() }}</h4>
                    <small class="text-muted">Pending</small>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <h4 class="text-info mb-0">{{ $surveys->where('status', 'in_progress')->count() }}</h4>
                    <small class="text-muted">In Progress</small>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <h4 class="text-success mb-0">{{ $surveys->where('status', 'completed')->count() }}</h4>
                    <small class="text-muted">Completed</small>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-6">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <h4 class="text-primary mb-0">{{ $surveys->total() }}</h4>
                    <small class="text-muted">Total</small>
                </div>
            </div>
        </div>
    </div>
    @endif

    <!-- Filters -->
    <div class="card mb-3">
        <div class="card-body">
            <form method="GET" action="{{ route('surveys.index') }}" class="row g-3">
                <div class="col-md-3">
                    <input type="text"
                           name="search"
                           class="form-control"
                           placeholder="Cari project atau klien..."
                           value="{{ request('search') }}">
                </div>
                <div class="col-md-2">
                    <select name="status" class="form-select">
                        <option value="">Semua Status</option>
                        <option value="pending" {{ request('status') == 'pending' ? 'selected' : '' }}>Pending</option>
                        <option value="in_progress" {{ request('status') == 'in_progress' ? 'selected' : '' }}>In Progress</option>
                        <option value="completed" {{ request('status') == 'completed' ? 'selected' : '' }}>Completed</option>
                        <option value="cancelled" {{ request('status') == 'cancelled' ? 'selected' : '' }}>Cancelled</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <input type="date"
                           name="date"
                           class="form-control"
                           value="{{ request('date') }}">
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-outline-primary w-100">
                        <i class="bi bi-search me-2"></i>Filter
                    </button>
                </div>
                @if(request('search') || request('status') || request('date'))
                <div class="col-md-2">
                    <a href="{{ route('surveys.index') }}" class="btn btn-outline-secondary w-100">
                        <i class="bi bi-x-circle me-2"></i>Reset
                    </a>
                </div>
                @endif
            </form>
        </div>
    </div>

    <!-- Surveys Table -->
    <div class="card">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th>Project</th>
                            <th>Klien</th>
                            <th>Jadwal</th>
                            <th>Surveyor</th>
                            <th>Status</th>
                            <th>Foto</th>
                            <th>Lokasi</th>
                            <th width="10%">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @forelse($surveys as $survey)
                        <tr>
                            <td>
                                <div class="fw-semibold">{{ $survey->project->name }}</div>
                                <small class="text-muted">{{ $survey->project->code }}</small>
                            </td>
                            <td>{{ $survey->project->client->name }}</td>
                            <td>
                                <div>{{ $survey->scheduled_date->format('d M Y') }}</div>
                                <small class="text-muted">{{ $survey->scheduled_date->format('H:i') }}</small>
                            </td>
                            <td>{{ $survey->surveyor->name }}</td>
                            <td>
                                <span class="badge bg-{{ $survey->status_badge }}">
                                    {{ ucfirst($survey->status) }}
                                </span>
                            </td>
                            <td>
                                @if($survey->photos->count() > 0)
                                <span class="badge bg-secondary">
                                    <i class="bi bi-camera"></i> {{ $survey->photos->count() }}
                                </span>
                                @else
                                <span class="text-muted">-</span>
                                @endif
                            </td>
                            <td>
                                @if($survey->latitude && $survey->longitude)
                                <a href="https://maps.google.com/?q={{ $survey->latitude }},{{ $survey->longitude }}"
                                   target="_blank"
                                   class="text-primary">
                                    <i class="bi bi-geo-alt"></i> View
                                </a>
                                @else
                                <span class="text-muted">-</span>
                                @endif
                            </td>
                            <td>
                                <div class="btn-group" role="group">
                                    <a href="{{ route('surveys.show', $survey) }}"
                                       class="btn btn-sm btn-outline-primary"
                                       data-bs-toggle="tooltip"
                                       title="View">
                                        <i class="bi bi-eye"></i>
                                    </a>

                                    @if($survey->status == 'pending' && Auth::user()->hasRole('surveyor') && $survey->surveyor_id == Auth::id())
                                    <a href="{{ route('surveys.mobile.form', ['survey_id' => $survey->id]) }}"
                                       class="btn btn-sm btn-outline-success"
                                       data-bs-toggle="tooltip"
                                       title="Start Survey">
                                        <i class="bi bi-play-circle"></i>
                                    </a>
                                    @endif

                                    @if($survey->status == 'pending' && (Auth::user()->hasRole('admin') || Auth::user()->hasRole('marketing')))
                                    <a href="{{ route('surveys.edit', $survey) }}"
                                       class="btn btn-sm btn-outline-warning"
                                       data-bs-toggle="tooltip"
                                       title="Edit">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                    @endif
                                </div>
                            </td>
                        </tr>
                        @empty
                        <tr>
                            <td colspan="8" class="text-center py-4 text-muted">
                                <i class="bi bi-inbox fs-1 d-block mb-2"></i>
                                Belum ada data survey
                            </td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
        </div>

        @if($surveys->hasPages())
        <div class="card-footer">
            {{ $surveys->links() }}
        </div>
        @endif
    </div>
</div>

<!-- Modal Assign Survey -->
<div class="modal fade" id="assignSurveyModal" tabindex="-1" aria-labelledby="assignSurveyModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="assignSurveyModalLabel">Assign Survey ke Surveyor</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form action="{{ route('surveys.assign', ['survey' => '_surveyId_', 'user' => '_userId_']) }}" method="POST" id="assignSurveyForm">
                @csrf
                @method('PATCH')
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="surveySelect" class="form-label">Pilih Survey</label>
                        <select class="form-select" id="surveySelect" required>
                            <option value="">-- Pilih Survey --</option>
                            @foreach($surveys->where('status', 'pending') as $pendingSurvey)
                                <option value="{{ $pendingSurvey->id }}">{{ $pendingSurvey->project->name }} ({{ $pendingSurvey->scheduled_date->format('d M Y') }})</option>
                            @endforeach
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="surveyorSelect" class="form-label">Pilih Surveyor</label>
                        <select class="form-select" id="surveyorSelect" required>
                            <option value="">-- Pilih Surveyor --</option>
                            @foreach($surveyors ?? [] as $surveyor)
                                <option value="{{ $surveyor->id }}">{{ $surveyor->name }}</option>
                            @endforeach
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="surveyNote" class="form-label">Catatan (Opsional)</label>
                        <textarea class="form-control" id="surveyNote" name="note" rows="3" placeholder="Tambahkan catatan untuk surveyor"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                    <button type="submit" class="btn btn-primary">Assign</button>
                </div>
            </form>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
// Initialize tooltips
var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
    return new bootstrap.Tooltip(tooltipTriggerEl)
});

// Handle survey assignment form
document.addEventListener('DOMContentLoaded', function() {
    const surveySelect = document.getElementById('surveySelect');
    const surveyorSelect = document.getElementById('surveyorSelect');
    const assignForm = document.getElementById('assignSurveyForm');

    // Update form action when selections change
    function updateFormAction() {
        const selectedSurveyId = surveySelect ? surveySelect.value : '';
        const selectedSurveyorId = surveyorSelect ? surveyorSelect.value : '';

        if (selectedSurveyId && selectedSurveyorId) {
            const newAction = assignForm.action
                .replace('_surveyId_', selectedSurveyId)
                .replace('_userId_', selectedSurveyorId);
            assignForm.action = newAction;
        }
    }

    if (surveySelect) surveySelect.addEventListener('change', updateFormAction);
    if (surveyorSelect) surveyorSelect.addEventListener('change', updateFormAction);
});
</script>
@endpush

resources\views\surveys\show.blade.php:
@extends('layouts.app')

@section('title', 'Edit Survey')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="mb-4">
        <h4 class="mb-0">Edit Survey</h4>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item"><a href="{{ route('dashboard') }}">Dashboard</a></li>
                <li class="breadcrumb-item"><a href="{{ route('surveys.index') }}">Survey</a></li>
                <li class="breadcrumb-item active">Edit</li>
            </ol>
        </nav>
    </div>

    <form action="{{ route('surveys.update', $survey) }}" method="POST">
        @csrf
        @method('PUT')
        
        <div class="row">
            <div class="col-md-8">
                <!-- Survey Information -->
                <div class="card">
                    <div class="card-header">
                        <h6 class="mb-0">Informasi Survey</h6>
                    </div>
                    <div class="card-body">
                        <div class="alert alert-warning">
                            <i class="bi bi-info-circle me-2"></i>
                            Hanya survey dengan status <strong>Pending</strong> yang dapat diedit.
                        </div>
                        
                        <div class="col-md-12">
                            <label class="form-label">Project</label>
                            <div class="form-control-plaintext">
                                {{ $survey->project->code }} - {{ $survey->project->name }}
                            </div>
                        </div>


                        <div class="col-md-6">
                            <label class="form-label">Surveyor</label>
                            <div class="form-control-plaintext">
                                {{ $survey->surveyor->name ?? '-' }}
                            </div>
                        </div>


                            <div class="col-md-6">
                                <label class="form-label required">Tanggal & Waktu Survey</label>
                                <input type="datetime-local" 
                                       name="scheduled_date" 
                                       class="form-control @error('scheduled_date') is-invalid @enderror" 
                                       value="{{ old('scheduled_date', $survey->scheduled_date->format('Y-m-d\TH:i')) }}"
                                       required>
                                @error('scheduled_date')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>

                            <div class="col-md-12">
                                <label class="form-label">Catatan untuk Surveyor</label>
                                <textarea name="notes" 
                                          class="form-control @error('notes') is-invalid @enderror" 
                                          rows="4">{{ old('notes', $survey->notes) }}</textarea>
                                @error('notes')
                                <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <!-- Survey Status -->
                <div class="card mb-4 border-info">
                    <div class="card-body">
                        <h6 class="text-info mb-3">Status Survey</h6>
                        <dl class="row mb-0">
                            <dt class="col-sm-5">Status:</dt>
                            <dd class="col-sm-7">
                                <span class="badge bg-{{ $survey->status_badge }}">
                                    {{ ucfirst($survey->status) }}
                                </span>
                            </dd>
                            
                            <dt class="col-sm-5">Dibuat:</dt>
                            <dd class="col-sm-7">{{ $survey->created_at->format('d M Y') }}</dd>
                        </dl>
                    </div>
                </div>

                <!-- Actions -->
                <div class="card">
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-save me-2"></i>Update Survey
                            </button>
                            <a href="{{ route('surveys.show', $survey) }}" class="btn btn-outline-secondary">
                                <i class="bi bi-x-circle me-2"></i>Batal
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
@endsection

@push('styles')
<style>
.form-label.required::after {
    content: " *";
    color: #dc3545;
}
</style>
@endpush

resources\views\users\create.blade.php:
@extends('layouts.app')

@section('title', 'Add New User')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="mb-4">
        <h4 class="mb-0">Add New User</h4>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item"><a href="{{ route('dashboard') }}">Dashboard</a></li>
                <li class="breadcrumb-item"><a href="{{ route('users.index') }}">Users</a></li>
                <li class="breadcrumb-item active">Add New</li>
            </ol>
        </nav>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">User Information</h5>
                </div>
                <div class="card-body">
                    <form action="{{ route('users.store') }}" method="POST" enctype="multipart/form-data">
                        @csrf

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="name" class="form-label required">Name</label>
                                <input type="text" class="form-control @error('name') is-invalid @enderror"
                                       id="name" name="name" value="{{ old('name') }}" required>
                                @error('name')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                            <div class="col-md-6">
                                <label for="email" class="form-label required">Email</label>
                                <input type="email" class="form-control @error('email') is-invalid @enderror"
                                       id="email" name="email" value="{{ old('email') }}" required>
                                @error('email')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="password" class="form-label required">Password</label>
                                <input type="password" class="form-control @error('password') is-invalid @enderror"
                                       id="password" name="password" required>
                                @error('password')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                            <div class="col-md-6">
                                <label for="password_confirmation" class="form-label required">Confirm Password</label>
                                <input type="password" class="form-control"
                                       id="password_confirmation" name="password_confirmation" required>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="role" class="form-label required">Role</label>
                                <select class="form-select @error('role') is-invalid @enderror"
                                        id="role" name="role" required>
                                    <option value="">Select Role</option>
                                    @foreach($roles as $role)
                                        <option value="{{ $role->name }}" {{ old('role') == $role->name ? 'selected' : '' }}>
                                            {{ ucfirst($role->name) }}
                                        </option>
                                    @endforeach
                                </select>
                                @error('role')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                            <div class="col-md-6">
                                <label for="phone" class="form-label">Phone</label>
                                <input type="text" class="form-control @error('phone') is-invalid @enderror"
                                       id="phone" name="phone" value="{{ old('phone') }}">
                                @error('phone')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="address" class="form-label">Address</label>
                            <textarea class="form-control @error('address') is-invalid @enderror"
                                      id="address" name="address" rows="3">{{ old('address') }}</textarea>
                            @error('address')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>

                        <div class="mb-3">
                            <label for="avatar" class="form-label">Profile Image</label>
                            <input type="file" class="form-control @error('avatar') is-invalid @enderror"
                                   id="avatar" name="avatar" accept="image/*">
                            <div class="form-text">Max size: 2MB. Allowed formats: JPG, PNG, GIF.</div>
                            @error('avatar')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>

                        <div class="mb-4">
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" id="is_active" name="is_active" value="1"
                                    {{ old('is_active', '1') == '1' ? 'checked' : '' }}>
                                <label class="form-check-label" for="is_active">Active</label>
                                <div class="form-text">If unchecked, user won't be able to login.</div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-end">
                            <a href="{{ route('users.index') }}" class="btn btn-outline-secondary me-2">Cancel</a>
                            <button type="submit" class="btn btn-primary">Create User</button>
                        </div>
                        </form>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Help</h5>
                </div>
                <div class="card-body">
                    <h6>Role Permissions</h6>
                    <p>Each role has different permissions:</p>
                    <ul>
                        <li><strong>Admin</strong>: Full access to all features</li>
                        <li><strong>Manager</strong>: Manage projects, clients, and reports</li>
                        <li><strong>Marketing</strong>: Manage clients and projects</li>
                        <li><strong>Surveyor</strong>: Conduct surveys and upload reports</li>
                        <li><strong>User</strong>: Basic access</li>
                    </ul>

                    <h6>User Status</h6>
                    <p>Inactive users cannot log into the system.</p>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
    // Preview image before upload
    document.getElementById('avatar').onchange = function(evt) {
        const [file] = this.files;
        if (file) {
            const preview = document.createElement('div');
            preview.className = 'mt-2';
            preview.innerHTML = `
                <div class="avatar-preview">
                    <img src="${URL.createObjectURL(file)}" class="img-thumbnail" style="height: 150px;">
                </div>
            `;

            // Remove any existing preview
            const existingPreview = document.querySelector('.avatar-preview');
            if (existingPreview) {
                existingPreview.remove();
            }

            this.parentNode.appendChild(preview);
        }
    }
</script>
@endpush

resources\views\users\edit.blade.php:
@extends('layouts.app')

@section('title', 'Edit User')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="mb-4">
        <h4 class="mb-0">Edit User</h4>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item"><a href="{{ route('dashboard') }}">Dashboard</a></li>
                <li class="breadcrumb-item"><a href="{{ route('users.index') }}">Users</a></li>
                <li class="breadcrumb-item active">Edit</li>
            </ol>
        </nav>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">User Information</h5>
                </div>
                <div class="card-body">
                    <form action="{{ route('users.update', $user) }}" method="POST" enctype="multipart/form-data">
                        @csrf
                        @method('PUT')

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="name" class="form-label required">Name</label>
                                <input type="text" class="form-control @error('name') is-invalid @enderror"
                                       id="name" name="name" value="{{ old('name', $user->name) }}" required>
                                @error('name')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                            <div class="col-md-6">
                                <label for="email" class="form-label required">Email</label>
                                <input type="email" class="form-control @error('email') is-invalid @enderror"
                                       id="email" name="email" value="{{ old('email', $user->email) }}" required>
                                @error('email')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="role" class="form-label required">Role</label>
                                <select class="form-select @error('role') is-invalid @enderror"
                                        id="role" name="role" required>
                                    <option value="">Select Role</option>
                                    @foreach($roles as $role)
                                        <option value="{{ $role->name }}"
                                            {{ old('role', $user->roles->first()->name ?? '') == $role->name ? 'selected' : '' }}>
                                            {{ ucfirst($role->name) }}
                                        </option>
                                    @endforeach
                                </select>
                                @error('role')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                            <div class="col-md-6">
                                <label for="phone" class="form-label">Phone</label>
                                <input type="text" class="form-control @error('phone') is-invalid @enderror"
                                       id="phone" name="phone" value="{{ old('phone', $user->phone) }}">
                                @error('phone')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="address" class="form-label">Address</label>
                            <textarea class="form-control @error('address') is-invalid @enderror"
                                      id="address" name="address" rows="3">{{ old('address', $user->address) }}</textarea>
                            @error('address')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>

                        <div class="mb-3">
                            <label for="avatar" class="form-label">Profile Image</label>

                            @if($user->avatar)
                                <div class="mb-2">
                                    <img src="{{ $user->avatar_url }}" alt="{{ $user->name }}"
                                         class="img-thumbnail" style="height: 150px;">
                                </div>
                            @endif

                            <input type="file" class="form-control @error('avatar') is-invalid @enderror"
                                   id="avatar" name="avatar" accept="image/*">
                            <div class="form-text">Max size: 2MB. Allowed formats: JPG, PNG, GIF.</div>
                            @error('avatar')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>

                        <div class="mb-4">
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" id="is_active" name="is_active" value="1"
                                       {{ old('is_active', $user->is_active) ? 'checked' : '' }}>
                                <label class="form-check-label" for="is_active">Active</label>
                                <div class="form-text">If unchecked, user won't be able to login.</div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-end">
                            <a href="{{ route('users.index') }}" class="btn btn-outline-secondary me-2">Cancel</a>
                            <button type="submit" class="btn btn-warning">Update User</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">User Information</h5>
                </div>
                <div class="card-body">
                    <p><strong>Created:</strong> {{ $user->created_at->format('d M Y, h:i A') }}</p>
                    <p><strong>Last Updated:</strong> {{ $user->updated_at->format('d M Y, h:i A') }}</p>
                    <p><strong>Last Login:</strong> {{ $user->last_login_at ? $user->last_login_at->format('d M Y, h:i A') : 'Never' }}</p>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Help</h5>
                </div>
                <div class="card-body">
                    <h6>Role Permissions</h6>
                    <p>Each role has different permissions:</p>
                    <ul>
                        <li><strong>Admin</strong>: Full access to all features</li>
                        <li><strong>Manager</strong>: Manage projects, clients, and reports</li>
                        <li><strong>Marketing</strong>: Manage clients and projects</li>
                        <li><strong>Surveyor</strong>: Conduct surveys and upload reports</li>
                        <li><strong>User</strong>: Basic access</li>
                    </ul>

                    <h6>User Status</h6>
                    <p>Inactive users cannot log into the system.</p>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
    // Preview image before upload
    document.getElementById('avatar').onchange = function(evt) {
        const [file] = this.files;
        if (file) {
            const preview = document.createElement('img');
            preview.src = URL.createObjectURL(file);
            preview.className = 'img-thumbnail mb-2';
            preview.style.height = '150px';

            // Remove any existing preview
            const existingPreview = this.previousElementSibling;
            if (existingPreview && existingPreview.tagName === 'DIV') {
                existingPreview.innerHTML = '';
                existingPreview.appendChild(preview);
            } else {
                const container = document.createElement('div');
                container.className = 'mb-2';
                container.appendChild(preview);
                this.parentNode.insertBefore(container, this);
            }
        }
    }
</script>
@endpush

resources\views\users\index.blade.php:
@extends('layouts.app')

@section('title', 'Users Management')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-0">Users Management</h4>
            <p class="text-muted mb-0">Manage system users and their roles</p>
        </div>
        <div>
            <a href="{{ route('users.create') }}" class="btn btn-primary">
                <i class="bi bi-person-plus me-2"></i>Add User
            </a>
        </div>
    </div>

    <!-- Filters -->
    <div class="card mb-3">
        <div class="card-body">
            <form action="{{ route('users.index') }}" method="GET" class="row g-3">
                <div class="col-md-4">
                    <input type="text" name="search" class="form-control" placeholder="Search by name or email..."
                           value="{{ request('search') }}">
                </div>

                <div class="col-md-3">
                    <select name="role" class="form-select">
                        <option value="">All Roles</option>
                        @foreach($roles as $role)
                            <option value="{{ $role->name }}" {{ request('role') == $role->name ? 'selected' : '' }}>
                                {{ ucfirst($role->name) }}
                            </option>
                        @endforeach
                    </select>
                </div>

                <div class="col-md-3">
                    <select name="status" class="form-select">
                        <option value="">All Status</option>
                        <option value="active" {{ request('status') == 'active' ? 'selected' : '' }}>Active</option>
                        <option value="inactive" {{ request('status') == 'inactive' ? 'selected' : '' }}>Inactive</option>
                    </select>
                </div>

                <div class="col-md-2">
                    <button type="submit" class="btn btn-outline-primary w-100">
                        <i class="bi bi-search me-2"></i>Filter
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Users Table -->
    <div class="card">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th>User</th>
                            <th>Email</th>
                            <th>Role</th>
                            <th>Status</th>
                            <th>Last Login</th>
                            <th>Created At</th>
                            <th width="150">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @forelse($users as $user)
                        <tr>
                            <td>
                                <div class="d-flex align-items-center">
                                    <div class="avatar-sm me-3">
                                        <img src="{{ $user->avatar_url }}" alt="{{ $user->name }}" class="rounded-circle">
                                    </div>
                                    <div>
                                        <div class="fw-semibold">{{ $user->name }}</div>
                                        @if($user->phone)
                                            <small class="text-muted">{{ $user->phone }}</small>
                                        @endif
                                    </div>
                                </div>
                            </td>
                            <td>{{ $user->email }}</td>
                            <td>
                                @foreach($user->roles as $role)
                                    <span class="badge bg-primary">{{ ucfirst($role->name) }}</span>
                                @endforeach
                            </td>
                            <td>
                                @if($user->is_active)
                                    <span class="badge bg-success">Active</span>
                                @else
                                    <span class="badge bg-danger">Inactive</span>
                                @endif
                            </td>
                            <td>
                                {{ $user->last_login_at ? $user->last_login_at->format('d M Y H:i') : 'Never' }}
                            </td>
                            <td>{{ $user->created_at->format('d M Y') }}</td>
                            <td>
                                <div class="btn-group" role="group">
                                    <a href="{{ route('users.show', $user) }}" class="btn btn-sm btn-outline-primary" data-bs-toggle="tooltip" title="View">
                                        <i class="bi bi-eye"></i>
                                    </a>
                                    <a href="{{ route('users.edit', $user) }}" class="btn btn-sm btn-outline-warning" data-bs-toggle="tooltip" title="Edit">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                    <form action="{{ route('users.toggle-active', $user) }}" method="POST" class="d-inline">
                                        @csrf
                                        @method('PATCH')
                                        <button type="submit" class="btn btn-sm btn-outline-{{ $user->is_active ? 'danger' : 'success' }}"
                                                data-bs-toggle="tooltip"
                                                title="{{ $user->is_active ? 'Deactivate' : 'Activate' }}">
                                            <i class="bi bi-{{ $user->is_active ? 'slash-circle' : 'check-circle' }}"></i>
                                        </button>
                                    </form>

                                    @if(Auth::id() != $user->id)
                                    <form action="{{ route('users.destroy', $user) }}" method="POST" class="d-inline"
                                          onsubmit="return confirm('Are you sure you want to delete this user?');">
                                        @csrf
                                        @method('DELETE')
                                        <button type="submit" class="btn btn-sm btn-outline-danger" data-bs-toggle="tooltip" title="Delete">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </form>
                                    @endif
                                </div>
                            </td>
                        </tr>
                        @empty
                        <tr>
                            <td colspan="7" class="text-center py-4">
                                <i class="bi bi-people fs-1 text-muted d-block mb-2"></i>
                                <p class="text-muted">No users found.</p>
                            </td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Pagination -->
    <div class="mt-4">
        {{ $users->withQueryString()->links() }}
    </div>
</div>
@endsection

@push('styles')
<style>
.avatar-sm {
    width: 40px;
    height: 40px;
    overflow: hidden;
}

.avatar-sm img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}
</style>
@endpush

resources\views\users\profile.blade.php:
@extends('layouts.app')

@section('title', 'My Profile')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="mb-4">
        <h4 class="mb-0">My Profile</h4>
        <p class="text-muted mb-0">View and update your profile information</p>
    </div>

    <div class="row">
        <div class="col-lg-4">
            <div class="card mb-4">
                <div class="card-body text-center py-5">
                    <div class="avatar-lg mx-auto mb-4">
                        <img src="{{ $user->avatar_url }}" alt="{{ $user->name }}" class="rounded-circle">
                    </div>
                    <h5 class="mb-1">{{ $user->name }}</h5>
                    <p class="text-muted mb-3">
                        @foreach($user->roles as $role)
                            <span class="badge bg-primary">{{ ucfirst($role->name) }}</span>
                        @endforeach
                    </p>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Account Information</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label text-muted">Email</label>
                        <div>{{ $user->email }}</div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label text-muted">Phone</label>
                        <div>{{ $user->phone ?? 'Not provided' }}</div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label text-muted">Address</label>
                        <div>{{ $user->address ?? 'Not provided' }}</div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label text-muted">Member Since</label>
                        <div>{{ $user->created_at->format('d M Y') }}</div>
                    </div>

                    <div>
                        <label class="form-label text-muted">Last Login</label>
                        <div>{{ $user->last_login_at ? $user->last_login_at->format('d M Y, h:i A') : 'Never' }}</div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-8">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Edit Profile Information</h5>
                </div>
                <div class="card-body">
                    <form action="{{ route('users.update-profile') }}" method="POST" enctype="multipart/form-data">
                        @csrf

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="name" class="form-label required">Name</label>
                                <input type="text" class="form-control @error('name') is-invalid @enderror"
                                       id="name" name="name" value="{{ old('name', $user->name) }}" required>
                                @error('name')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                            <div class="col-md-6">
                                <label for="email" class="form-label required">Email</label>
                                <input type="email" class="form-control @error('email') is-invalid @enderror"
                                       id="email" name="email" value="{{ old('email', $user->email) }}" required>
                                @error('email')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="phone" class="form-label">Phone</label>
                                <input type="text" class="form-control @error('phone') is-invalid @enderror"
                                       id="phone" name="phone" value="{{ old('phone', $user->phone) }}">
                                @error('phone')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="address" class="form-label">Address</label>
                            <textarea class="form-control @error('address') is-invalid @enderror"
                                      id="address" name="address" rows="3">{{ old('address', $user->address) }}</textarea>
                            @error('address')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>

                        <div class="mb-3">
                            <label for="avatar" class="form-label">Profile Image</label>

                            @if($user->avatar)
                                <div class="mb-2">
                                    <img src="{{ $user->avatar_url }}" alt="{{ $user->name }}"
                                         class="img-thumbnail" style="height: 150px;">
                                </div>
                            @endif

                            <input type="file" class="form-control @error('avatar') is-invalid @enderror"
                                   id="avatar" name="avatar" accept="image/*">
                            <div class="form-text">Max size: 2MB. Allowed formats: JPG, PNG, GIF.</div>
                            @error('avatar')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>

                        <div class="d-flex justify-content-end">
                            <button type="submit" class="btn btn-primary">Update Profile</button>
                        </div>
                    </form>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Change Password</h5>
                </div>
                <div class="card-body">
                    <form action="{{ route('users.update-password') }}" method="POST">
                        @csrf

                        <div class="mb-3">
                            <label for="current_password" class="form-label required">Current Password</label>
                            <input type="password" class="form-control @error('current_password') is-invalid @enderror"
                                   id="current_password" name="current_password" required>
                            @error('current_password')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="password" class="form-label required">New Password</label>
                                <input type="password" class="form-control @error('password') is-invalid @enderror"
                                       id="password" name="password" required>
                                @error('password')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                            <div class="col-md-6">
                                <label for="password_confirmation" class="form-label required">Confirm New Password</label>
                                <input type="password" class="form-control"
                                       id="password_confirmation" name="password_confirmation" required>
                            </div>
                        </div>

                        <div class="d-flex justify-content-end">
                            <button type="submit" class="btn btn-warning">Change Password</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

@push('styles')
<style>
.avatar-lg {
    width: 120px;
    height: 120px;
    overflow: hidden;
}

.avatar-lg img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}
</style>
@endpush

@push('scripts')
<script>
    // Preview image before upload
    document.getElementById('avatar').onchange = function(evt) {
        const [file] = this.files;
        if (file) {
            const preview = document.createElement('img');
            preview.src = URL.createObjectURL(file);
            preview.className = 'img-thumbnail mb-2';
            preview.style.height = '150px';

            // Remove any existing preview
            const existingPreview = this.previousElementSibling;
            if (existingPreview && existingPreview.tagName === 'DIV') {
                existingPreview.innerHTML = '';
                existingPreview.appendChild(preview);
            } else {
                const container = document.createElement('div');
                container.className = 'mb-2';
                container.appendChild(preview);
                this.parentNode.insertBefore(container, this);
            }
        }
    }
</script>
@endpush

resources\views\users\show.blade.php:
@extends('layouts.app')

@section('title', 'User Details')

@section('content')
<div class="container-fluid px-0">
    <!-- Page Header -->
    <div class="mb-4">
        <h4 class="mb-0">User Details</h4>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item"><a href="{{ route('dashboard') }}">Dashboard</a></li>
                <li class="breadcrumb-item"><a href="{{ route('users.index') }}">Users</a></li>
                <li class="breadcrumb-item active">Details</li>
            </ol>
        </nav>
    </div>

    <div class="row">
        <div class="col-lg-4">
            <div class="card mb-4">
                <div class="card-body text-center py-5">
                    <div class="avatar-lg mx-auto mb-4">
                        <img src="{{ $user->avatar_url }}" alt="{{ $user->name }}" class="rounded-circle">
                    </div>
                    <h5 class="mb-1">{{ $user->name }}</h5>
                    <p class="text-muted mb-3">
                        @foreach($user->roles as $role)
                            <span class="badge bg-primary">{{ ucfirst($role->name) }}</span>
                        @endforeach
                    </p>

                    <div class="d-flex justify-content-center gap-2">
                        <a href="{{ route('users.edit', $user) }}" class="btn btn-outline-warning">
                            <i class="bi bi-pencil me-1"></i> Edit
                        </a>

                        @if(Auth::id() != $user->id)
                        <form action="{{ route('users.toggle-active', $user) }}" method="POST">
                            @csrf
                            @method('PATCH')
                            <button type="submit" class="btn btn-outline-{{ $user->is_active ? 'danger' : 'success' }}">
                                <i class="bi bi-{{ $user->is_active ? 'slash-circle' : 'check-circle' }} me-1"></i>
                                {{ $user->is_active ? 'Deactivate' : 'Activate' }}
                            </button>
                        </form>

                        <form action="{{ route('users.destroy', $user) }}" method="POST"
                              onsubmit="return confirm('Are you sure you want to delete this user?');">
                            @csrf
                            @method('DELETE')
                            <button type="submit" class="btn btn-outline-danger">
                                <i class="bi bi-trash me-1"></i> Delete
                            </button>
                        </form>
                        @endif
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Contact Information</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label text-muted">Email</label>
                        <div>{{ $user->email }}</div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label text-muted">Phone</label>
                        <div>{{ $user->phone ?? 'Not provided' }}</div>
                    </div>

                    <div>
                        <label class="form-label text-muted">Address</label>
                        <div>{{ $user->address ?? 'Not provided' }}</div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-8">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">User Information</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label text-muted">Status</label>
                            <div>
                                @if($user->is_active)
                                    <span class="badge bg-success">Active</span>
                                @else
                                    <span class="badge bg-danger">Inactive</span>
                                @endif
                            </div>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label class="form-label text-muted">Role</label>
                            <div>
                                @foreach($user->roles as $role)
                                    <span class="badge bg-primary">{{ ucfirst($role->name) }}</span>
                                @endforeach
                            </div>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label class="form-label text-muted">Created At</label>
                            <div>{{ $user->created_at->format('d M Y, h:i A') }}</div>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label class="form-label text-muted">Last Updated</label>
                            <div>{{ $user->updated_at->format('d M Y, h:i A') }}</div>
                        </div>

                        <div class="col-md-6">
                            <label class="form-label text-muted">Last Login</label>
                            <div>
                                {{ $user->last_login_at ? $user->last_login_at->format('d M Y, h:i A') : 'Never' }}
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Activity Log could be added here -->
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Recent Activity</h5>
                    <button class="btn btn-sm btn-outline-primary">View All</button>
                </div>
                <div class="card-body p-0">
                    <div class="list-group list-group-flush">
                        <div class="list-group-item">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h6 class="mb-1">Logged in</h6>
                                    <small class="text-muted">From IP 192.168.1.1</small>
                                </div>
                                <small class="text-muted">
                                    {{ $user->last_login_at ? $user->last_login_at->diffForHumans() : 'Never' }}
                                </small>
                            </div>
                        </div>

                        <div class="list-group-item">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h6 class="mb-1">Profile updated</h6>
                                    <small class="text-muted">Changed profile information</small>
                                </div>
                                <small class="text-muted">
                                    {{ $user->updated_at->diffForHumans() }}
                                </small>
                            </div>
                        </div>

                        <div class="list-group-item">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h6 class="mb-1">Account created</h6>
                                    <small class="text-muted">New user registration</small>
                                </div>
                                <small class="text-muted">
                                    {{ $user->created_at->diffForHumans() }}
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

@push('styles')
<style>
.avatar-lg {
    width: 120px;
    height: 120px;
    overflow: hidden;
}

.avatar-lg img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}
</style>
@endpush

resources\views\welcome.blade.php:
<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="csrf-token" content="{{ csrf_token() }}">
    <title>{{ $title ?? 'Dashboard' }} - Hansen CRM</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <!-- Custom CSS -->
    <link rel="stylesheet" href="{{ asset('css/custom.css') }}">

    <style>
        :root {
            --sidebar-width: 250px;
            --navbar-height: 60px;
            --primary-color: #1a73e8;
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: #f5f5f5;
        }

        /* Navbar */
        .navbar {
            height: var(--navbar-height);
            background-color: var(--primary-color) !important;
            box-shadow: 0 2px 4px rgba(0,0,0,0.08);
            z-index: 1030;
        }

        /* Fix dropdown z-index */
        .dropdown-menu {
            z-index: 1040;
        }

        /* Notification Styles */
        .notification-menu {
            width: 350px;
            max-height: 400px;
            overflow-y: auto;
        }

        .notification-dropdown-item {
            padding: 0.75rem 1rem;
            border-bottom: 1px solid #eee;
        }

        .notification-dropdown-item:hover {
            background-color: #f8f9fa;
        }

        .notification-icon-small {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 14px;
        }

        .notification-badge {
            font-size: 0.65em;
            min-width: 18px;
            height: 18px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        /* Toast Container */
        .toast-container {
            z-index: 1060;
        }

        .notification-toast {
            min-width: 300px;
        }

        /* Sidebar */
        .sidebar {
            position: fixed;
            top: var(--navbar-height);
            left: 0;
            bottom: 0;
            width: var(--sidebar-width);
            background-color: #fff;
            border-right: 1px solid #e0e0e0;
            overflow-y: auto;
            z-index: 1020;
            transition: all 0.3s;
        }

        .sidebar .nav-link {
            color: #6c757d;
            padding: 0.75rem 1rem;
            border-radius: 6px;
            margin-bottom: 0.25rem;
            transition: all 0.3s;
        }

        .sidebar .nav-link:hover {
            background-color: rgba(26, 115, 232, 0.08);
            color: var(--primary-color);
        }

        .sidebar .nav-link.active {
            background-color: rgba(26, 115, 232, 0.12);
            color: var(--primary-color);
            font-weight: 600;
        }

        /* Main Content */
        .main-content {
            margin-left: var(--sidebar-width);
            margin-top: var(--navbar-height);
            padding: 2rem;
            min-height: calc(100vh - var(--navbar-height));
        }

        /* Cards */
        .card {
            border: none;
            border-radius: 8px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            background-color: #fff;
        }

        .card-header {
            background-color: transparent;
            border-bottom: 1px solid #e0e0e0;
            padding: 1rem 1.25rem;
            font-weight: 600;
        }

        /* Stat Card */
        .stat-card {
            background: #fff;
            border-radius: 8px;
            padding: 1.5rem;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            height: 100%;
        }

        .stat-value {
            font-size: 2rem;
            font-weight: 700;
            margin: 0.5rem 0;
        }

        /* Icon Box */
        .icon-box {
            width: 48px;
            height: 48px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        /* Chart Container Fix */
        .chart-container {
            position: relative;
            height: 300px !important;
            width: 100%;
        }

        .chart-container-small {
            position: relative;
            height: 200px !important;
            width: 100%;
        }

        /* Project Status Chart Styles */
        .project-status-bar {
            height: 25px;
            margin: 8px 0;
            border-radius: 4px;
            background-color: #f0f0f0;
            overflow: hidden;
        }

        .project-status-bar .progress-bar {
            height: 100%;
        }

        /* Table */
        .table {
            font-size: 14px;
        }

        .table thead th {
            border-bottom: 2px solid #e0e0e0;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 12px;
            color: #6c757d;
        }

        /* Form Label Required */
        .form-label.required:after {
            content: " *";
            color: red;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
            }
            .sidebar.active {
                transform: translateX(0);
            }
            .main-content {
                margin-left: 0;
            }
            .main-content.active {
                margin-left: var(--sidebar-width);
            }
            .notification-menu {
                width: 300px;
            }

            .notification-dropdown .nav-link {
                padding: 0.5rem 0.75rem;
            }
        }

        /* Fix dropdown positioning */
        .navbar .dropdown-menu {
            position: absolute;
            right: 0;
            left: auto;
        }
    </style>

    <!-- Pusher JS and Echo Polyfill -->
    <script src="https://cdn.jsdelivr.net/npm/pusher-js@7.0.3/dist/web/pusher.min.js"></script>
    <script>
        // Definisikan Echo global
        window.Echo = (function() {
            const Echo = function(options) {
                this.options = options;
                this.connector = options.broadcaster === 'pusher' ? new Pusher(options.key, {
                    cluster: options.cluster,
                    forceTLS: options.forceTLS
                }) : null;
            };

            Echo.prototype.channel = function(channel) {
                const self = this;
                return {
                    listen: function(event, callback) {
                        if (self.connector) {
                            const ch = self.connector.subscribe(channel);
                            ch.bind(event, callback);
                        }
                        return this;
                    }
                };
            };

            Echo.prototype.private = function(channel) {
                return this.channel('private-' + channel);
            };

            Echo.prototype.presence = function(channel) {
                return this.channel('presence-' + channel);
            };

            return Echo;
        })();
    </script>

    <!-- Chart.js in the head for earlier loading -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    {{ $styles ?? '' }}
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark fixed-top">
        <div class="container-fluid">
            <!-- Brand -->
            <a class="navbar-brand" href="{{ route('dashboard') }}">
                <i class="bi bi-building me-2"></i>Hansen CRM
            </a>

            <!-- Mobile Toggle -->
            <button class="navbar-toggler border-0" type="button" id="sidebarToggle">
                <span class="navbar-toggler-icon"></span>
            </button>

            <!-- Navbar Content -->
            <div class="collapse navbar-collapse" id="navbarNav">
                <!-- Left Side Menu (Optional) -->
                <ul class="navbar-nav me-auto">
                    <!-- Menu items bisa ditambahkan di sini jika diperlukan -->
                </ul>

                <!-- Right Side Menu -->
                <ul class="navbar-nav ms-auto">
                    <!-- Notification Bell -->
                    <li class="nav-item dropdown me-3">
                        <a class="nav-link position-relative" href="#" id="notificationDropdown"
                           role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="bi bi-bell fs-5"></i>
                            <span class="notification-badge position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger"
                                  id="notificationBadge" style="display: none;">
                                0
                            </span>
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end notification-menu" aria-labelledby="notificationDropdown">
                            <li class="dropdown-header d-flex justify-content-between align-items-center">
                                <h6 class="mb-0">Notifikasi</h6>
                                <a href="{{ route('notifications.index') }}" class="text-decoration-none small">
                                    Lihat Semua
                                </a>
                            </li>
                            <li><hr class="dropdown-divider"></li>
                            <li>
                                <div class="notification-list-dropdown px-3" id="notificationList">
                                    <div class="text-center py-3">
                                        <div class="spinner-border spinner-border-sm text-primary" role="status">
                                            <span class="visually-hidden">Loading...</span>
                                        </div>
                                    </div>
                                </div>
                            </li>
                            <li><hr class="dropdown-divider"></li>
                            <li>
                                <div class="dropdown-footer text-center px-3 py-2">
                                    <a href="{{ route('notifications.index') }}" class="text-decoration-none">
                                        Lihat Semua Notifikasi
                                    </a>
                                </div>
                            </li>
                        </ul>
                    </li>

                    <!-- User Dropdown -->
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle d-flex align-items-center" href="#" id="userDropdown"
                           role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <img src="https://ui-avatars.com/api/?name={{ urlencode(Auth::user()->name) }}&background=fff&color=1a73e8"
                                 alt="{{ Auth::user()->name }}"
                                 class="rounded-circle me-2"
                                 width="32" height="32">
                            <span>{{ Auth::user()->name }}</span>
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end">
                            <li>
                                <h6 class="dropdown-header">{{ Auth::user()->name }}</h6>
                            </li>
                            <li><hr class="dropdown-divider"></li>
                            <li>
                                <a class="dropdown-item" href="{{ route('profile.edit') }}">
                                    <i class="bi bi-person me-2"></i>Profile
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item" href="{{ route('notifications.index') }}">
                                    <i class="bi bi-bell me-2"></i>Notifikasi
                                </a>
                            </li>
                            <li><hr class="dropdown-divider"></li>
                            <li>
                                <form method="POST" action="{{ route('logout') }}">
                                    @csrf
                                    <button type="submit" class="dropdown-item">
                                        <i class="bi bi-box-arrow-right me-2"></i>Logout
                                    </button>
                                </form>
                            </li>
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Sidebar -->
    <nav class="sidebar" id="sidebar">
        <div class="p-3">
            <ul class="nav flex-column">
                <li class="nav-item">
                    <a class="nav-link {{ request()->routeIs('dashboard') ? 'active' : '' }}" href="{{ route('dashboard') }}">
                        <i class="bi bi-speedometer2 me-2"></i>Dashboard
                    </a>
                </li>

                @php
                    $userRole = Auth::user()->getRoleNames()->first() ?? '';
                @endphp

                @if(in_array($userRole, ['admin', 'manager', 'marketing']))
                <li class="nav-item">
                    <a class="nav-link {{ request()->routeIs('clients.*') ? 'active' : '' }}" href="{{ route('clients.index') }}">
                        <i class="bi bi-people me-2"></i>Clients
                    </a>
                </li>

                <li class="nav-item">
                    <a class="nav-link {{ request()->routeIs('projects.*') ? 'active' : '' }}" href="{{ route('projects.index') }}">
                        <i class="bi bi-building me-2"></i>Projects
                    </a>
                </li>
                @endif

                <li class="nav-item">
                    <a class="nav-link {{ request()->routeIs('surveys.*') ? 'active' : '' }}" href="{{ route('surveys.index') }}">
                        <i class="bi bi-clipboard-check me-2"></i>Survey
                    </a>
                </li>

                @if(in_array($userRole, ['admin', 'manager', 'marketing']))
                <li class="nav-item">
                    <a class="nav-link {{ request()->routeIs('reports.*') ? 'active' : '' }}"
                    href="{{ route('reports.index') }}">
                        <i class="bi bi-file-earmark-bar-graph me-2"></i>
                        <span>Reports</span>
                    </a>
                </li>
                @endif

                <li class="nav-item">
                    <a class="nav-link {{ request()->routeIs('profile') || request()->routeIs('profile.edit') ? 'active' : '' }}"
                       href="{{ route('profile.edit') }}">
                        <i class="bi bi-person-circle me-2"></i>My Profile
                    </a>
                </li>

                @if($userRole == 'admin')
                <li class="nav-item mt-3">
                    <h6 class="text-muted px-3">ADMIN</h6>
                </li>
                <li class="nav-item">
                    <a class="nav-link {{ request()->routeIs('users.*') ? 'active' : '' }}" href="{{ route('users.index') }}">
                        <i class="bi bi-people-fill me-2"></i>Users
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link {{ request()->routeIs('settings.*') ? 'active' : '' }}"
                    href="{{ route('settings.index') }}">
                        <i class="bi bi-gear me-2"></i>
                        <span>Settings</span>
                    </a>
                </li>
                @endif
            </ul>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="main-content" id="content">
        <!-- Alerts -->
        @if(session('success'))
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                {{ session('success') }}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        @endif

        @if(session('error'))
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            {{ session('error') }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
        @endif

        <!-- Dashboard Content Example -->
        <div class="row g-4 mb-4">
            <!-- Active Clients -->
            <div class="col-md-3">
                <div class="stat-card">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <h6 class="text-muted mb-0">Active Clients</h6>
                            <h3 class="stat-value">6</h3>
                            <p class="small text-success mb-0">+12% vs last month</p>
                        </div>
                        <div class="icon-box bg-primary-subtle">
                            <i class="bi bi-people text-primary fs-4"></i>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Ongoing Projects -->
            <div class="col-md-3">
                <div class="stat-card">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <h6 class="text-muted mb-0">Ongoing Projects</h6>
                            <h3 class="stat-value">8</h3>
                            <p class="small text-warning mb-0">8 on schedule</p>
                        </div>
                        <div class="icon-box bg-warning-subtle">
                            <i class="bi bi-building text-warning fs-4"></i>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Pending Surveys -->
            <div class="col-md-3">
                <div class="stat-card">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <h6 class="text-muted mb-0">Pending Surveys</h6>
                            <h3 class="stat-value">4</h3>
                            <p class="small text-danger mb-0">Need attention</p>
                        </div>
                        <div class="icon-box bg-danger-subtle">
                            <i class="bi bi-clipboard-check text-danger fs-4"></i>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Revenue -->
            <div class="col-md-3">
                <div class="stat-card">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <h6 class="text-muted mb-0">Revenue</h6>
                            <h3 class="stat-value">2,500.0M</h3>
                            <p class="small text-success mb-0">+18% growth</p>
                        </div>
                        <div class="icon-box bg-success-subtle">
                            <i class="bi bi-cash-coin text-success fs-4"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Revenue Overview -->
        <div class="row">
            <div class="col-lg-8 mb-4">
                <div class="card h-100">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Revenue Overview</h5>
                        <div class="dropdown">
                            <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" id="revenueFilterDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                This Year
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="revenueFilterDropdown">
                                <li><a class="dropdown-item" href="#">This Month</a></li>
                                <li><a class="dropdown-item" href="#">This Quarter</a></li>
                                <li><a class="dropdown-item active" href="#">This Year</a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item" href="#">Custom Range</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="chart-container">
                            <canvas id="revenueChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Project Status -->
            <div class="col-lg-4 mb-4">
                <div class="card h-100">
                    <div class="card-header">
                        <h5 class="mb-0">Project Status</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between mb-2">
                            <span>Lead</span>
                            <span class="fw-bold">12</span>
                        </div>
                        <div class="project-status-bar">
                            <div class="progress-bar bg-info" role="progressbar" style="width: 20%"></div>
                        </div>

                        <div class="d-flex justify-content-between mb-2">
                            <span>Survey</span>
                            <span class="fw-bold">8</span>
                        </div>
                        <div class="project-status-bar">
                            <div class="progress-bar bg-primary" role="progressbar" style="width: 14%"></div>
                        </div>

                        <div class="d-flex justify-content-between mb-2">
                            <span>Negotiation</span>
                            <span class="fw-bold">15</span>
                        </div>
                        <div class="project-status-bar">
                            <div class="progress-bar bg-warning" role="progressbar" style="width: 25%"></div>
                        </div>

                        <div class="d-flex justify-content-between mb-2">
                            <span>Execution</span>
                            <span class="fw-bold">24</span>
                        </div>
                        <div class="project-status-bar">
                            <div class="progress-bar bg-success" role="progressbar" style="width: 41%"></div>
                        </div>

                        <div class="mt-4">
                            <canvas id="projectStatusChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Recent Projects -->
        <div class="card mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Recent Projects</h5>
                <a href="{{ route('projects.index') }}" class="btn btn-primary">View All</a>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>PROJECT</th>
                                <th>CLIENT</th>
                                <th>STATUS</th>
                                <th>PROGRESS</th>
                                <th>VALUE</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>Office Renovation</td>
                                <td>PT. Maju Jaya</td>
                                <td>
                                    <span class="badge bg-warning text-dark">Survey</span>
                                </td>
                                <td>
                                    <div class="progress" style="height: 6px; width: 120px">
                                        <div class="progress-bar bg-primary" role="progressbar" style="width: 25%"></div>
                                    </div>
                                </td>
                                <td>Rp 450M</td>
                            </tr>
                            <tr>
                                <td>Warehouse Construction</td>
                                <td>PT. Sejahtera Group</td>
                                <td>
                                    <span class="badge bg-success">Execution</span>
                                </td>
                                <td>
                                    <div class="progress" style="height: 6px; width: 120px">
                                        <div class="progress-bar bg-success" role="progressbar" style="width: 75%"></div>
                                    </div>
                                </td>
                                <td>Rp 1.2B</td>
                            </tr>
                            <tr>
                                <td>Retail Store Design</td>
                                <td>Indah Retail</td>
                                <td>
                                    <span class="badge bg-info">Negotiation</span>
                                </td>
                                <td>
                                    <div class="progress" style="height: 6px; width: 120px">
                                        <div class="progress-bar bg-info" role="progressbar" style="width: 45%"></div>
                                    </div>
                                </td>
                                <td>Rp 380M</td>
                            </tr>
                            <tr>
                                <td>Hotel Renovation</td>
                                <td>Grand Hospitality</td>
                                <td>
                                    <span class="badge bg-success">Execution</span>
                                </td>
                                <td>
                                    <div class="progress" style="height: 6px; width: 120px">
                                        <div class="progress-bar bg-success" role="progressbar" style="width: 60%"></div>
                                    </div>
                                </td>
                                <td>Rp 850M</td>
                            </tr>
                            <tr>
                                <td>Office Tower Project</td>
                                <td>Mega Developments</td>
                                <td>
                                    <span class="badge bg-secondary">Lead</span>
                                </td>
                                <td>
                                    <div class="progress" style="height: 6px; width: 120px">
                                        <div class="progress-bar bg-secondary" role="progressbar" style="width: 10%"></div>
                                    </div>
                                </td>
                                <td>Rp 5.7B</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </main>

    <!-- Toast Container for Notifications -->
    <div id="toastContainer" class="toast-container position-fixed bottom-0 end-0 p-3"></div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    @vite(['resources/css/app.css', 'resources/js/app.js'])

    <!-- Custom Scripts -->
    <script>
        // Toggle sidebar on mobile
        document.getElementById('sidebarToggle').addEventListener('click', function() {
            document.getElementById('sidebar').classList.toggle('active');
            document.getElementById('content').classList.toggle('active');
        });

        // Initialize tooltips
        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));

        // Auto-hide alerts after 5 seconds
        window.setTimeout(function() {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(function(alert) {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);

        // Initialize dropdowns manually
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize all dropdowns
            const dropdownElementList = document.querySelectorAll('.dropdown-toggle');
            const dropdownList = [...dropdownElementList].map(dropdownToggleEl => new bootstrap.Dropdown(dropdownToggleEl));

            // Ensure proper z-index handling
            document.querySelectorAll('.dropdown').forEach(dropdown => {
                dropdown.addEventListener('show.bs.dropdown', function () {
                    this.style.zIndex = '1050';
                });
                dropdown.addEventListener('hide.bs.dropdown', function () {
                    this.style.zIndex = '';
                });
            });
        });

        // Revenue Chart
        document.addEventListener('DOMContentLoaded', function() {
            const revenueCtx = document.getElementById('revenueChart');
            if (revenueCtx) {
                const revenueChart = new Chart(revenueCtx, {
                    type: 'line',
                    data: {
                        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                        datasets: [{
                            label: 'Revenue 2025',
                            data: [180, 210, 245, 270, 310, 350, 400, 450, 480, 520, 560, 600],
                            backgroundColor: 'rgba(26, 115, 232, 0.1)',
                            borderColor: '#1a73e8',
                            borderWidth: 2,
                            tension: 0.3,
                            fill: true
                        }, {
                            label: 'Revenue 2024',
                            data: [150, 180, 200, 220, 250, 280, 310, 330, 360, 390, 410, 450],
                            borderColor: '#aaaaaa',
                            borderDash: [5, 5],
                            borderWidth: 2,
                            tension: 0.3,
                            fill: false
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'top',
                                align: 'end'
                            },
                            tooltip: {
                                mode: 'index',
                                intersect: false
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                grid: {
                                    borderDash: [2, 4],
                                    drawBorder: false
                                },
                                ticks: {
                                    callback: function(value) {
                                        return value + 'M';
                                    }
                                }
                            },
                            x: {
                                grid: {
                                    display: false
                                }
                            }
                        },
                        interaction: {
                            intersect: false,
                            mode: 'index'
                        }
                    }
                });
            }

            // Project Status Chart
            const projectCtx = document.getElementById('projectStatusChart');
            if (projectCtx) {
                const projectChart = new Chart(projectCtx, {
                    type: 'doughnut',
                    data: {
                        labels: ['Lead', 'Survey', 'Negotiation', 'Execution'],
                        datasets: [{
                            data: [12, 8, 15, 24],
                            backgroundColor: [
                                '#6c757d',
                                '#0d6efd',
                                '#ffc107',
                                '#198754'
                            ],
                            borderWidth: 0,
                            hoverOffset: 5
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'bottom',
                                labels: {
                                    boxWidth: 12,
                                    padding: 15
                                }
                            }
                        },
                        cutout: '70%'
                    }
                });
            }
        });
    </script>
</body>
</html>

routes\api.php:
<?php

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Route;

Route::middleware('api')->get('/user', function (Request $request) {
    return $request->user();
});

routes\channels.php:
<?php

use Illuminate\Support\Facades\Broadcast;

Broadcast::channel('App.Models.User.{id}', function ($user, $id) {
    return (int) $user->id === (int) $id;
});

// Channel untuk user spesifik
Broadcast::channel('user.{id}', function ($user, $id) {
    return (int) $user->id === (int) $id;
});

// Channel untuk tim/department spesifik
Broadcast::channel('team.{team}', function ($user, $team) {
    return $user->belongsToTeam($team);
});

// Channel publik untuk update status proyek
Broadcast::channel('project-updates', function ($user) {
    return true;
});

routes\console.php:
<?php

use Illuminate\Foundation\Inspiring;
use Illuminate\Support\Facades\Artisan;

Artisan::command('inspire', function () {
    $this->comment(Inspiring::quote());
})->purpose('Display an inspiring quote');

routes\web.php:
<?php

use Illuminate\Support\Facades\Route;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Auth;
use App\Http\Controllers\Auth\LoginController;
use App\Http\Controllers\AuthController;
use App\Http\Controllers\DashboardController;
use App\Http\Controllers\ProjectController;
use App\Http\Controllers\ProfileController;
use App\Http\Controllers\PipelineController;
use App\Http\Controllers\ClientController;
use App\Http\Controllers\LeadController;
use App\Http\Controllers\SurveyController;
use App\Http\Controllers\DocumentController;
use App\Http\Controllers\NotificationController;
use App\Http\Controllers\TestController;
use App\Http\Controllers\ReportController;
use App\Http\Controllers\SettingController;
use App\Http\Controllers\UserController;
use App\Http\Controllers\UserControllerV2;

/*
|--------------------------------------------------------------------------
| Web Routes
|--------------------------------------------------------------------------
*/

// Public routes
Route::get('/', function () {
    return redirect()->route('login');
});

// Authentication routes
Route::middleware('guest')->group(function () {
    Route::get('/login', [AuthController::class, 'showLoginForm'])->name('login');
    Route::post('/login', [AuthController::class, 'login']);

    Route::get('/register', [AuthController::class, 'showRegistrationForm'])->name('register');
    Route::post('/register', [AuthController::class, 'register']);
});

// Auth Routes (legacy) - kept for backward compatibility
Route::get('/login', [LoginController::class, 'showLoginForm'])->name('login');
Route::post('/login', [LoginController::class, 'login']);
Route::post('/logout', [LoginController::class, 'logout'])->name('logout');

// Authenticated Routes
Route::middleware(['auth'])->group(function () {
    // Logout
    Route::post('/logout', [AuthController::class, 'logout'])->name('logout');

    // Dashboard
    Route::get('/dashboard', [DashboardController::class, 'index'])->name('dashboard');

    // User profile
    Route::get('/profile', [UserController::class, 'profile'])->name('profile');
    Route::post('/profile', [UserController::class, 'updateProfile'])->name('users.update-profile');
    Route::post('/profile/password', [UserController::class, 'updatePassword'])->name('users.update-password');

    // Profile (legacy) - kept for backward compatibility
    Route::get('/profile', [ProfileController::class, 'edit'])->name('profile.edit');
    Route::patch('/profile', [ProfileController::class, 'update'])->name('profile.update');
    Route::delete('/profile', [ProfileController::class, 'destroy'])->name('profile.destroy');
    Route::put('/user/password', function(Request $request) {
        $validated = $request->validate([
            'current_password' => ['required', 'current_password'],
            'password' => ['required', 'min:8', 'confirmed'],
        ]);

        $request->user()->update([
            'password' => Hash::make($validated['password']),
        ]);

        return back()->with('status', 'password-updated');
    })->middleware(['auth'])->name('password.update');

    // User management
    Route::middleware(['role:admin'])->group(function () {
        Route::resource('users', UserController::class);
        Route::patch('/users/{user}/toggle-active', [UserController::class, 'toggleActive'])
            ->name('users.toggle-active');
    });

    // Projects
    Route::resource('projects', ProjectController::class)->parameters([
        'projects' => 'project'
    ]);
    Route::get('/projects/create/{client_id?}', [ProjectController::class, 'create'])->name('projects.create.withClient');
    Route::get('/projects/{project}/timeline', [ProjectController::class, 'timeline'])->name('projects.timeline');

    // Pipeline
    Route::resource('pipeline', PipelineController::class);

    // Clients
    Route::resource('clients', ClientController::class);

    // Leads
    Route::resource('leads', LeadController::class);

    // Surveys
    Route::resource('surveys', SurveyController::class);
    Route::get('/surveys/mobile/form', [SurveyController::class, 'mobileForm'])->name('surveys.mobile.form');
    Route::post('/surveys/{survey}/submit', [SurveyController::class, 'submitMobile'])->name('surveys.submit');
    Route::post('/surveys/{survey}/photos', [SurveyController::class, 'uploadPhotos'])->name('surveys.photos.upload');

    // Debugging route for roles and permissions
    Route::get('/test-role', function() {
        $user = Auth::user();
        return [
            'user' => $user->name,
            'roles' => $user->getRoleNames(),
            'permissions' => $user->getAllPermissions()->pluck('name')
        ];
    });

    // Pipeline routes
    Route::middleware(['role:admin|manager|marketing'])->prefix('pipeline')->name('pipeline.')->group(function () {
        Route::get('/', [PipelineController::class, 'index'])->name('index');
        Route::post('/update-stage', [PipelineController::class, 'updateStage'])->name('update-stage');
        Route::get('/funnel', [PipelineController::class, 'funnel'])->name('funnel');
        Route::get('/analytics', [PipelineController::class, 'analytics'])->name('analytics');
    });

    // Document Management Routes
    Route::middleware(['role:admin|manager|marketing'])->prefix('documents')->name('documents.')->group(function () {
        Route::get('/', [DocumentController::class, 'index'])->name('index');
        Route::get('/create', [DocumentController::class, 'create'])->name('create');
        Route::post('/', [DocumentController::class, 'store'])->name('store');
        Route::get('/{document}', [DocumentController::class, 'show'])->name('show');
        Route::get('/{document}/edit', [DocumentController::class, 'edit'])->name('edit');
        Route::put('/{document}', [DocumentController::class, 'update'])->name('update');
        Route::delete('/{document}', [DocumentController::class, 'destroy'])->name('destroy');
        Route::get('/{document}/download', [DocumentController::class, 'download'])->name('download');
        Route::get('/{document}/preview', [DocumentController::class, 'preview'])->name('preview');
        Route::post('/bulk-download', [DocumentController::class, 'bulkDownload'])->name('bulk-download');
    });

    // Notification Routes
    Route::middleware(['auth'])->prefix('notifications')->name('notifications.')->group(function () {
        Route::get('/', [NotificationController::class, 'index'])->name('index');
        Route::get('/unread', [NotificationController::class, 'getUnread'])->name('unread');
        Route::get('/{id}', [NotificationController::class, 'show'])->name('show');
        Route::post('/mark-as-read', [NotificationController::class, 'markAsRead'])->name('mark-as-read');
        Route::post('/mark-all-read', [NotificationController::class, 'markAllAsRead'])->name('mark-all-read');
        Route::delete('/clear-all', [NotificationController::class, 'clearAll'])->name('clear-all');
        Route::delete('/{id}', [NotificationController::class, 'destroy'])->name('destroy');
        Route::get('/notifications/{id}', [NotificationController::class, 'show'])->name('notifications.show');
    });

    Route::get('/test-notification', [TestController::class, 'testNotification']);

    // Report Routes
    Route::middleware(['auth', 'role:admin|manager|marketing'])->prefix('reports')->name('reports.')->group(function () {
        Route::get('/', [ReportController::class, 'index'])->name('index');
        Route::get('/generate', [ReportController::class, 'generate'])->name('generate');
    });

    // Settings Routes
    Route::middleware(['auth', 'role:admin'])->prefix('settings')->name('settings.')->group(function () {
        Route::get('/', [SettingController::class, 'index'])->name('index');
        Route::post('/update/general', [SettingController::class, 'updateGeneral'])->name('update.general');
        Route::post('/update/company', [SettingController::class, 'updateCompany'])->name('update.company');
        Route::post('/update/notification', [SettingController::class, 'updateNotification'])->name('update.notification');
        Route::post('/update/user', [SettingController::class, 'updateUser'])->name('update.user');

        // System Info
        Route::get('/system', [SettingController::class, 'system'])->name('system');

        // Backup & Restore
        Route::get('/backup', [SettingController::class, 'backup'])->name('backup');
        Route::get('/backup/create', [SettingController::class, 'createBackup'])->name('create-backup');
        Route::get('/backup/download/{filename}', [SettingController::class, 'downloadBackup'])->name('download-backup');
        Route::delete('/backup/delete/{filename}', [SettingController::class, 'deleteBackup'])->name('delete-backup');

        // Logs
        Route::get('/logs', [SettingController::class, 'logs'])->name('logs');
        Route::get('/logs/view/{filename}', [SettingController::class, 'viewLog'])->name('view-log');
        Route::get('/logs/download/{filename}', [SettingController::class, 'downloadLog'])->name('download-log');

        // Clear cache
        Route::get('/clear-cache', function() {
            \Artisan::call('optimize:clear');
            return back()->with('success', 'Cache cleared successfully!');
        })->name('clear-cache');
    });

    Route::middleware(['auth'])->group(function () {
    Route::patch('/surveys/{survey}/assign/{user}', [SurveyController::class, 'assignSurvey'])
        ->name('surveys.assign')
        ->middleware('can:assign-surveys'); // Optional: tambahkan middleware permission jika menggunakan Spatie Permission
});
});

tests\Feature\ExampleTest.php:
<?php

namespace Tests\Feature;

// use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class ExampleTest extends TestCase
{
    /**
     * A basic test example.
     */
    public function test_the_application_returns_a_successful_response(): void
    {
        $response = $this->get('/');

        $response->assertStatus(200);
    }
}

tests\TestCase.php:
<?php

namespace Tests;

use Illuminate\Foundation\Testing\TestCase as BaseTestCase;

abstract class TestCase extends BaseTestCase
{
    //
}

.env:
APP_NAME="Hansen CRM Kampus"
APP_ENV=local
APP_KEY=base64:Zma5kzoYvqxTDaQ49JEmQV8tylcT9izrBBPqLo8Xz+w=
APP_DEBUG=true
APP_URL=http://127.0.0.1:8000

APP_LOCALE=en
APP_FALLBACK_LOCALE=en
APP_FAKER_LOCALE=en_US

APP_MAINTENANCE_DRIVER=file
# APP_MAINTENANCE_STORE=database

PHP_CLI_SERVER_WORKERS=4

BCRYPT_ROUNDS=12

LOG_CHANNEL=stack
LOG_STACK=single
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug

DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=hansen_crm_kampus
DB_USERNAME=root
DB_PASSWORD=

SESSION_DRIVER=database
SESSION_LIFETIME=120
SESSION_ENCRYPT=false
SESSION_PATH=/
SESSION_DOMAIN=null

BROADCAST_CONNECTION=log
FILESYSTEM_DISK=local
QUEUE_CONNECTION=database

CACHE_STORE=database
# CACHE_PREFIX=

MEMCACHED_HOST=127.0.0.1

REDIS_CLIENT=phpredis
REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_MAILER=log
MAIL_SCHEME=null
MAIL_HOST=127.0.0.1
MAIL_PORT=2525
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="${APP_NAME}"

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

MEMORY_LIMIT=256M
MAX_EXECUTION_TIME=300
POST_MAX_SIZE=50M
UPLOAD_MAX_FILESIZE=10M

BROADCAST_DRIVER=null

PUSHER_APP_ID=2014952
PUSHER_APP_KEY=851eecb2e2c0bf8ffc6e
PUSHER_APP_SECRET=b7d82db5e2c0eb4db5a5
PUSHER_APP_CLUSTER=your-cluster
PUSHER_HOST=
PUSHER_PORT=443
PUSHER_SCHEME=https
PUSHER_APP_CLUSTER=ap1

VITE_APP_NAME="${APP_NAME}"
VITE_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
VITE_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"









